Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    AS
    CALLABLE
    CATCH
    CLONE
    CLOSETAGAL
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DECLARE
    DIE
    DOT_DOT
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    PLUSEQUAL
    QUOTES
    REQUIRE_ONCE
    STATIC
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    XOR
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENTAG declaration_list CLOSETAG
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> area fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     declaration -> echo_stmt
Rule 10    declaration -> selection_stmt
Rule 11    declaration -> iteration_stmt
Rule 12    declaration -> typeclass
Rule 13    declaration -> fun_call SEMI
Rule 14    echo_stmt -> echo_stmt ECHO echo_params SEMI
Rule 15    echo_stmt -> empty
Rule 16    echo_params -> echo_param
Rule 17    echo_params -> echo_param DOT echo_params
Rule 18    echo_param -> STRING
Rule 19    echo_param -> IDVAR
Rule 20    echo_param -> NUM
Rule 21    echo_param -> boolean
Rule 22    echo_param -> fun_declaration
Rule 23    echo_param -> fun_call
Rule 24    header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI
Rule 25    header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI
Rule 26    class_declaration -> area CLASS ID LBLOCK attributes RBLOCK
Rule 27    class_declaration -> CLASS ID LBLOCK attributes RBLOCK
Rule 28    attributes -> attribute
Rule 29    attributes -> attribute attributes
Rule 30    attribute -> attribute area var_declaration
Rule 31    attribute -> area var_declaration
Rule 32    attribute -> attribute area fun_declaration
Rule 33    attribute -> area fun_declaration
Rule 34    attribute -> fun_declaration
Rule 35    area -> PRIVATE
Rule 36    area -> PUBLIC
Rule 37    area -> PROTECTED
Rule 38    var_declaration -> IDVAR SEMI var_declaration
Rule 39    var_declaration -> IDVAR SEMI
Rule 40    var_declaration -> TIMESTIMES IDVAR SEMI
Rule 41    var_declaration -> TIMESTIMES IDVAR SEMI var_declaration
Rule 42    var_declaration -> assing_var IGUAL NUM SEMI var_declaration
Rule 43    var_declaration -> assing_var IGUAL NUM SEMI
Rule 44    var_declaration -> assing_var IGUAL STRING SEMI var_declaration
Rule 45    var_declaration -> assing_var IGUAL STRING SEMI
Rule 46    var_declaration -> assing_var IGUAL boolean SEMI var_declaration
Rule 47    var_declaration -> assing_var IGUAL boolean SEMI
Rule 48    var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration
Rule 49    var_declaration -> assing_var IGUAL IDVAR SEMI
Rule 50    var_declaration -> assing_var IGUAL read_data SEMI
Rule 51    var_declaration -> IDVAR IGUAL array_declare SEMI
Rule 52    var_declaration -> AMPERSANT IDVAR SEMI var_declaration
Rule 53    var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
Rule 54    var_declaration -> AMPERSANT IDVAR SEMI
Rule 55    var_declaration -> assing_var IGUAL simple_expression SEMI
Rule 56    var_declaration -> IDVAR IGUAL simple_expression SEMI
Rule 57    read_data -> POST LBRACKET STRING RBRACKET
Rule 58    read_data -> GET LBRACKET STRING RBRACKET
Rule 59    array_declare -> ARRAY LPAREN array_values RPAREN
Rule 60    array_values -> array_value
Rule 61    array_values -> array_value COMMA array_values
Rule 62    array_value -> factor DARROW factor
Rule 63    assing_var -> var
Rule 64    assing_var -> var ARROW ID
Rule 65    assing_var -> var DARROW ID
Rule 66    IGUAL -> EQUAL
Rule 67    IGUAL -> MUL_EQUAL
Rule 68    IGUAL -> DIV_EQUAL
Rule 69    IGUAL -> CONCAT_EQUAL
Rule 70    IGUAL -> MOD_EQUAL
Rule 71    IGUAL -> PLUS_EQUAL
Rule 72    IGUAL -> MINUS_EQUAL
Rule 73    fun_declaration -> FUNCTION ID LPAREN params RPAREN
Rule 74    fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt
Rule 75    fun_call -> ID LPAREN params RPAREN
Rule 76    fun_call -> assing_var LPAREN params RPAREN
Rule 77    fun_call -> PRINT LPAREN echo_params RPAREN
Rule 78    fun_call -> PRINTR LPAREN IDVAR RPAREN
Rule 79    fun_call -> VARDUMP LPAREN IDVAR RPAREN
Rule 80    params -> param_list
Rule 81    params -> empty
Rule 82    param_list -> param
Rule 83    param_list -> param COMMA param_list
Rule 84    param -> IDVAR
Rule 85    param -> IDVAR LBRACKET RBRACKET
Rule 86    param -> term
Rule 87    compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
Rule 88    local_declarations -> local_declarations var_declaration
Rule 89    local_declarations -> empty
Rule 90    statement_list -> statement_list statement
Rule 91    statement_list -> empty
Rule 92    statement -> expression_stmt
Rule 93    statement -> compount_stmt
Rule 94    statement -> selection_stmt
Rule 95    statement -> iteration_stmt
Rule 96    statement -> return_stmt
Rule 97    statement -> class_declaration
Rule 98    statement -> echo_stmt
Rule 99    expression_stmt -> expression SEMI
Rule 100   selection_stmt -> IF LPAREN expression RPAREN statement
Rule 101   selection_stmt -> IF LPAREN expression RPAREN statement selection
Rule 102   selection -> ELSE statement
Rule 103   selection -> ELSEIF statement selection
Rule 104   selection_stmt -> SWITCH LPAREN var RPAREN statement
Rule 105   selection_stmt -> CASE NUM COLON statement BREAK SEMI
Rule 106   selection_stmt -> CASE STRING COLON statement BREAK SEMI
Rule 107   selection_stmt -> DEFAULT COLON statement BREAK SEMI
Rule 108   iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
Rule 109   iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 110   iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
Rule 111   return_stmt -> RETURN SEMI
Rule 112   return_stmt -> RETURN expression SEMI
Rule 113   expression -> assing_var EQUAL expression
Rule 114   expression -> simple_expression
Rule 115   expression -> assing_var EQUAL AMPERSANT IDVAR
Rule 116   expression -> expression AND expression
Rule 117   expression -> expression OR expression
Rule 118   expression -> assing_var
Rule 119   expression -> fun_call
Rule 120   var -> IDVAR
Rule 121   var -> IDVAR LBRACKET expression RBRACKET
Rule 122   simple_expression -> additive_expression relop additive_expression
Rule 123   simple_expression -> additive_expression
Rule 124   relop -> LESS
Rule 125   relop -> LESSEQUAL
Rule 126   relop -> GREATER
Rule 127   relop -> GREATEREQUAL
Rule 128   relop -> DEQUAL
Rule 129   relop -> DISTINT
Rule 130   relop -> ISEQUAL
Rule 131   relop -> IS_IDENTICAL
Rule 132   relop -> IS_NOT_IDENTICAL
Rule 133   relop -> SR_EQUAL
Rule 134   relop -> SL_EQUAL
Rule 135   relop -> AND_EQUAL
Rule 136   relop -> OR_EQUAL
Rule 137   relop -> XOR_EQUAL
Rule 138   relop -> CONCAT_EQUAL
Rule 139   additive_expression -> additive_expression addop term
Rule 140   additive_expression -> term
Rule 141   additive_expression -> term MINUSMINUS
Rule 142   additive_expression -> term PLUSPLUS
Rule 143   additive_expression -> fun_call
Rule 144   addop -> PLUS
Rule 145   addop -> MINUS
Rule 146   term -> term mulop factor
Rule 147   term -> factor
Rule 148   mulop -> TIMES
Rule 149   mulop -> DIVIDE
Rule 150   factor -> LPAREN expression RPAREN
Rule 151   factor -> var
Rule 152   factor -> NUM
Rule 153   factor -> STRING
Rule 154   factor -> boolean
Rule 155   factor -> IDVAR LPAREN args RPAREN
Rule 156   args -> args_list
Rule 157   args -> empty
Rule 158   args -> VOID
Rule 159   args_list -> args_list COMMA expression
Rule 160   args_list -> expression
Rule 161   boolean -> TRUE
Rule 162   boolean -> FALSE
Rule 163   typeclass -> ID IDVAR EQUAL NEW constructor SEMI
Rule 164   typeclass -> IDVAR EQUAL NEW constructor SEMI
Rule 165   constructor -> ID LPAREN RPAREN
Rule 166   constructor -> ID LPAREN args RPAREN
Rule 167   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 52 53 54 115
AND                  : 116
AND_EQUAL            : 135
APOSTROPHE           : 
ARRAY                : 59
ARROW                : 64
AS                   : 
BREAK                : 105 106 107
CALLABLE             : 
CASE                 : 105 106
CATCH                : 
CLASS                : 26 27
CLONE                : 
CLOSETAG             : 1
CLOSETAGAL           : 
COLON                : 105 106 107
COMMA                : 61 83 159
COMMENTS             : 
COMMENTS_C99         : 
CONCAT_EQUAL         : 69 138
CONST                : 
CONTINUE             : 
DARROW               : 62 65
DECLARE              : 
DEFAULT              : 107
DEQUAL               : 128
DIE                  : 
DISTINT              : 129
DIVIDE               : 149
DIV_EQUAL            : 68
DO                   : 110
DOT                  : 17
DOT_DOT              : 
ECHO                 : 14
ELSE                 : 102
ELSEIF               : 103
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 66 113 115 163 164
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 162
FINALLY              : 
FOR                  : 108
FOREACH              : 
FUNCTION             : 73 74
GET                  : 58
GLOBAL               : 
GOTO                 : 
GREATER              : 126
GREATEREQUAL         : 127
HASHTAG              : 
ID                   : 26 27 64 65 73 74 75 163 165 166
IDVAR                : 19 38 39 40 41 48 49 51 52 53 53 54 56 78 79 84 85 115 120 121 155 163 164
IF                   : 100 101
IMPLEMENTS           : 
INCLUDE              : 25
INCLUDE_ONCE         : 
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
ISEQUAL              : 130
ISSET                : 
IS_IDENTICAL         : 131
IS_NOT_IDENTICAL     : 132
LBLOCK               : 26 27 87 110
LBRACKET             : 57 58 85 121
LESS                 : 124
LESSEQUAL            : 125
LIST                 : 
LPAREN               : 24 25 59 73 74 75 76 77 78 79 100 101 104 108 109 110 150 155 165 166
MINUS                : 145
MINUSEQUAL           : 
MINUSMINUS           : 141
MINUS_EQUAL          : 72
MOD_EQUAL            : 70
MUL_EQUAL            : 67
NAMESPACE            : 
NEW                  : 163 164
NUM                  : 20 42 43 105 152
OPENTAG              : 1
OR                   : 117
OR_EQUAL             : 136
PLUS                 : 144
PLUSEQUAL            : 
PLUSPLUS             : 142
PLUS_EQUAL           : 71
POST                 : 57
PRINT                : 77
PRINTR               : 78
PRIVATE              : 35
PROTECTED            : 37
PUBLIC               : 36
QUOTES               : 
RBLOCK               : 26 27 87 110
RBRACKET             : 57 58 85 121
REQUIRE              : 24
REQUIRE_ONCE         : 
RETURN               : 111 112
RPAREN               : 24 25 59 73 74 75 76 77 78 79 100 101 104 108 109 110 150 155 165 166
SEMI                 : 13 14 24 25 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 99 105 106 107 108 110 111 112 163 164
SL_EQUAL             : 134
SR_EQUAL             : 133
STATIC               : 
STRING               : 18 24 25 44 45 57 58 106 153
SWITCH               : 104
THROW                : 
TIMES                : 148
TIMESTIMES           : 40 41
TRAIT                : 
TRUE                 : 161
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VARDUMP              : 79
VOID                 : 158
WHILE                : 109 110
XOR                  : 
XOR_EQUAL            : 137
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

IGUAL                : 42 43 44 45 46 47 48 49 50 51 53 55 56
additive_expression  : 108 122 122 123 139
addop                : 139
area                 : 6 26 30 31 32 33
args                 : 155 166
args_list            : 156 159
array_declare        : 51
array_value          : 60 61
array_values         : 59 61
assing_var           : 42 43 44 45 46 47 48 49 50 55 76 113 115 118
attribute            : 28 29 30 32
attributes           : 26 27 29
boolean              : 21 46 47 154
class_declaration    : 8 97
compount_stmt        : 74 93
constructor          : 163 164
declaration          : 2 3
declaration_list     : 1 3
echo_param           : 16 17
echo_params          : 14 17 77
echo_stmt            : 9 14 87 87 87 98
empty                : 15 81 89 91 157
expression           : 99 100 101 108 109 110 112 113 116 116 117 117 121 150 159 160
expression_stmt      : 92
factor               : 62 62 146 147
fun_call             : 13 23 119 143
fun_declaration      : 5 6 22 32 33 34
header_declaration   : 7
iteration_stmt       : 11 95
local_declarations   : 87 88
mulop                : 146
param                : 82 83
param_list           : 80 83
params               : 73 74 75 76
program              : 0
read_data            : 50
relop                : 122
return_stmt          : 96
selection            : 101 103
selection_stmt       : 10 53 94
simple_expression    : 55 56 114
statement            : 90 100 101 102 103 104 105 106 107 108 109 110
statement_list       : 87 90
term                 : 86 139 140 141 142 146
typeclass            : 12
var                  : 63 64 65 104 151
var_declaration      : 4 30 31 38 41 42 44 46 48 52 88 108

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENTAG declaration_list CLOSETAG

    OPENTAG         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENTAG . declaration_list CLOSETAG
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (13) declaration -> . fun_call SEMI
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (24) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (25) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (163) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (164) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (167) empty -> .
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
    IDVAR           shift and go to state 15
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    ECHO            reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 167 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 167 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 167 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    fun_call                       shift and go to state 14
    assing_var                     shift and go to state 17
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 3

    (1) program -> OPENTAG declaration_list . CLOSETAG

    CLOSETAG        shift and go to state 39


state 4

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (13) declaration -> . fun_call SEMI
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (24) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (25) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (163) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (164) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (167) empty -> .
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! reduce/reduce conflict for CLOSETAG resolved using rule 2 (declaration_list -> declaration .)
    CLOSETAG        reduce using rule 2 (declaration_list -> declaration .)
    IDVAR           shift and go to state 15
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    ECHO            reduce using rule 167 (empty -> .)

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 167 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 167 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 167 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! CLOSETAG        [ reduce using rule 167 (empty -> .) ]

    declaration                    shift and go to state 4
    declaration_list               shift and go to state 40
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    fun_call                       shift and go to state 14
    assing_var                     shift and go to state 17
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 5

    (4) declaration -> var_declaration .

    IDVAR           reduce using rule 4 (declaration -> var_declaration .)
    TIMESTIMES      reduce using rule 4 (declaration -> var_declaration .)
    AMPERSANT       reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PROTECTED       reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    ID              reduce using rule 4 (declaration -> var_declaration .)
    PRINT           reduce using rule 4 (declaration -> var_declaration .)
    PRINTR          reduce using rule 4 (declaration -> var_declaration .)
    VARDUMP         reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    CLOSETAG        reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    IDVAR           reduce using rule 5 (declaration -> fun_declaration .)
    TIMESTIMES      reduce using rule 5 (declaration -> fun_declaration .)
    AMPERSANT       reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> fun_declaration .)
    PROTECTED       reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    CLASS           reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    DO              reduce using rule 5 (declaration -> fun_declaration .)
    ID              reduce using rule 5 (declaration -> fun_declaration .)
    PRINT           reduce using rule 5 (declaration -> fun_declaration .)
    PRINTR          reduce using rule 5 (declaration -> fun_declaration .)
    VARDUMP         reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    CLOSETAG        reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> area . fun_declaration
    (26) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    CLASS           shift and go to state 42
    FUNCTION        shift and go to state 19

    fun_declaration                shift and go to state 41

state 8

    (7) declaration -> header_declaration .

    IDVAR           reduce using rule 7 (declaration -> header_declaration .)
    TIMESTIMES      reduce using rule 7 (declaration -> header_declaration .)
    AMPERSANT       reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PROTECTED       reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    ID              reduce using rule 7 (declaration -> header_declaration .)
    PRINT           reduce using rule 7 (declaration -> header_declaration .)
    PRINTR          reduce using rule 7 (declaration -> header_declaration .)
    VARDUMP         reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    CLOSETAG        reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> class_declaration .

    IDVAR           reduce using rule 8 (declaration -> class_declaration .)
    TIMESTIMES      reduce using rule 8 (declaration -> class_declaration .)
    AMPERSANT       reduce using rule 8 (declaration -> class_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PROTECTED       reduce using rule 8 (declaration -> class_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> class_declaration .)
    INCLUDE         reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    ID              reduce using rule 8 (declaration -> class_declaration .)
    PRINT           reduce using rule 8 (declaration -> class_declaration .)
    PRINTR          reduce using rule 8 (declaration -> class_declaration .)
    VARDUMP         reduce using rule 8 (declaration -> class_declaration .)
    ECHO            reduce using rule 8 (declaration -> class_declaration .)
    CLOSETAG        reduce using rule 8 (declaration -> class_declaration .)


state 10

    (9) declaration -> echo_stmt .
    (14) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    IDVAR           reduce using rule 9 (declaration -> echo_stmt .)
    TIMESTIMES      reduce using rule 9 (declaration -> echo_stmt .)
    AMPERSANT       reduce using rule 9 (declaration -> echo_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> echo_stmt .)
    PRIVATE         reduce using rule 9 (declaration -> echo_stmt .)
    PUBLIC          reduce using rule 9 (declaration -> echo_stmt .)
    PROTECTED       reduce using rule 9 (declaration -> echo_stmt .)
    REQUIRE         reduce using rule 9 (declaration -> echo_stmt .)
    INCLUDE         reduce using rule 9 (declaration -> echo_stmt .)
    CLASS           reduce using rule 9 (declaration -> echo_stmt .)
    IF              reduce using rule 9 (declaration -> echo_stmt .)
    SWITCH          reduce using rule 9 (declaration -> echo_stmt .)
    CASE            reduce using rule 9 (declaration -> echo_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> echo_stmt .)
    FOR             reduce using rule 9 (declaration -> echo_stmt .)
    WHILE           reduce using rule 9 (declaration -> echo_stmt .)
    DO              reduce using rule 9 (declaration -> echo_stmt .)
    ID              reduce using rule 9 (declaration -> echo_stmt .)
    PRINT           reduce using rule 9 (declaration -> echo_stmt .)
    PRINTR          reduce using rule 9 (declaration -> echo_stmt .)
    VARDUMP         reduce using rule 9 (declaration -> echo_stmt .)
    CLOSETAG        reduce using rule 9 (declaration -> echo_stmt .)
    ECHO            shift and go to state 43

  ! ECHO            [ reduce using rule 9 (declaration -> echo_stmt .) ]


state 11

    (10) declaration -> selection_stmt .

    IDVAR           reduce using rule 10 (declaration -> selection_stmt .)
    TIMESTIMES      reduce using rule 10 (declaration -> selection_stmt .)
    AMPERSANT       reduce using rule 10 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 10 (declaration -> selection_stmt .)
    PRIVATE         reduce using rule 10 (declaration -> selection_stmt .)
    PUBLIC          reduce using rule 10 (declaration -> selection_stmt .)
    PROTECTED       reduce using rule 10 (declaration -> selection_stmt .)
    REQUIRE         reduce using rule 10 (declaration -> selection_stmt .)
    INCLUDE         reduce using rule 10 (declaration -> selection_stmt .)
    CLASS           reduce using rule 10 (declaration -> selection_stmt .)
    IF              reduce using rule 10 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 10 (declaration -> selection_stmt .)
    CASE            reduce using rule 10 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 10 (declaration -> selection_stmt .)
    FOR             reduce using rule 10 (declaration -> selection_stmt .)
    WHILE           reduce using rule 10 (declaration -> selection_stmt .)
    DO              reduce using rule 10 (declaration -> selection_stmt .)
    ID              reduce using rule 10 (declaration -> selection_stmt .)
    PRINT           reduce using rule 10 (declaration -> selection_stmt .)
    PRINTR          reduce using rule 10 (declaration -> selection_stmt .)
    VARDUMP         reduce using rule 10 (declaration -> selection_stmt .)
    ECHO            reduce using rule 10 (declaration -> selection_stmt .)
    CLOSETAG        reduce using rule 10 (declaration -> selection_stmt .)


state 12

    (11) declaration -> iteration_stmt .

    IDVAR           reduce using rule 11 (declaration -> iteration_stmt .)
    TIMESTIMES      reduce using rule 11 (declaration -> iteration_stmt .)
    AMPERSANT       reduce using rule 11 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 11 (declaration -> iteration_stmt .)
    PRIVATE         reduce using rule 11 (declaration -> iteration_stmt .)
    PUBLIC          reduce using rule 11 (declaration -> iteration_stmt .)
    PROTECTED       reduce using rule 11 (declaration -> iteration_stmt .)
    REQUIRE         reduce using rule 11 (declaration -> iteration_stmt .)
    INCLUDE         reduce using rule 11 (declaration -> iteration_stmt .)
    CLASS           reduce using rule 11 (declaration -> iteration_stmt .)
    IF              reduce using rule 11 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 11 (declaration -> iteration_stmt .)
    CASE            reduce using rule 11 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 11 (declaration -> iteration_stmt .)
    FOR             reduce using rule 11 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 11 (declaration -> iteration_stmt .)
    DO              reduce using rule 11 (declaration -> iteration_stmt .)
    ID              reduce using rule 11 (declaration -> iteration_stmt .)
    PRINT           reduce using rule 11 (declaration -> iteration_stmt .)
    PRINTR          reduce using rule 11 (declaration -> iteration_stmt .)
    VARDUMP         reduce using rule 11 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 11 (declaration -> iteration_stmt .)
    CLOSETAG        reduce using rule 11 (declaration -> iteration_stmt .)


state 13

    (12) declaration -> typeclass .

    IDVAR           reduce using rule 12 (declaration -> typeclass .)
    TIMESTIMES      reduce using rule 12 (declaration -> typeclass .)
    AMPERSANT       reduce using rule 12 (declaration -> typeclass .)
    FUNCTION        reduce using rule 12 (declaration -> typeclass .)
    PRIVATE         reduce using rule 12 (declaration -> typeclass .)
    PUBLIC          reduce using rule 12 (declaration -> typeclass .)
    PROTECTED       reduce using rule 12 (declaration -> typeclass .)
    REQUIRE         reduce using rule 12 (declaration -> typeclass .)
    INCLUDE         reduce using rule 12 (declaration -> typeclass .)
    CLASS           reduce using rule 12 (declaration -> typeclass .)
    IF              reduce using rule 12 (declaration -> typeclass .)
    SWITCH          reduce using rule 12 (declaration -> typeclass .)
    CASE            reduce using rule 12 (declaration -> typeclass .)
    DEFAULT         reduce using rule 12 (declaration -> typeclass .)
    FOR             reduce using rule 12 (declaration -> typeclass .)
    WHILE           reduce using rule 12 (declaration -> typeclass .)
    DO              reduce using rule 12 (declaration -> typeclass .)
    ID              reduce using rule 12 (declaration -> typeclass .)
    PRINT           reduce using rule 12 (declaration -> typeclass .)
    PRINTR          reduce using rule 12 (declaration -> typeclass .)
    VARDUMP         reduce using rule 12 (declaration -> typeclass .)
    ECHO            reduce using rule 12 (declaration -> typeclass .)
    CLOSETAG        reduce using rule 12 (declaration -> typeclass .)


state 14

    (13) declaration -> fun_call . SEMI

    SEMI            shift and go to state 44


state 15

    (38) var_declaration -> IDVAR . SEMI var_declaration
    (39) var_declaration -> IDVAR . SEMI
    (51) var_declaration -> IDVAR . IGUAL array_declare SEMI
    (56) var_declaration -> IDVAR . IGUAL simple_expression SEMI
    (164) typeclass -> IDVAR . EQUAL NEW constructor SEMI
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET
    (66) IGUAL -> . EQUAL
    (67) IGUAL -> . MUL_EQUAL
    (68) IGUAL -> . DIV_EQUAL
    (69) IGUAL -> . CONCAT_EQUAL
    (70) IGUAL -> . MOD_EQUAL
    (71) IGUAL -> . PLUS_EQUAL
    (72) IGUAL -> . MINUS_EQUAL

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for MUL_EQUAL resolved as shift
  ! shift/reduce conflict for DIV_EQUAL resolved as shift
  ! shift/reduce conflict for CONCAT_EQUAL resolved as shift
  ! shift/reduce conflict for MOD_EQUAL resolved as shift
  ! shift/reduce conflict for PLUS_EQUAL resolved as shift
  ! shift/reduce conflict for MINUS_EQUAL resolved as shift
    SEMI            shift and go to state 45
    EQUAL           shift and go to state 47
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    LPAREN          reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48
    MUL_EQUAL       shift and go to state 49
    DIV_EQUAL       shift and go to state 50
    CONCAT_EQUAL    shift and go to state 51
    MOD_EQUAL       shift and go to state 52
    PLUS_EQUAL      shift and go to state 53
    MINUS_EQUAL     shift and go to state 54

  ! EQUAL           [ reduce using rule 120 (var -> IDVAR .) ]
  ! MUL_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! DIV_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! CONCAT_EQUAL    [ reduce using rule 120 (var -> IDVAR .) ]
  ! MOD_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! PLUS_EQUAL      [ reduce using rule 120 (var -> IDVAR .) ]
  ! MINUS_EQUAL     [ reduce using rule 120 (var -> IDVAR .) ]

    IGUAL                          shift and go to state 46

state 16

    (40) var_declaration -> TIMESTIMES . IDVAR SEMI
    (41) var_declaration -> TIMESTIMES . IDVAR SEMI var_declaration

    IDVAR           shift and go to state 55


state 17

    (42) var_declaration -> assing_var . IGUAL NUM SEMI var_declaration
    (43) var_declaration -> assing_var . IGUAL NUM SEMI
    (44) var_declaration -> assing_var . IGUAL STRING SEMI var_declaration
    (45) var_declaration -> assing_var . IGUAL STRING SEMI
    (46) var_declaration -> assing_var . IGUAL boolean SEMI var_declaration
    (47) var_declaration -> assing_var . IGUAL boolean SEMI
    (48) var_declaration -> assing_var . IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> assing_var . IGUAL IDVAR SEMI
    (50) var_declaration -> assing_var . IGUAL read_data SEMI
    (55) var_declaration -> assing_var . IGUAL simple_expression SEMI
    (76) fun_call -> assing_var . LPAREN params RPAREN
    (66) IGUAL -> . EQUAL
    (67) IGUAL -> . MUL_EQUAL
    (68) IGUAL -> . DIV_EQUAL
    (69) IGUAL -> . CONCAT_EQUAL
    (70) IGUAL -> . MOD_EQUAL
    (71) IGUAL -> . PLUS_EQUAL
    (72) IGUAL -> . MINUS_EQUAL

    LPAREN          shift and go to state 57
    EQUAL           shift and go to state 58
    MUL_EQUAL       shift and go to state 49
    DIV_EQUAL       shift and go to state 50
    CONCAT_EQUAL    shift and go to state 51
    MOD_EQUAL       shift and go to state 52
    PLUS_EQUAL      shift and go to state 53
    MINUS_EQUAL     shift and go to state 54

    IGUAL                          shift and go to state 56

state 18

    (52) var_declaration -> AMPERSANT . IDVAR SEMI var_declaration
    (53) var_declaration -> AMPERSANT . IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> AMPERSANT . IDVAR SEMI

    IDVAR           shift and go to state 59


state 19

    (73) fun_declaration -> FUNCTION . ID LPAREN params RPAREN
    (74) fun_declaration -> FUNCTION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 60


state 20

    (163) typeclass -> ID . IDVAR EQUAL NEW constructor SEMI
    (75) fun_call -> ID . LPAREN params RPAREN

    IDVAR           shift and go to state 61
    LPAREN          shift and go to state 62


state 21

    (35) area -> PRIVATE .

    CLASS           reduce using rule 35 (area -> PRIVATE .)
    FUNCTION        reduce using rule 35 (area -> PRIVATE .)
    IDVAR           reduce using rule 35 (area -> PRIVATE .)
    TIMESTIMES      reduce using rule 35 (area -> PRIVATE .)
    AMPERSANT       reduce using rule 35 (area -> PRIVATE .)


state 22

    (36) area -> PUBLIC .

    CLASS           reduce using rule 36 (area -> PUBLIC .)
    FUNCTION        reduce using rule 36 (area -> PUBLIC .)
    IDVAR           reduce using rule 36 (area -> PUBLIC .)
    TIMESTIMES      reduce using rule 36 (area -> PUBLIC .)
    AMPERSANT       reduce using rule 36 (area -> PUBLIC .)


state 23

    (37) area -> PROTECTED .

    CLASS           reduce using rule 37 (area -> PROTECTED .)
    FUNCTION        reduce using rule 37 (area -> PROTECTED .)
    IDVAR           reduce using rule 37 (area -> PROTECTED .)
    TIMESTIMES      reduce using rule 37 (area -> PROTECTED .)
    AMPERSANT       reduce using rule 37 (area -> PROTECTED .)


state 24

    (24) header_declaration -> REQUIRE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 63


state 25

    (25) header_declaration -> INCLUDE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 64


state 26

    (27) class_declaration -> CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 65


state 27

    (15) echo_stmt -> empty .

    ECHO            reduce using rule 15 (echo_stmt -> empty .)
    IDVAR           reduce using rule 15 (echo_stmt -> empty .)
    TIMESTIMES      reduce using rule 15 (echo_stmt -> empty .)
    AMPERSANT       reduce using rule 15 (echo_stmt -> empty .)
    FUNCTION        reduce using rule 15 (echo_stmt -> empty .)
    PRIVATE         reduce using rule 15 (echo_stmt -> empty .)
    PUBLIC          reduce using rule 15 (echo_stmt -> empty .)
    PROTECTED       reduce using rule 15 (echo_stmt -> empty .)
    REQUIRE         reduce using rule 15 (echo_stmt -> empty .)
    INCLUDE         reduce using rule 15 (echo_stmt -> empty .)
    CLASS           reduce using rule 15 (echo_stmt -> empty .)
    IF              reduce using rule 15 (echo_stmt -> empty .)
    SWITCH          reduce using rule 15 (echo_stmt -> empty .)
    CASE            reduce using rule 15 (echo_stmt -> empty .)
    DEFAULT         reduce using rule 15 (echo_stmt -> empty .)
    FOR             reduce using rule 15 (echo_stmt -> empty .)
    WHILE           reduce using rule 15 (echo_stmt -> empty .)
    DO              reduce using rule 15 (echo_stmt -> empty .)
    ID              reduce using rule 15 (echo_stmt -> empty .)
    PRINT           reduce using rule 15 (echo_stmt -> empty .)
    PRINTR          reduce using rule 15 (echo_stmt -> empty .)
    VARDUMP         reduce using rule 15 (echo_stmt -> empty .)
    CLOSETAG        reduce using rule 15 (echo_stmt -> empty .)
    BREAK           reduce using rule 15 (echo_stmt -> empty .)
    SEMI            reduce using rule 15 (echo_stmt -> empty .)
    LBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    RETURN          reduce using rule 15 (echo_stmt -> empty .)
    LPAREN          reduce using rule 15 (echo_stmt -> empty .)
    NUM             reduce using rule 15 (echo_stmt -> empty .)
    STRING          reduce using rule 15 (echo_stmt -> empty .)
    TRUE            reduce using rule 15 (echo_stmt -> empty .)
    FALSE           reduce using rule 15 (echo_stmt -> empty .)
    RBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    ELSE            reduce using rule 15 (echo_stmt -> empty .)
    ELSEIF          reduce using rule 15 (echo_stmt -> empty .)


state 28

    (100) selection_stmt -> IF . LPAREN expression RPAREN statement
    (101) selection_stmt -> IF . LPAREN expression RPAREN statement selection

    LPAREN          shift and go to state 66


state 29

    (104) selection_stmt -> SWITCH . LPAREN var RPAREN statement

    LPAREN          shift and go to state 67


state 30

    (63) assing_var -> var .
    (64) assing_var -> var . ARROW ID
    (65) assing_var -> var . DARROW ID

    LPAREN          reduce using rule 63 (assing_var -> var .)
    EQUAL           reduce using rule 63 (assing_var -> var .)
    MUL_EQUAL       reduce using rule 63 (assing_var -> var .)
    DIV_EQUAL       reduce using rule 63 (assing_var -> var .)
    CONCAT_EQUAL    reduce using rule 63 (assing_var -> var .)
    MOD_EQUAL       reduce using rule 63 (assing_var -> var .)
    PLUS_EQUAL      reduce using rule 63 (assing_var -> var .)
    MINUS_EQUAL     reduce using rule 63 (assing_var -> var .)
    ARROW           shift and go to state 68
    DARROW          shift and go to state 69


state 31

    (105) selection_stmt -> CASE . NUM COLON statement BREAK SEMI
    (106) selection_stmt -> CASE . STRING COLON statement BREAK SEMI

    NUM             shift and go to state 70
    STRING          shift and go to state 71


state 32

    (107) selection_stmt -> DEFAULT . COLON statement BREAK SEMI

    COLON           shift and go to state 72


state 33

    (108) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN statement

    LPAREN          shift and go to state 73


state 34

    (109) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 74


state 35

    (110) iteration_stmt -> DO . LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN

    LBLOCK          shift and go to state 75


state 36

    (77) fun_call -> PRINT . LPAREN echo_params RPAREN

    LPAREN          shift and go to state 76


state 37

    (78) fun_call -> PRINTR . LPAREN IDVAR RPAREN

    LPAREN          shift and go to state 77


state 38

    (79) fun_call -> VARDUMP . LPAREN IDVAR RPAREN

    LPAREN          shift and go to state 78


state 39

    (1) program -> OPENTAG declaration_list CLOSETAG .

    $end            reduce using rule 1 (program -> OPENTAG declaration_list CLOSETAG .)


state 40

    (3) declaration_list -> declaration declaration_list .

    CLOSETAG        reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 41

    (6) declaration -> area fun_declaration .

    IDVAR           reduce using rule 6 (declaration -> area fun_declaration .)
    TIMESTIMES      reduce using rule 6 (declaration -> area fun_declaration .)
    AMPERSANT       reduce using rule 6 (declaration -> area fun_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> area fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> area fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> area fun_declaration .)
    PROTECTED       reduce using rule 6 (declaration -> area fun_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> area fun_declaration .)
    INCLUDE         reduce using rule 6 (declaration -> area fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> area fun_declaration .)
    IF              reduce using rule 6 (declaration -> area fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> area fun_declaration .)
    CASE            reduce using rule 6 (declaration -> area fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> area fun_declaration .)
    FOR             reduce using rule 6 (declaration -> area fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> area fun_declaration .)
    DO              reduce using rule 6 (declaration -> area fun_declaration .)
    ID              reduce using rule 6 (declaration -> area fun_declaration .)
    PRINT           reduce using rule 6 (declaration -> area fun_declaration .)
    PRINTR          reduce using rule 6 (declaration -> area fun_declaration .)
    VARDUMP         reduce using rule 6 (declaration -> area fun_declaration .)
    ECHO            reduce using rule 6 (declaration -> area fun_declaration .)
    CLOSETAG        reduce using rule 6 (declaration -> area fun_declaration .)


state 42

    (26) class_declaration -> area CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 79


state 43

    (14) echo_stmt -> echo_stmt ECHO . echo_params SEMI
    (16) echo_params -> . echo_param
    (17) echo_params -> . echo_param DOT echo_params
    (18) echo_param -> . STRING
    (19) echo_param -> . IDVAR
    (20) echo_param -> . NUM
    (21) echo_param -> . boolean
    (22) echo_param -> . fun_declaration
    (23) echo_param -> . fun_call
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 82
    IDVAR           shift and go to state 83
    NUM             shift and go to state 84
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    FUNCTION        shift and go to state 19
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38

    echo_params                    shift and go to state 80
    echo_param                     shift and go to state 81
    boolean                        shift and go to state 85
    fun_declaration                shift and go to state 86
    fun_call                       shift and go to state 87
    assing_var                     shift and go to state 91
    var                            shift and go to state 30

state 44

    (13) declaration -> fun_call SEMI .

    IDVAR           reduce using rule 13 (declaration -> fun_call SEMI .)
    TIMESTIMES      reduce using rule 13 (declaration -> fun_call SEMI .)
    AMPERSANT       reduce using rule 13 (declaration -> fun_call SEMI .)
    FUNCTION        reduce using rule 13 (declaration -> fun_call SEMI .)
    PRIVATE         reduce using rule 13 (declaration -> fun_call SEMI .)
    PUBLIC          reduce using rule 13 (declaration -> fun_call SEMI .)
    PROTECTED       reduce using rule 13 (declaration -> fun_call SEMI .)
    REQUIRE         reduce using rule 13 (declaration -> fun_call SEMI .)
    INCLUDE         reduce using rule 13 (declaration -> fun_call SEMI .)
    CLASS           reduce using rule 13 (declaration -> fun_call SEMI .)
    IF              reduce using rule 13 (declaration -> fun_call SEMI .)
    SWITCH          reduce using rule 13 (declaration -> fun_call SEMI .)
    CASE            reduce using rule 13 (declaration -> fun_call SEMI .)
    DEFAULT         reduce using rule 13 (declaration -> fun_call SEMI .)
    FOR             reduce using rule 13 (declaration -> fun_call SEMI .)
    WHILE           reduce using rule 13 (declaration -> fun_call SEMI .)
    DO              reduce using rule 13 (declaration -> fun_call SEMI .)
    ID              reduce using rule 13 (declaration -> fun_call SEMI .)
    PRINT           reduce using rule 13 (declaration -> fun_call SEMI .)
    PRINTR          reduce using rule 13 (declaration -> fun_call SEMI .)
    VARDUMP         reduce using rule 13 (declaration -> fun_call SEMI .)
    ECHO            reduce using rule 13 (declaration -> fun_call SEMI .)
    CLOSETAG        reduce using rule 13 (declaration -> fun_call SEMI .)


state 45

    (38) var_declaration -> IDVAR SEMI . var_declaration
    (39) var_declaration -> IDVAR SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    TIMESTIMES      reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    AMPERSANT       reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    FUNCTION        reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    PRIVATE         reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    PUBLIC          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    PROTECTED       reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    REQUIRE         reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    INCLUDE         reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    CLASS           reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    IF              reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    SWITCH          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    CASE            reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    DEFAULT         reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    FOR             reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    WHILE           reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    DO              reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    ID              reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    PRINT           reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    PRINTR          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    VARDUMP         reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    ECHO            reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    CLOSETAG        reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    LPAREN          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    NUM             reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    STRING          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    TRUE            reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    FALSE           reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    RBLOCK          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    LBLOCK          reduce using rule 39 (var_declaration -> IDVAR SEMI .)
    RETURN          reduce using rule 39 (var_declaration -> IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    var_declaration                shift and go to state 93
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 46

    (51) var_declaration -> IDVAR IGUAL . array_declare SEMI
    (56) var_declaration -> IDVAR IGUAL . simple_expression SEMI
    (59) array_declare -> . ARRAY LPAREN array_values RPAREN
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ARRAY           shift and go to state 98
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    array_declare                  shift and go to state 96
    simple_expression              shift and go to state 97
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    fun_call                       shift and go to state 102
    factor                         shift and go to state 103
    assing_var                     shift and go to state 91
    var                            shift and go to state 104
    boolean                        shift and go to state 107

state 47

    (164) typeclass -> IDVAR EQUAL . NEW constructor SEMI
    (66) IGUAL -> EQUAL .

    NEW             shift and go to state 108
    ARRAY           reduce using rule 66 (IGUAL -> EQUAL .)
    ID              reduce using rule 66 (IGUAL -> EQUAL .)
    PRINT           reduce using rule 66 (IGUAL -> EQUAL .)
    PRINTR          reduce using rule 66 (IGUAL -> EQUAL .)
    VARDUMP         reduce using rule 66 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 66 (IGUAL -> EQUAL .)
    NUM             reduce using rule 66 (IGUAL -> EQUAL .)
    STRING          reduce using rule 66 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 66 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 66 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 66 (IGUAL -> EQUAL .)


state 48

    (121) var -> IDVAR LBRACKET . expression RBRACKET
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 110
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 49

    (67) IGUAL -> MUL_EQUAL .

    ARRAY           reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    ID              reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    PRINT           reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    PRINTR          reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    VARDUMP         reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    LPAREN          reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    NUM             reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    STRING          reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    IDVAR           reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    TRUE            reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    FALSE           reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    POST            reduce using rule 67 (IGUAL -> MUL_EQUAL .)
    GET             reduce using rule 67 (IGUAL -> MUL_EQUAL .)


state 50

    (68) IGUAL -> DIV_EQUAL .

    ARRAY           reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    ID              reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    PRINT           reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    PRINTR          reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    VARDUMP         reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    LPAREN          reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    NUM             reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    STRING          reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    IDVAR           reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    TRUE            reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    FALSE           reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    POST            reduce using rule 68 (IGUAL -> DIV_EQUAL .)
    GET             reduce using rule 68 (IGUAL -> DIV_EQUAL .)


state 51

    (69) IGUAL -> CONCAT_EQUAL .

    ARRAY           reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    ID              reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    PRINT           reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    PRINTR          reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    VARDUMP         reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    NUM             reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    STRING          reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    TRUE            reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    FALSE           reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    POST            reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)
    GET             reduce using rule 69 (IGUAL -> CONCAT_EQUAL .)


state 52

    (70) IGUAL -> MOD_EQUAL .

    ARRAY           reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    ID              reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    PRINT           reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    PRINTR          reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    VARDUMP         reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    LPAREN          reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    NUM             reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    STRING          reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    IDVAR           reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    TRUE            reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    FALSE           reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    POST            reduce using rule 70 (IGUAL -> MOD_EQUAL .)
    GET             reduce using rule 70 (IGUAL -> MOD_EQUAL .)


state 53

    (71) IGUAL -> PLUS_EQUAL .

    ARRAY           reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    ID              reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    PRINT           reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    PRINTR          reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    VARDUMP         reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    LPAREN          reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    NUM             reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    STRING          reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    IDVAR           reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    TRUE            reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    FALSE           reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    POST            reduce using rule 71 (IGUAL -> PLUS_EQUAL .)
    GET             reduce using rule 71 (IGUAL -> PLUS_EQUAL .)


state 54

    (72) IGUAL -> MINUS_EQUAL .

    ARRAY           reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    ID              reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    PRINT           reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    PRINTR          reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    VARDUMP         reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    LPAREN          reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    NUM             reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    STRING          reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    IDVAR           reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    TRUE            reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    FALSE           reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    POST            reduce using rule 72 (IGUAL -> MINUS_EQUAL .)
    GET             reduce using rule 72 (IGUAL -> MINUS_EQUAL .)


state 55

    (40) var_declaration -> TIMESTIMES IDVAR . SEMI
    (41) var_declaration -> TIMESTIMES IDVAR . SEMI var_declaration

    SEMI            shift and go to state 115


state 56

    (42) var_declaration -> assing_var IGUAL . NUM SEMI var_declaration
    (43) var_declaration -> assing_var IGUAL . NUM SEMI
    (44) var_declaration -> assing_var IGUAL . STRING SEMI var_declaration
    (45) var_declaration -> assing_var IGUAL . STRING SEMI
    (46) var_declaration -> assing_var IGUAL . boolean SEMI var_declaration
    (47) var_declaration -> assing_var IGUAL . boolean SEMI
    (48) var_declaration -> assing_var IGUAL . IDVAR SEMI var_declaration
    (49) var_declaration -> assing_var IGUAL . IDVAR SEMI
    (50) var_declaration -> assing_var IGUAL . read_data SEMI
    (55) var_declaration -> assing_var IGUAL . simple_expression SEMI
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE
    (57) read_data -> . POST LBRACKET STRING RBRACKET
    (58) read_data -> . GET LBRACKET STRING RBRACKET
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    NUM             shift and go to state 116
    STRING          shift and go to state 117
    IDVAR           shift and go to state 119
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    POST            shift and go to state 122
    GET             shift and go to state 123
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    LPAREN          shift and go to state 99

    assing_var                     shift and go to state 91
    boolean                        shift and go to state 118
    read_data                      shift and go to state 120
    simple_expression              shift and go to state 121
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    fun_call                       shift and go to state 102
    factor                         shift and go to state 103
    var                            shift and go to state 104

state 57

    (76) fun_call -> assing_var LPAREN . params RPAREN
    (80) params -> . param_list
    (81) params -> . empty
    (82) param_list -> . param
    (83) param_list -> . param COMMA param_list
    (167) empty -> .
    (84) param -> . IDVAR
    (85) param -> . IDVAR LBRACKET RBRACKET
    (86) param -> . term
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    RPAREN          reduce using rule 167 (empty -> .)
    IDVAR           shift and go to state 128
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    params                         shift and go to state 124
    param_list                     shift and go to state 125
    empty                          shift and go to state 126
    param                          shift and go to state 127
    term                           shift and go to state 129
    factor                         shift and go to state 103
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 58

    (66) IGUAL -> EQUAL .

    NUM             reduce using rule 66 (IGUAL -> EQUAL .)
    STRING          reduce using rule 66 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 66 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 66 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 66 (IGUAL -> EQUAL .)
    POST            reduce using rule 66 (IGUAL -> EQUAL .)
    GET             reduce using rule 66 (IGUAL -> EQUAL .)
    ID              reduce using rule 66 (IGUAL -> EQUAL .)
    PRINT           reduce using rule 66 (IGUAL -> EQUAL .)
    PRINTR          reduce using rule 66 (IGUAL -> EQUAL .)
    VARDUMP         reduce using rule 66 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 66 (IGUAL -> EQUAL .)
    ARRAY           reduce using rule 66 (IGUAL -> EQUAL .)


state 59

    (52) var_declaration -> AMPERSANT IDVAR . SEMI var_declaration
    (53) var_declaration -> AMPERSANT IDVAR . IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> AMPERSANT IDVAR . SEMI
    (66) IGUAL -> . EQUAL
    (67) IGUAL -> . MUL_EQUAL
    (68) IGUAL -> . DIV_EQUAL
    (69) IGUAL -> . CONCAT_EQUAL
    (70) IGUAL -> . MOD_EQUAL
    (71) IGUAL -> . PLUS_EQUAL
    (72) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 131
    EQUAL           shift and go to state 58
    MUL_EQUAL       shift and go to state 49
    DIV_EQUAL       shift and go to state 50
    CONCAT_EQUAL    shift and go to state 51
    MOD_EQUAL       shift and go to state 52
    PLUS_EQUAL      shift and go to state 53
    MINUS_EQUAL     shift and go to state 54

    IGUAL                          shift and go to state 132

state 60

    (73) fun_declaration -> FUNCTION ID . LPAREN params RPAREN
    (74) fun_declaration -> FUNCTION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 133


state 61

    (163) typeclass -> ID IDVAR . EQUAL NEW constructor SEMI

    EQUAL           shift and go to state 134


state 62

    (75) fun_call -> ID LPAREN . params RPAREN
    (80) params -> . param_list
    (81) params -> . empty
    (82) param_list -> . param
    (83) param_list -> . param COMMA param_list
    (167) empty -> .
    (84) param -> . IDVAR
    (85) param -> . IDVAR LBRACKET RBRACKET
    (86) param -> . term
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    RPAREN          reduce using rule 167 (empty -> .)
    IDVAR           shift and go to state 128
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    params                         shift and go to state 135
    param_list                     shift and go to state 125
    empty                          shift and go to state 126
    param                          shift and go to state 127
    term                           shift and go to state 129
    factor                         shift and go to state 103
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 63

    (24) header_declaration -> REQUIRE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 136


state 64

    (25) header_declaration -> INCLUDE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 137


state 65

    (27) class_declaration -> CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 138


state 66

    (100) selection_stmt -> IF LPAREN . expression RPAREN statement
    (101) selection_stmt -> IF LPAREN . expression RPAREN statement selection
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 139
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 67

    (104) selection_stmt -> SWITCH LPAREN . var RPAREN statement
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 141

    var                            shift and go to state 140

state 68

    (64) assing_var -> var ARROW . ID

    ID              shift and go to state 142


state 69

    (65) assing_var -> var DARROW . ID

    ID              shift and go to state 143


state 70

    (105) selection_stmt -> CASE NUM . COLON statement BREAK SEMI

    COLON           shift and go to state 144


state 71

    (106) selection_stmt -> CASE STRING . COLON statement BREAK SEMI

    COLON           shift and go to state 145


state 72

    (107) selection_stmt -> DEFAULT COLON . statement BREAK SEMI
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    statement                      shift and go to state 146
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 73

    (108) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN statement
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 92
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18

    var_declaration                shift and go to state 158
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 74

    (109) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 159
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 75

    (110) iteration_stmt -> DO LBLOCK . statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    statement                      shift and go to state 160
    expression                     shift and go to state 154
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 76

    (77) fun_call -> PRINT LPAREN . echo_params RPAREN
    (16) echo_params -> . echo_param
    (17) echo_params -> . echo_param DOT echo_params
    (18) echo_param -> . STRING
    (19) echo_param -> . IDVAR
    (20) echo_param -> . NUM
    (21) echo_param -> . boolean
    (22) echo_param -> . fun_declaration
    (23) echo_param -> . fun_call
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 82
    IDVAR           shift and go to state 83
    NUM             shift and go to state 84
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    FUNCTION        shift and go to state 19
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38

    echo_params                    shift and go to state 161
    echo_param                     shift and go to state 81
    boolean                        shift and go to state 85
    fun_declaration                shift and go to state 86
    fun_call                       shift and go to state 87
    assing_var                     shift and go to state 91
    var                            shift and go to state 30

state 77

    (78) fun_call -> PRINTR LPAREN . IDVAR RPAREN

    IDVAR           shift and go to state 162


state 78

    (79) fun_call -> VARDUMP LPAREN . IDVAR RPAREN

    IDVAR           shift and go to state 163


state 79

    (26) class_declaration -> area CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 164


state 80

    (14) echo_stmt -> echo_stmt ECHO echo_params . SEMI

    SEMI            shift and go to state 165


state 81

    (16) echo_params -> echo_param .
    (17) echo_params -> echo_param . DOT echo_params

    SEMI            reduce using rule 16 (echo_params -> echo_param .)
    RPAREN          reduce using rule 16 (echo_params -> echo_param .)
    DOT             shift and go to state 166


state 82

    (18) echo_param -> STRING .

    DOT             reduce using rule 18 (echo_param -> STRING .)
    SEMI            reduce using rule 18 (echo_param -> STRING .)
    RPAREN          reduce using rule 18 (echo_param -> STRING .)


state 83

    (19) echo_param -> IDVAR .
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET

    DOT             reduce using rule 19 (echo_param -> IDVAR .)
    SEMI            reduce using rule 19 (echo_param -> IDVAR .)
    RPAREN          reduce using rule 19 (echo_param -> IDVAR .)
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    LPAREN          reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48


state 84

    (20) echo_param -> NUM .

    DOT             reduce using rule 20 (echo_param -> NUM .)
    SEMI            reduce using rule 20 (echo_param -> NUM .)
    RPAREN          reduce using rule 20 (echo_param -> NUM .)


state 85

    (21) echo_param -> boolean .

    DOT             reduce using rule 21 (echo_param -> boolean .)
    SEMI            reduce using rule 21 (echo_param -> boolean .)
    RPAREN          reduce using rule 21 (echo_param -> boolean .)


state 86

    (22) echo_param -> fun_declaration .

    DOT             reduce using rule 22 (echo_param -> fun_declaration .)
    SEMI            reduce using rule 22 (echo_param -> fun_declaration .)
    RPAREN          reduce using rule 22 (echo_param -> fun_declaration .)


state 87

    (23) echo_param -> fun_call .

    DOT             reduce using rule 23 (echo_param -> fun_call .)
    SEMI            reduce using rule 23 (echo_param -> fun_call .)
    RPAREN          reduce using rule 23 (echo_param -> fun_call .)


state 88

    (161) boolean -> TRUE .

    DOT             reduce using rule 161 (boolean -> TRUE .)
    SEMI            reduce using rule 161 (boolean -> TRUE .)
    MINUSMINUS      reduce using rule 161 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 161 (boolean -> TRUE .)
    TIMES           reduce using rule 161 (boolean -> TRUE .)
    DIVIDE          reduce using rule 161 (boolean -> TRUE .)
    LESS            reduce using rule 161 (boolean -> TRUE .)
    LESSEQUAL       reduce using rule 161 (boolean -> TRUE .)
    GREATER         reduce using rule 161 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 161 (boolean -> TRUE .)
    DEQUAL          reduce using rule 161 (boolean -> TRUE .)
    DISTINT         reduce using rule 161 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 161 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 161 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 161 (boolean -> TRUE .)
    SR_EQUAL        reduce using rule 161 (boolean -> TRUE .)
    SL_EQUAL        reduce using rule 161 (boolean -> TRUE .)
    AND_EQUAL       reduce using rule 161 (boolean -> TRUE .)
    OR_EQUAL        reduce using rule 161 (boolean -> TRUE .)
    XOR_EQUAL       reduce using rule 161 (boolean -> TRUE .)
    CONCAT_EQUAL    reduce using rule 161 (boolean -> TRUE .)
    PLUS            reduce using rule 161 (boolean -> TRUE .)
    MINUS           reduce using rule 161 (boolean -> TRUE .)
    RBRACKET        reduce using rule 161 (boolean -> TRUE .)
    AND             reduce using rule 161 (boolean -> TRUE .)
    OR              reduce using rule 161 (boolean -> TRUE .)
    COMMA           reduce using rule 161 (boolean -> TRUE .)
    RPAREN          reduce using rule 161 (boolean -> TRUE .)
    DARROW          reduce using rule 161 (boolean -> TRUE .)


state 89

    (162) boolean -> FALSE .

    DOT             reduce using rule 162 (boolean -> FALSE .)
    SEMI            reduce using rule 162 (boolean -> FALSE .)
    MINUSMINUS      reduce using rule 162 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 162 (boolean -> FALSE .)
    TIMES           reduce using rule 162 (boolean -> FALSE .)
    DIVIDE          reduce using rule 162 (boolean -> FALSE .)
    LESS            reduce using rule 162 (boolean -> FALSE .)
    LESSEQUAL       reduce using rule 162 (boolean -> FALSE .)
    GREATER         reduce using rule 162 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 162 (boolean -> FALSE .)
    DEQUAL          reduce using rule 162 (boolean -> FALSE .)
    DISTINT         reduce using rule 162 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 162 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 162 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 162 (boolean -> FALSE .)
    SR_EQUAL        reduce using rule 162 (boolean -> FALSE .)
    SL_EQUAL        reduce using rule 162 (boolean -> FALSE .)
    AND_EQUAL       reduce using rule 162 (boolean -> FALSE .)
    OR_EQUAL        reduce using rule 162 (boolean -> FALSE .)
    XOR_EQUAL       reduce using rule 162 (boolean -> FALSE .)
    CONCAT_EQUAL    reduce using rule 162 (boolean -> FALSE .)
    PLUS            reduce using rule 162 (boolean -> FALSE .)
    MINUS           reduce using rule 162 (boolean -> FALSE .)
    RBRACKET        reduce using rule 162 (boolean -> FALSE .)
    AND             reduce using rule 162 (boolean -> FALSE .)
    OR              reduce using rule 162 (boolean -> FALSE .)
    COMMA           reduce using rule 162 (boolean -> FALSE .)
    RPAREN          reduce using rule 162 (boolean -> FALSE .)
    DARROW          reduce using rule 162 (boolean -> FALSE .)


state 90

    (75) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 62


state 91

    (76) fun_call -> assing_var . LPAREN params RPAREN

    LPAREN          shift and go to state 57


state 92

    (38) var_declaration -> IDVAR . SEMI var_declaration
    (39) var_declaration -> IDVAR . SEMI
    (51) var_declaration -> IDVAR . IGUAL array_declare SEMI
    (56) var_declaration -> IDVAR . IGUAL simple_expression SEMI
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET
    (66) IGUAL -> . EQUAL
    (67) IGUAL -> . MUL_EQUAL
    (68) IGUAL -> . DIV_EQUAL
    (69) IGUAL -> . CONCAT_EQUAL
    (70) IGUAL -> . MOD_EQUAL
    (71) IGUAL -> . PLUS_EQUAL
    (72) IGUAL -> . MINUS_EQUAL

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for MUL_EQUAL resolved as shift
  ! shift/reduce conflict for DIV_EQUAL resolved as shift
  ! shift/reduce conflict for CONCAT_EQUAL resolved as shift
  ! shift/reduce conflict for MOD_EQUAL resolved as shift
  ! shift/reduce conflict for PLUS_EQUAL resolved as shift
  ! shift/reduce conflict for MINUS_EQUAL resolved as shift
    SEMI            shift and go to state 45
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48
    EQUAL           shift and go to state 58
    MUL_EQUAL       shift and go to state 49
    DIV_EQUAL       shift and go to state 50
    CONCAT_EQUAL    shift and go to state 51
    MOD_EQUAL       shift and go to state 52
    PLUS_EQUAL      shift and go to state 53
    MINUS_EQUAL     shift and go to state 54

  ! EQUAL           [ reduce using rule 120 (var -> IDVAR .) ]
  ! MUL_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! DIV_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! CONCAT_EQUAL    [ reduce using rule 120 (var -> IDVAR .) ]
  ! MOD_EQUAL       [ reduce using rule 120 (var -> IDVAR .) ]
  ! PLUS_EQUAL      [ reduce using rule 120 (var -> IDVAR .) ]
  ! MINUS_EQUAL     [ reduce using rule 120 (var -> IDVAR .) ]

    IGUAL                          shift and go to state 46

state 93

    (38) var_declaration -> IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    IF              reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    CASE            reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    FOR             reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    DO              reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    ID              reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    PRINT           reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    PRINTR          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    VARDUMP         reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    NUM             reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    STRING          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 38 (var_declaration -> IDVAR SEMI var_declaration .)


state 94

    (42) var_declaration -> assing_var . IGUAL NUM SEMI var_declaration
    (43) var_declaration -> assing_var . IGUAL NUM SEMI
    (44) var_declaration -> assing_var . IGUAL STRING SEMI var_declaration
    (45) var_declaration -> assing_var . IGUAL STRING SEMI
    (46) var_declaration -> assing_var . IGUAL boolean SEMI var_declaration
    (47) var_declaration -> assing_var . IGUAL boolean SEMI
    (48) var_declaration -> assing_var . IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> assing_var . IGUAL IDVAR SEMI
    (50) var_declaration -> assing_var . IGUAL read_data SEMI
    (55) var_declaration -> assing_var . IGUAL simple_expression SEMI
    (66) IGUAL -> . EQUAL
    (67) IGUAL -> . MUL_EQUAL
    (68) IGUAL -> . DIV_EQUAL
    (69) IGUAL -> . CONCAT_EQUAL
    (70) IGUAL -> . MOD_EQUAL
    (71) IGUAL -> . PLUS_EQUAL
    (72) IGUAL -> . MINUS_EQUAL

    EQUAL           shift and go to state 58
    MUL_EQUAL       shift and go to state 49
    DIV_EQUAL       shift and go to state 50
    CONCAT_EQUAL    shift and go to state 51
    MOD_EQUAL       shift and go to state 52
    PLUS_EQUAL      shift and go to state 53
    MINUS_EQUAL     shift and go to state 54

    IGUAL                          shift and go to state 56

state 95

    (155) factor -> IDVAR . LPAREN args RPAREN
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 167
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 120 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 120 (var -> IDVAR .)
    TIMES           reduce using rule 120 (var -> IDVAR .)
    DIVIDE          reduce using rule 120 (var -> IDVAR .)
    LESS            reduce using rule 120 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 120 (var -> IDVAR .)
    GREATER         reduce using rule 120 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 120 (var -> IDVAR .)
    DEQUAL          reduce using rule 120 (var -> IDVAR .)
    DISTINT         reduce using rule 120 (var -> IDVAR .)
    ISEQUAL         reduce using rule 120 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 120 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 120 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 120 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 120 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 120 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 120 (var -> IDVAR .)
    PLUS            reduce using rule 120 (var -> IDVAR .)
    MINUS           reduce using rule 120 (var -> IDVAR .)
    SEMI            reduce using rule 120 (var -> IDVAR .)
    RBRACKET        reduce using rule 120 (var -> IDVAR .)
    AND             reduce using rule 120 (var -> IDVAR .)
    OR              reduce using rule 120 (var -> IDVAR .)
    RPAREN          reduce using rule 120 (var -> IDVAR .)
    COMMA           reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48

  ! LPAREN          [ reduce using rule 120 (var -> IDVAR .) ]


state 96

    (51) var_declaration -> IDVAR IGUAL array_declare . SEMI

    SEMI            shift and go to state 168


state 97

    (56) var_declaration -> IDVAR IGUAL simple_expression . SEMI

    SEMI            shift and go to state 169


state 98

    (59) array_declare -> ARRAY . LPAREN array_values RPAREN

    LPAREN          shift and go to state 170


state 99

    (150) factor -> LPAREN . expression RPAREN
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 171
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 100

    (122) simple_expression -> additive_expression . relop additive_expression
    (123) simple_expression -> additive_expression .
    (139) additive_expression -> additive_expression . addop term
    (124) relop -> . LESS
    (125) relop -> . LESSEQUAL
    (126) relop -> . GREATER
    (127) relop -> . GREATEREQUAL
    (128) relop -> . DEQUAL
    (129) relop -> . DISTINT
    (130) relop -> . ISEQUAL
    (131) relop -> . IS_IDENTICAL
    (132) relop -> . IS_NOT_IDENTICAL
    (133) relop -> . SR_EQUAL
    (134) relop -> . SL_EQUAL
    (135) relop -> . AND_EQUAL
    (136) relop -> . OR_EQUAL
    (137) relop -> . XOR_EQUAL
    (138) relop -> . CONCAT_EQUAL
    (144) addop -> . PLUS
    (145) addop -> . MINUS

    SEMI            reduce using rule 123 (simple_expression -> additive_expression .)
    RBRACKET        reduce using rule 123 (simple_expression -> additive_expression .)
    AND             reduce using rule 123 (simple_expression -> additive_expression .)
    OR              reduce using rule 123 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 123 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 123 (simple_expression -> additive_expression .)
    LESS            shift and go to state 174
    LESSEQUAL       shift and go to state 175
    GREATER         shift and go to state 176
    GREATEREQUAL    shift and go to state 177
    DEQUAL          shift and go to state 178
    DISTINT         shift and go to state 179
    ISEQUAL         shift and go to state 180
    IS_IDENTICAL    shift and go to state 181
    IS_NOT_IDENTICAL shift and go to state 182
    SR_EQUAL        shift and go to state 183
    SL_EQUAL        shift and go to state 184
    AND_EQUAL       shift and go to state 185
    OR_EQUAL        shift and go to state 186
    XOR_EQUAL       shift and go to state 187
    CONCAT_EQUAL    shift and go to state 188
    PLUS            shift and go to state 189
    MINUS           shift and go to state 190

    relop                          shift and go to state 172
    addop                          shift and go to state 173

state 101

    (140) additive_expression -> term .
    (141) additive_expression -> term . MINUSMINUS
    (142) additive_expression -> term . PLUSPLUS
    (146) term -> term . mulop factor
    (148) mulop -> . TIMES
    (149) mulop -> . DIVIDE

    LESS            reduce using rule 140 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 140 (additive_expression -> term .)
    GREATER         reduce using rule 140 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 140 (additive_expression -> term .)
    DEQUAL          reduce using rule 140 (additive_expression -> term .)
    DISTINT         reduce using rule 140 (additive_expression -> term .)
    ISEQUAL         reduce using rule 140 (additive_expression -> term .)
    IS_IDENTICAL    reduce using rule 140 (additive_expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 140 (additive_expression -> term .)
    SR_EQUAL        reduce using rule 140 (additive_expression -> term .)
    SL_EQUAL        reduce using rule 140 (additive_expression -> term .)
    AND_EQUAL       reduce using rule 140 (additive_expression -> term .)
    OR_EQUAL        reduce using rule 140 (additive_expression -> term .)
    XOR_EQUAL       reduce using rule 140 (additive_expression -> term .)
    CONCAT_EQUAL    reduce using rule 140 (additive_expression -> term .)
    PLUS            reduce using rule 140 (additive_expression -> term .)
    MINUS           reduce using rule 140 (additive_expression -> term .)
    SEMI            reduce using rule 140 (additive_expression -> term .)
    RBRACKET        reduce using rule 140 (additive_expression -> term .)
    AND             reduce using rule 140 (additive_expression -> term .)
    OR              reduce using rule 140 (additive_expression -> term .)
    RPAREN          reduce using rule 140 (additive_expression -> term .)
    COMMA           reduce using rule 140 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 191
    PLUSPLUS        shift and go to state 192
    TIMES           shift and go to state 194
    DIVIDE          shift and go to state 195

    mulop                          shift and go to state 193

state 102

    (143) additive_expression -> fun_call .

    LESS            reduce using rule 143 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    GREATER         reduce using rule 143 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 143 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 143 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 143 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 143 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 143 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 143 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 143 (additive_expression -> fun_call .)
    PLUS            reduce using rule 143 (additive_expression -> fun_call .)
    MINUS           reduce using rule 143 (additive_expression -> fun_call .)
    SEMI            reduce using rule 143 (additive_expression -> fun_call .)
    RBRACKET        reduce using rule 143 (additive_expression -> fun_call .)
    AND             reduce using rule 143 (additive_expression -> fun_call .)
    OR              reduce using rule 143 (additive_expression -> fun_call .)
    RPAREN          reduce using rule 143 (additive_expression -> fun_call .)
    COMMA           reduce using rule 143 (additive_expression -> fun_call .)


state 103

    (147) term -> factor .

    MINUSMINUS      reduce using rule 147 (term -> factor .)
    PLUSPLUS        reduce using rule 147 (term -> factor .)
    TIMES           reduce using rule 147 (term -> factor .)
    DIVIDE          reduce using rule 147 (term -> factor .)
    LESS            reduce using rule 147 (term -> factor .)
    LESSEQUAL       reduce using rule 147 (term -> factor .)
    GREATER         reduce using rule 147 (term -> factor .)
    GREATEREQUAL    reduce using rule 147 (term -> factor .)
    DEQUAL          reduce using rule 147 (term -> factor .)
    DISTINT         reduce using rule 147 (term -> factor .)
    ISEQUAL         reduce using rule 147 (term -> factor .)
    IS_IDENTICAL    reduce using rule 147 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 147 (term -> factor .)
    SR_EQUAL        reduce using rule 147 (term -> factor .)
    SL_EQUAL        reduce using rule 147 (term -> factor .)
    AND_EQUAL       reduce using rule 147 (term -> factor .)
    OR_EQUAL        reduce using rule 147 (term -> factor .)
    XOR_EQUAL       reduce using rule 147 (term -> factor .)
    CONCAT_EQUAL    reduce using rule 147 (term -> factor .)
    PLUS            reduce using rule 147 (term -> factor .)
    MINUS           reduce using rule 147 (term -> factor .)
    SEMI            reduce using rule 147 (term -> factor .)
    RBRACKET        reduce using rule 147 (term -> factor .)
    AND             reduce using rule 147 (term -> factor .)
    OR              reduce using rule 147 (term -> factor .)
    COMMA           reduce using rule 147 (term -> factor .)
    RPAREN          reduce using rule 147 (term -> factor .)


state 104

    (151) factor -> var .
    (63) assing_var -> var .
    (64) assing_var -> var . ARROW ID
    (65) assing_var -> var . DARROW ID

    MINUSMINUS      reduce using rule 151 (factor -> var .)
    PLUSPLUS        reduce using rule 151 (factor -> var .)
    TIMES           reduce using rule 151 (factor -> var .)
    DIVIDE          reduce using rule 151 (factor -> var .)
    LESS            reduce using rule 151 (factor -> var .)
    LESSEQUAL       reduce using rule 151 (factor -> var .)
    GREATER         reduce using rule 151 (factor -> var .)
    GREATEREQUAL    reduce using rule 151 (factor -> var .)
    DEQUAL          reduce using rule 151 (factor -> var .)
    DISTINT         reduce using rule 151 (factor -> var .)
    ISEQUAL         reduce using rule 151 (factor -> var .)
    IS_IDENTICAL    reduce using rule 151 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 151 (factor -> var .)
    SR_EQUAL        reduce using rule 151 (factor -> var .)
    SL_EQUAL        reduce using rule 151 (factor -> var .)
    AND_EQUAL       reduce using rule 151 (factor -> var .)
    OR_EQUAL        reduce using rule 151 (factor -> var .)
    XOR_EQUAL       reduce using rule 151 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 151 (factor -> var .)
    PLUS            reduce using rule 151 (factor -> var .)
    MINUS           reduce using rule 151 (factor -> var .)
    SEMI            reduce using rule 151 (factor -> var .)
    RBRACKET        reduce using rule 151 (factor -> var .)
    AND             reduce using rule 151 (factor -> var .)
    OR              reduce using rule 151 (factor -> var .)
    RPAREN          reduce using rule 151 (factor -> var .)
    COMMA           reduce using rule 151 (factor -> var .)
    LPAREN          reduce using rule 63 (assing_var -> var .)
    ARROW           shift and go to state 68
    DARROW          shift and go to state 69


state 105

    (152) factor -> NUM .

    MINUSMINUS      reduce using rule 152 (factor -> NUM .)
    PLUSPLUS        reduce using rule 152 (factor -> NUM .)
    TIMES           reduce using rule 152 (factor -> NUM .)
    DIVIDE          reduce using rule 152 (factor -> NUM .)
    LESS            reduce using rule 152 (factor -> NUM .)
    LESSEQUAL       reduce using rule 152 (factor -> NUM .)
    GREATER         reduce using rule 152 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 152 (factor -> NUM .)
    DEQUAL          reduce using rule 152 (factor -> NUM .)
    DISTINT         reduce using rule 152 (factor -> NUM .)
    ISEQUAL         reduce using rule 152 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 152 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 152 (factor -> NUM .)
    SR_EQUAL        reduce using rule 152 (factor -> NUM .)
    SL_EQUAL        reduce using rule 152 (factor -> NUM .)
    AND_EQUAL       reduce using rule 152 (factor -> NUM .)
    OR_EQUAL        reduce using rule 152 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 152 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 152 (factor -> NUM .)
    PLUS            reduce using rule 152 (factor -> NUM .)
    MINUS           reduce using rule 152 (factor -> NUM .)
    SEMI            reduce using rule 152 (factor -> NUM .)
    RBRACKET        reduce using rule 152 (factor -> NUM .)
    AND             reduce using rule 152 (factor -> NUM .)
    OR              reduce using rule 152 (factor -> NUM .)
    COMMA           reduce using rule 152 (factor -> NUM .)
    RPAREN          reduce using rule 152 (factor -> NUM .)
    DARROW          reduce using rule 152 (factor -> NUM .)


state 106

    (153) factor -> STRING .

    MINUSMINUS      reduce using rule 153 (factor -> STRING .)
    PLUSPLUS        reduce using rule 153 (factor -> STRING .)
    TIMES           reduce using rule 153 (factor -> STRING .)
    DIVIDE          reduce using rule 153 (factor -> STRING .)
    LESS            reduce using rule 153 (factor -> STRING .)
    LESSEQUAL       reduce using rule 153 (factor -> STRING .)
    GREATER         reduce using rule 153 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 153 (factor -> STRING .)
    DEQUAL          reduce using rule 153 (factor -> STRING .)
    DISTINT         reduce using rule 153 (factor -> STRING .)
    ISEQUAL         reduce using rule 153 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 153 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 153 (factor -> STRING .)
    SR_EQUAL        reduce using rule 153 (factor -> STRING .)
    SL_EQUAL        reduce using rule 153 (factor -> STRING .)
    AND_EQUAL       reduce using rule 153 (factor -> STRING .)
    OR_EQUAL        reduce using rule 153 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 153 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 153 (factor -> STRING .)
    PLUS            reduce using rule 153 (factor -> STRING .)
    MINUS           reduce using rule 153 (factor -> STRING .)
    SEMI            reduce using rule 153 (factor -> STRING .)
    RBRACKET        reduce using rule 153 (factor -> STRING .)
    AND             reduce using rule 153 (factor -> STRING .)
    OR              reduce using rule 153 (factor -> STRING .)
    COMMA           reduce using rule 153 (factor -> STRING .)
    RPAREN          reduce using rule 153 (factor -> STRING .)
    DARROW          reduce using rule 153 (factor -> STRING .)


state 107

    (154) factor -> boolean .

    MINUSMINUS      reduce using rule 154 (factor -> boolean .)
    PLUSPLUS        reduce using rule 154 (factor -> boolean .)
    TIMES           reduce using rule 154 (factor -> boolean .)
    DIVIDE          reduce using rule 154 (factor -> boolean .)
    LESS            reduce using rule 154 (factor -> boolean .)
    LESSEQUAL       reduce using rule 154 (factor -> boolean .)
    GREATER         reduce using rule 154 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 154 (factor -> boolean .)
    DEQUAL          reduce using rule 154 (factor -> boolean .)
    DISTINT         reduce using rule 154 (factor -> boolean .)
    ISEQUAL         reduce using rule 154 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 154 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 154 (factor -> boolean .)
    SR_EQUAL        reduce using rule 154 (factor -> boolean .)
    SL_EQUAL        reduce using rule 154 (factor -> boolean .)
    AND_EQUAL       reduce using rule 154 (factor -> boolean .)
    OR_EQUAL        reduce using rule 154 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 154 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 154 (factor -> boolean .)
    PLUS            reduce using rule 154 (factor -> boolean .)
    MINUS           reduce using rule 154 (factor -> boolean .)
    SEMI            reduce using rule 154 (factor -> boolean .)
    RBRACKET        reduce using rule 154 (factor -> boolean .)
    AND             reduce using rule 154 (factor -> boolean .)
    OR              reduce using rule 154 (factor -> boolean .)
    COMMA           reduce using rule 154 (factor -> boolean .)
    RPAREN          reduce using rule 154 (factor -> boolean .)
    DARROW          reduce using rule 154 (factor -> boolean .)


state 108

    (164) typeclass -> IDVAR EQUAL NEW . constructor SEMI
    (165) constructor -> . ID LPAREN RPAREN
    (166) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 197

    constructor                    shift and go to state 196

state 109

    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET
    (155) factor -> IDVAR . LPAREN args RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    EQUAL           reduce using rule 120 (var -> IDVAR .)
    RBRACKET        reduce using rule 120 (var -> IDVAR .)
    AND             reduce using rule 120 (var -> IDVAR .)
    OR              reduce using rule 120 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 120 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 120 (var -> IDVAR .)
    TIMES           reduce using rule 120 (var -> IDVAR .)
    DIVIDE          reduce using rule 120 (var -> IDVAR .)
    LESS            reduce using rule 120 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 120 (var -> IDVAR .)
    GREATER         reduce using rule 120 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 120 (var -> IDVAR .)
    DEQUAL          reduce using rule 120 (var -> IDVAR .)
    DISTINT         reduce using rule 120 (var -> IDVAR .)
    ISEQUAL         reduce using rule 120 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 120 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 120 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 120 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 120 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 120 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 120 (var -> IDVAR .)
    PLUS            reduce using rule 120 (var -> IDVAR .)
    MINUS           reduce using rule 120 (var -> IDVAR .)
    RPAREN          reduce using rule 120 (var -> IDVAR .)
    SEMI            reduce using rule 120 (var -> IDVAR .)
    COMMA           reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48
    LPAREN          shift and go to state 167

  ! LPAREN          [ reduce using rule 120 (var -> IDVAR .) ]


state 110

    (121) var -> IDVAR LBRACKET expression . RBRACKET
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RBRACKET        shift and go to state 198
    AND             shift and go to state 199
    OR              shift and go to state 200


state 111

    (113) expression -> assing_var . EQUAL expression
    (115) expression -> assing_var . EQUAL AMPERSANT IDVAR
    (118) expression -> assing_var .
    (76) fun_call -> assing_var . LPAREN params RPAREN

    EQUAL           shift and go to state 201
    RBRACKET        reduce using rule 118 (expression -> assing_var .)
    AND             reduce using rule 118 (expression -> assing_var .)
    OR              reduce using rule 118 (expression -> assing_var .)
    RPAREN          reduce using rule 118 (expression -> assing_var .)
    SEMI            reduce using rule 118 (expression -> assing_var .)
    COMMA           reduce using rule 118 (expression -> assing_var .)
    LPAREN          shift and go to state 57


state 112

    (114) expression -> simple_expression .

    RBRACKET        reduce using rule 114 (expression -> simple_expression .)
    AND             reduce using rule 114 (expression -> simple_expression .)
    OR              reduce using rule 114 (expression -> simple_expression .)
    RPAREN          reduce using rule 114 (expression -> simple_expression .)
    SEMI            reduce using rule 114 (expression -> simple_expression .)
    COMMA           reduce using rule 114 (expression -> simple_expression .)


state 113

    (119) expression -> fun_call .
    (143) additive_expression -> fun_call .

  ! reduce/reduce conflict for RBRACKET resolved using rule 119 (expression -> fun_call .)
  ! reduce/reduce conflict for AND resolved using rule 119 (expression -> fun_call .)
  ! reduce/reduce conflict for OR resolved using rule 119 (expression -> fun_call .)
  ! reduce/reduce conflict for RPAREN resolved using rule 119 (expression -> fun_call .)
  ! reduce/reduce conflict for SEMI resolved using rule 119 (expression -> fun_call .)
  ! reduce/reduce conflict for COMMA resolved using rule 119 (expression -> fun_call .)
    RBRACKET        reduce using rule 119 (expression -> fun_call .)
    AND             reduce using rule 119 (expression -> fun_call .)
    OR              reduce using rule 119 (expression -> fun_call .)
    RPAREN          reduce using rule 119 (expression -> fun_call .)
    SEMI            reduce using rule 119 (expression -> fun_call .)
    COMMA           reduce using rule 119 (expression -> fun_call .)
    LESS            reduce using rule 143 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    GREATER         reduce using rule 143 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 143 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 143 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 143 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 143 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 143 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 143 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 143 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 143 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 143 (additive_expression -> fun_call .)
    PLUS            reduce using rule 143 (additive_expression -> fun_call .)
    MINUS           reduce using rule 143 (additive_expression -> fun_call .)

  ! RBRACKET        [ reduce using rule 143 (additive_expression -> fun_call .) ]
  ! AND             [ reduce using rule 143 (additive_expression -> fun_call .) ]
  ! OR              [ reduce using rule 143 (additive_expression -> fun_call .) ]
  ! RPAREN          [ reduce using rule 143 (additive_expression -> fun_call .) ]
  ! SEMI            [ reduce using rule 143 (additive_expression -> fun_call .) ]
  ! COMMA           [ reduce using rule 143 (additive_expression -> fun_call .) ]


state 114

    (63) assing_var -> var .
    (64) assing_var -> var . ARROW ID
    (65) assing_var -> var . DARROW ID
    (151) factor -> var .

  ! reduce/reduce conflict for RBRACKET resolved using rule 63 (assing_var -> var .)
  ! reduce/reduce conflict for AND resolved using rule 63 (assing_var -> var .)
  ! reduce/reduce conflict for OR resolved using rule 63 (assing_var -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 63 (assing_var -> var .)
  ! reduce/reduce conflict for SEMI resolved using rule 63 (assing_var -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 63 (assing_var -> var .)
    EQUAL           reduce using rule 63 (assing_var -> var .)
    LPAREN          reduce using rule 63 (assing_var -> var .)
    RBRACKET        reduce using rule 63 (assing_var -> var .)
    AND             reduce using rule 63 (assing_var -> var .)
    OR              reduce using rule 63 (assing_var -> var .)
    RPAREN          reduce using rule 63 (assing_var -> var .)
    SEMI            reduce using rule 63 (assing_var -> var .)
    COMMA           reduce using rule 63 (assing_var -> var .)
    ARROW           shift and go to state 68
    DARROW          shift and go to state 69
    MINUSMINUS      reduce using rule 151 (factor -> var .)
    PLUSPLUS        reduce using rule 151 (factor -> var .)
    TIMES           reduce using rule 151 (factor -> var .)
    DIVIDE          reduce using rule 151 (factor -> var .)
    LESS            reduce using rule 151 (factor -> var .)
    LESSEQUAL       reduce using rule 151 (factor -> var .)
    GREATER         reduce using rule 151 (factor -> var .)
    GREATEREQUAL    reduce using rule 151 (factor -> var .)
    DEQUAL          reduce using rule 151 (factor -> var .)
    DISTINT         reduce using rule 151 (factor -> var .)
    ISEQUAL         reduce using rule 151 (factor -> var .)
    IS_IDENTICAL    reduce using rule 151 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 151 (factor -> var .)
    SR_EQUAL        reduce using rule 151 (factor -> var .)
    SL_EQUAL        reduce using rule 151 (factor -> var .)
    AND_EQUAL       reduce using rule 151 (factor -> var .)
    OR_EQUAL        reduce using rule 151 (factor -> var .)
    XOR_EQUAL       reduce using rule 151 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 151 (factor -> var .)
    PLUS            reduce using rule 151 (factor -> var .)
    MINUS           reduce using rule 151 (factor -> var .)

  ! RBRACKET        [ reduce using rule 151 (factor -> var .) ]
  ! AND             [ reduce using rule 151 (factor -> var .) ]
  ! OR              [ reduce using rule 151 (factor -> var .) ]
  ! RPAREN          [ reduce using rule 151 (factor -> var .) ]
  ! SEMI            [ reduce using rule 151 (factor -> var .) ]
  ! COMMA           [ reduce using rule 151 (factor -> var .) ]


state 115

    (40) var_declaration -> TIMESTIMES IDVAR SEMI .
    (41) var_declaration -> TIMESTIMES IDVAR SEMI . var_declaration
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TIMESTIMES      reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    AMPERSANT       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FUNCTION        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRIVATE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PUBLIC          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PROTECTED       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    REQUIRE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    INCLUDE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLASS           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    IF              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SWITCH          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CASE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DEFAULT         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FOR             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    WHILE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DO              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ID              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRINT           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRINTR          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    VARDUMP         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ECHO            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLOSETAG        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LPAREN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    NUM             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    STRING          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TRUE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FALSE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RETURN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    var_declaration                shift and go to state 202
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 116

    (42) var_declaration -> assing_var IGUAL NUM . SEMI var_declaration
    (43) var_declaration -> assing_var IGUAL NUM . SEMI
    (152) factor -> NUM .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 203
    MINUSMINUS      reduce using rule 152 (factor -> NUM .)
    PLUSPLUS        reduce using rule 152 (factor -> NUM .)
    TIMES           reduce using rule 152 (factor -> NUM .)
    DIVIDE          reduce using rule 152 (factor -> NUM .)
    LESS            reduce using rule 152 (factor -> NUM .)
    LESSEQUAL       reduce using rule 152 (factor -> NUM .)
    GREATER         reduce using rule 152 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 152 (factor -> NUM .)
    DEQUAL          reduce using rule 152 (factor -> NUM .)
    DISTINT         reduce using rule 152 (factor -> NUM .)
    ISEQUAL         reduce using rule 152 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 152 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 152 (factor -> NUM .)
    SR_EQUAL        reduce using rule 152 (factor -> NUM .)
    SL_EQUAL        reduce using rule 152 (factor -> NUM .)
    AND_EQUAL       reduce using rule 152 (factor -> NUM .)
    OR_EQUAL        reduce using rule 152 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 152 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 152 (factor -> NUM .)
    PLUS            reduce using rule 152 (factor -> NUM .)
    MINUS           reduce using rule 152 (factor -> NUM .)

  ! SEMI            [ reduce using rule 152 (factor -> NUM .) ]


state 117

    (44) var_declaration -> assing_var IGUAL STRING . SEMI var_declaration
    (45) var_declaration -> assing_var IGUAL STRING . SEMI
    (153) factor -> STRING .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 204
    MINUSMINUS      reduce using rule 153 (factor -> STRING .)
    PLUSPLUS        reduce using rule 153 (factor -> STRING .)
    TIMES           reduce using rule 153 (factor -> STRING .)
    DIVIDE          reduce using rule 153 (factor -> STRING .)
    LESS            reduce using rule 153 (factor -> STRING .)
    LESSEQUAL       reduce using rule 153 (factor -> STRING .)
    GREATER         reduce using rule 153 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 153 (factor -> STRING .)
    DEQUAL          reduce using rule 153 (factor -> STRING .)
    DISTINT         reduce using rule 153 (factor -> STRING .)
    ISEQUAL         reduce using rule 153 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 153 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 153 (factor -> STRING .)
    SR_EQUAL        reduce using rule 153 (factor -> STRING .)
    SL_EQUAL        reduce using rule 153 (factor -> STRING .)
    AND_EQUAL       reduce using rule 153 (factor -> STRING .)
    OR_EQUAL        reduce using rule 153 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 153 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 153 (factor -> STRING .)
    PLUS            reduce using rule 153 (factor -> STRING .)
    MINUS           reduce using rule 153 (factor -> STRING .)

  ! SEMI            [ reduce using rule 153 (factor -> STRING .) ]


state 118

    (46) var_declaration -> assing_var IGUAL boolean . SEMI var_declaration
    (47) var_declaration -> assing_var IGUAL boolean . SEMI
    (154) factor -> boolean .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 205
    MINUSMINUS      reduce using rule 154 (factor -> boolean .)
    PLUSPLUS        reduce using rule 154 (factor -> boolean .)
    TIMES           reduce using rule 154 (factor -> boolean .)
    DIVIDE          reduce using rule 154 (factor -> boolean .)
    LESS            reduce using rule 154 (factor -> boolean .)
    LESSEQUAL       reduce using rule 154 (factor -> boolean .)
    GREATER         reduce using rule 154 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 154 (factor -> boolean .)
    DEQUAL          reduce using rule 154 (factor -> boolean .)
    DISTINT         reduce using rule 154 (factor -> boolean .)
    ISEQUAL         reduce using rule 154 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 154 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 154 (factor -> boolean .)
    SR_EQUAL        reduce using rule 154 (factor -> boolean .)
    SL_EQUAL        reduce using rule 154 (factor -> boolean .)
    AND_EQUAL       reduce using rule 154 (factor -> boolean .)
    OR_EQUAL        reduce using rule 154 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 154 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 154 (factor -> boolean .)
    PLUS            reduce using rule 154 (factor -> boolean .)
    MINUS           reduce using rule 154 (factor -> boolean .)

  ! SEMI            [ reduce using rule 154 (factor -> boolean .) ]


state 119

    (48) var_declaration -> assing_var IGUAL IDVAR . SEMI var_declaration
    (49) var_declaration -> assing_var IGUAL IDVAR . SEMI
    (155) factor -> IDVAR . LPAREN args RPAREN
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            shift and go to state 206
    LPAREN          shift and go to state 167
    ARROW           reduce using rule 120 (var -> IDVAR .)
    DARROW          reduce using rule 120 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 120 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 120 (var -> IDVAR .)
    TIMES           reduce using rule 120 (var -> IDVAR .)
    DIVIDE          reduce using rule 120 (var -> IDVAR .)
    LESS            reduce using rule 120 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 120 (var -> IDVAR .)
    GREATER         reduce using rule 120 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 120 (var -> IDVAR .)
    DEQUAL          reduce using rule 120 (var -> IDVAR .)
    DISTINT         reduce using rule 120 (var -> IDVAR .)
    ISEQUAL         reduce using rule 120 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 120 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 120 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 120 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 120 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 120 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 120 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 120 (var -> IDVAR .)
    PLUS            reduce using rule 120 (var -> IDVAR .)
    MINUS           reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48

  ! SEMI            [ reduce using rule 120 (var -> IDVAR .) ]
  ! LPAREN          [ reduce using rule 120 (var -> IDVAR .) ]


state 120

    (50) var_declaration -> assing_var IGUAL read_data . SEMI

    SEMI            shift and go to state 207


state 121

    (55) var_declaration -> assing_var IGUAL simple_expression . SEMI

    SEMI            shift and go to state 208


state 122

    (57) read_data -> POST . LBRACKET STRING RBRACKET

    LBRACKET        shift and go to state 209


state 123

    (58) read_data -> GET . LBRACKET STRING RBRACKET

    LBRACKET        shift and go to state 210


state 124

    (76) fun_call -> assing_var LPAREN params . RPAREN

    RPAREN          shift and go to state 211


state 125

    (80) params -> param_list .

    RPAREN          reduce using rule 80 (params -> param_list .)


state 126

    (81) params -> empty .

    RPAREN          reduce using rule 81 (params -> empty .)


state 127

    (82) param_list -> param .
    (83) param_list -> param . COMMA param_list

    RPAREN          reduce using rule 82 (param_list -> param .)
    COMMA           shift and go to state 212


state 128

    (84) param -> IDVAR .
    (85) param -> IDVAR . LBRACKET RBRACKET
    (155) factor -> IDVAR . LPAREN args RPAREN
    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 84 (param -> IDVAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 84 (param -> IDVAR .)
    COMMA           reduce using rule 84 (param -> IDVAR .)
    RPAREN          reduce using rule 84 (param -> IDVAR .)
    LBRACKET        shift and go to state 213
    LPAREN          shift and go to state 167
    TIMES           reduce using rule 120 (var -> IDVAR .)
    DIVIDE          reduce using rule 120 (var -> IDVAR .)

  ! COMMA           [ reduce using rule 120 (var -> IDVAR .) ]
  ! RPAREN          [ reduce using rule 120 (var -> IDVAR .) ]


state 129

    (86) param -> term .
    (146) term -> term . mulop factor
    (148) mulop -> . TIMES
    (149) mulop -> . DIVIDE

    COMMA           reduce using rule 86 (param -> term .)
    RPAREN          reduce using rule 86 (param -> term .)
    TIMES           shift and go to state 194
    DIVIDE          shift and go to state 195

    mulop                          shift and go to state 193

state 130

    (151) factor -> var .

    TIMES           reduce using rule 151 (factor -> var .)
    DIVIDE          reduce using rule 151 (factor -> var .)
    COMMA           reduce using rule 151 (factor -> var .)
    RPAREN          reduce using rule 151 (factor -> var .)
    DARROW          reduce using rule 151 (factor -> var .)
    LESS            reduce using rule 151 (factor -> var .)
    LESSEQUAL       reduce using rule 151 (factor -> var .)
    GREATER         reduce using rule 151 (factor -> var .)
    GREATEREQUAL    reduce using rule 151 (factor -> var .)
    DEQUAL          reduce using rule 151 (factor -> var .)
    DISTINT         reduce using rule 151 (factor -> var .)
    ISEQUAL         reduce using rule 151 (factor -> var .)
    IS_IDENTICAL    reduce using rule 151 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 151 (factor -> var .)
    SR_EQUAL        reduce using rule 151 (factor -> var .)
    SL_EQUAL        reduce using rule 151 (factor -> var .)
    AND_EQUAL       reduce using rule 151 (factor -> var .)
    OR_EQUAL        reduce using rule 151 (factor -> var .)
    XOR_EQUAL       reduce using rule 151 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 151 (factor -> var .)
    PLUS            reduce using rule 151 (factor -> var .)
    MINUS           reduce using rule 151 (factor -> var .)
    SEMI            reduce using rule 151 (factor -> var .)
    RBRACKET        reduce using rule 151 (factor -> var .)
    AND             reduce using rule 151 (factor -> var .)
    OR              reduce using rule 151 (factor -> var .)
    MINUSMINUS      reduce using rule 151 (factor -> var .)
    PLUSPLUS        reduce using rule 151 (factor -> var .)


state 131

    (52) var_declaration -> AMPERSANT IDVAR SEMI . var_declaration
    (54) var_declaration -> AMPERSANT IDVAR SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TIMESTIMES      reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    AMPERSANT       reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FUNCTION        reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRIVATE         reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PUBLIC          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PROTECTED       reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    REQUIRE         reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    INCLUDE         reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLASS           reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    IF              reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SWITCH          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CASE            reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DEFAULT         reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FOR             reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    WHILE           reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DO              reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ID              reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRINT           reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRINTR          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    VARDUMP         reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ECHO            reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLOSETAG        reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LPAREN          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    NUM             reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    STRING          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TRUE            reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FALSE           reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RBLOCK          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LBLOCK          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RETURN          reduce using rule 54 (var_declaration -> AMPERSANT IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    var_declaration                shift and go to state 214
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 132

    (53) var_declaration -> AMPERSANT IDVAR IGUAL . IDVAR SEMI selection_stmt

    IDVAR           shift and go to state 215


state 133

    (73) fun_declaration -> FUNCTION ID LPAREN . params RPAREN
    (74) fun_declaration -> FUNCTION ID LPAREN . params RPAREN compount_stmt
    (80) params -> . param_list
    (81) params -> . empty
    (82) param_list -> . param
    (83) param_list -> . param COMMA param_list
    (167) empty -> .
    (84) param -> . IDVAR
    (85) param -> . IDVAR LBRACKET RBRACKET
    (86) param -> . term
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    RPAREN          reduce using rule 167 (empty -> .)
    IDVAR           shift and go to state 128
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    params                         shift and go to state 216
    param_list                     shift and go to state 125
    empty                          shift and go to state 126
    param                          shift and go to state 127
    term                           shift and go to state 129
    factor                         shift and go to state 103
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 134

    (163) typeclass -> ID IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 217


state 135

    (75) fun_call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 218


state 136

    (24) header_declaration -> REQUIRE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 219


state 137

    (25) header_declaration -> INCLUDE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 220


state 138

    (27) class_declaration -> CLASS ID LBLOCK . attributes RBLOCK
    (28) attributes -> . attribute
    (29) attributes -> . attribute attributes
    (30) attribute -> . attribute area var_declaration
    (31) attribute -> . area var_declaration
    (32) attribute -> . attribute area fun_declaration
    (33) attribute -> . area fun_declaration
    (34) attribute -> . fun_declaration
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attributes                     shift and go to state 221
    attribute                      shift and go to state 222
    area                           shift and go to state 223
    fun_declaration                shift and go to state 224

state 139

    (100) selection_stmt -> IF LPAREN expression . RPAREN statement
    (101) selection_stmt -> IF LPAREN expression . RPAREN statement selection
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RPAREN          shift and go to state 225
    AND             shift and go to state 199
    OR              shift and go to state 200


state 140

    (104) selection_stmt -> SWITCH LPAREN var . RPAREN statement

    RPAREN          shift and go to state 226


state 141

    (120) var -> IDVAR .
    (121) var -> IDVAR . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 120 (var -> IDVAR .)
    LBRACKET        shift and go to state 48


state 142

    (64) assing_var -> var ARROW ID .

    LPAREN          reduce using rule 64 (assing_var -> var ARROW ID .)
    EQUAL           reduce using rule 64 (assing_var -> var ARROW ID .)
    MUL_EQUAL       reduce using rule 64 (assing_var -> var ARROW ID .)
    DIV_EQUAL       reduce using rule 64 (assing_var -> var ARROW ID .)
    CONCAT_EQUAL    reduce using rule 64 (assing_var -> var ARROW ID .)
    MOD_EQUAL       reduce using rule 64 (assing_var -> var ARROW ID .)
    PLUS_EQUAL      reduce using rule 64 (assing_var -> var ARROW ID .)
    MINUS_EQUAL     reduce using rule 64 (assing_var -> var ARROW ID .)
    RBRACKET        reduce using rule 64 (assing_var -> var ARROW ID .)
    AND             reduce using rule 64 (assing_var -> var ARROW ID .)
    OR              reduce using rule 64 (assing_var -> var ARROW ID .)
    RPAREN          reduce using rule 64 (assing_var -> var ARROW ID .)
    SEMI            reduce using rule 64 (assing_var -> var ARROW ID .)
    COMMA           reduce using rule 64 (assing_var -> var ARROW ID .)


state 143

    (65) assing_var -> var DARROW ID .

    LPAREN          reduce using rule 65 (assing_var -> var DARROW ID .)
    EQUAL           reduce using rule 65 (assing_var -> var DARROW ID .)
    MUL_EQUAL       reduce using rule 65 (assing_var -> var DARROW ID .)
    DIV_EQUAL       reduce using rule 65 (assing_var -> var DARROW ID .)
    CONCAT_EQUAL    reduce using rule 65 (assing_var -> var DARROW ID .)
    MOD_EQUAL       reduce using rule 65 (assing_var -> var DARROW ID .)
    PLUS_EQUAL      reduce using rule 65 (assing_var -> var DARROW ID .)
    MINUS_EQUAL     reduce using rule 65 (assing_var -> var DARROW ID .)
    RBRACKET        reduce using rule 65 (assing_var -> var DARROW ID .)
    AND             reduce using rule 65 (assing_var -> var DARROW ID .)
    OR              reduce using rule 65 (assing_var -> var DARROW ID .)
    RPAREN          reduce using rule 65 (assing_var -> var DARROW ID .)
    SEMI            reduce using rule 65 (assing_var -> var DARROW ID .)
    COMMA           reduce using rule 65 (assing_var -> var DARROW ID .)


state 144

    (105) selection_stmt -> CASE NUM COLON . statement BREAK SEMI
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    statement                      shift and go to state 227
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 145

    (106) selection_stmt -> CASE STRING COLON . statement BREAK SEMI
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    statement                      shift and go to state 228
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 146

    (107) selection_stmt -> DEFAULT COLON statement . BREAK SEMI

    BREAK           shift and go to state 229


state 147

    (92) statement -> expression_stmt .

    BREAK           reduce using rule 92 (statement -> expression_stmt .)
    SEMI            reduce using rule 92 (statement -> expression_stmt .)
    ELSE            reduce using rule 92 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 92 (statement -> expression_stmt .)
    IDVAR           reduce using rule 92 (statement -> expression_stmt .)
    TIMESTIMES      reduce using rule 92 (statement -> expression_stmt .)
    AMPERSANT       reduce using rule 92 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 92 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 92 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 92 (statement -> expression_stmt .)
    PROTECTED       reduce using rule 92 (statement -> expression_stmt .)
    REQUIRE         reduce using rule 92 (statement -> expression_stmt .)
    INCLUDE         reduce using rule 92 (statement -> expression_stmt .)
    CLASS           reduce using rule 92 (statement -> expression_stmt .)
    IF              reduce using rule 92 (statement -> expression_stmt .)
    SWITCH          reduce using rule 92 (statement -> expression_stmt .)
    CASE            reduce using rule 92 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 92 (statement -> expression_stmt .)
    FOR             reduce using rule 92 (statement -> expression_stmt .)
    WHILE           reduce using rule 92 (statement -> expression_stmt .)
    DO              reduce using rule 92 (statement -> expression_stmt .)
    ID              reduce using rule 92 (statement -> expression_stmt .)
    PRINT           reduce using rule 92 (statement -> expression_stmt .)
    PRINTR          reduce using rule 92 (statement -> expression_stmt .)
    VARDUMP         reduce using rule 92 (statement -> expression_stmt .)
    ECHO            reduce using rule 92 (statement -> expression_stmt .)
    CLOSETAG        reduce using rule 92 (statement -> expression_stmt .)
    LPAREN          reduce using rule 92 (statement -> expression_stmt .)
    NUM             reduce using rule 92 (statement -> expression_stmt .)
    STRING          reduce using rule 92 (statement -> expression_stmt .)
    TRUE            reduce using rule 92 (statement -> expression_stmt .)
    FALSE           reduce using rule 92 (statement -> expression_stmt .)
    RBLOCK          reduce using rule 92 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 92 (statement -> expression_stmt .)
    RETURN          reduce using rule 92 (statement -> expression_stmt .)


state 148

    (93) statement -> compount_stmt .

    BREAK           reduce using rule 93 (statement -> compount_stmt .)
    SEMI            reduce using rule 93 (statement -> compount_stmt .)
    ELSE            reduce using rule 93 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 93 (statement -> compount_stmt .)
    IDVAR           reduce using rule 93 (statement -> compount_stmt .)
    TIMESTIMES      reduce using rule 93 (statement -> compount_stmt .)
    AMPERSANT       reduce using rule 93 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 93 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 93 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 93 (statement -> compount_stmt .)
    PROTECTED       reduce using rule 93 (statement -> compount_stmt .)
    REQUIRE         reduce using rule 93 (statement -> compount_stmt .)
    INCLUDE         reduce using rule 93 (statement -> compount_stmt .)
    CLASS           reduce using rule 93 (statement -> compount_stmt .)
    IF              reduce using rule 93 (statement -> compount_stmt .)
    SWITCH          reduce using rule 93 (statement -> compount_stmt .)
    CASE            reduce using rule 93 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 93 (statement -> compount_stmt .)
    FOR             reduce using rule 93 (statement -> compount_stmt .)
    WHILE           reduce using rule 93 (statement -> compount_stmt .)
    DO              reduce using rule 93 (statement -> compount_stmt .)
    ID              reduce using rule 93 (statement -> compount_stmt .)
    PRINT           reduce using rule 93 (statement -> compount_stmt .)
    PRINTR          reduce using rule 93 (statement -> compount_stmt .)
    VARDUMP         reduce using rule 93 (statement -> compount_stmt .)
    ECHO            reduce using rule 93 (statement -> compount_stmt .)
    CLOSETAG        reduce using rule 93 (statement -> compount_stmt .)
    LPAREN          reduce using rule 93 (statement -> compount_stmt .)
    NUM             reduce using rule 93 (statement -> compount_stmt .)
    STRING          reduce using rule 93 (statement -> compount_stmt .)
    TRUE            reduce using rule 93 (statement -> compount_stmt .)
    FALSE           reduce using rule 93 (statement -> compount_stmt .)
    RBLOCK          reduce using rule 93 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 93 (statement -> compount_stmt .)
    RETURN          reduce using rule 93 (statement -> compount_stmt .)


state 149

    (94) statement -> selection_stmt .

    BREAK           reduce using rule 94 (statement -> selection_stmt .)
    SEMI            reduce using rule 94 (statement -> selection_stmt .)
    ELSE            reduce using rule 94 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 94 (statement -> selection_stmt .)
    IDVAR           reduce using rule 94 (statement -> selection_stmt .)
    TIMESTIMES      reduce using rule 94 (statement -> selection_stmt .)
    AMPERSANT       reduce using rule 94 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 94 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 94 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 94 (statement -> selection_stmt .)
    PROTECTED       reduce using rule 94 (statement -> selection_stmt .)
    REQUIRE         reduce using rule 94 (statement -> selection_stmt .)
    INCLUDE         reduce using rule 94 (statement -> selection_stmt .)
    CLASS           reduce using rule 94 (statement -> selection_stmt .)
    IF              reduce using rule 94 (statement -> selection_stmt .)
    SWITCH          reduce using rule 94 (statement -> selection_stmt .)
    CASE            reduce using rule 94 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 94 (statement -> selection_stmt .)
    FOR             reduce using rule 94 (statement -> selection_stmt .)
    WHILE           reduce using rule 94 (statement -> selection_stmt .)
    DO              reduce using rule 94 (statement -> selection_stmt .)
    ID              reduce using rule 94 (statement -> selection_stmt .)
    PRINT           reduce using rule 94 (statement -> selection_stmt .)
    PRINTR          reduce using rule 94 (statement -> selection_stmt .)
    VARDUMP         reduce using rule 94 (statement -> selection_stmt .)
    ECHO            reduce using rule 94 (statement -> selection_stmt .)
    CLOSETAG        reduce using rule 94 (statement -> selection_stmt .)
    LPAREN          reduce using rule 94 (statement -> selection_stmt .)
    NUM             reduce using rule 94 (statement -> selection_stmt .)
    STRING          reduce using rule 94 (statement -> selection_stmt .)
    TRUE            reduce using rule 94 (statement -> selection_stmt .)
    FALSE           reduce using rule 94 (statement -> selection_stmt .)
    RBLOCK          reduce using rule 94 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 94 (statement -> selection_stmt .)
    RETURN          reduce using rule 94 (statement -> selection_stmt .)


state 150

    (95) statement -> iteration_stmt .

    BREAK           reduce using rule 95 (statement -> iteration_stmt .)
    SEMI            reduce using rule 95 (statement -> iteration_stmt .)
    ELSE            reduce using rule 95 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 95 (statement -> iteration_stmt .)
    IDVAR           reduce using rule 95 (statement -> iteration_stmt .)
    TIMESTIMES      reduce using rule 95 (statement -> iteration_stmt .)
    AMPERSANT       reduce using rule 95 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 95 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 95 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 95 (statement -> iteration_stmt .)
    PROTECTED       reduce using rule 95 (statement -> iteration_stmt .)
    REQUIRE         reduce using rule 95 (statement -> iteration_stmt .)
    INCLUDE         reduce using rule 95 (statement -> iteration_stmt .)
    CLASS           reduce using rule 95 (statement -> iteration_stmt .)
    IF              reduce using rule 95 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 95 (statement -> iteration_stmt .)
    CASE            reduce using rule 95 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 95 (statement -> iteration_stmt .)
    FOR             reduce using rule 95 (statement -> iteration_stmt .)
    WHILE           reduce using rule 95 (statement -> iteration_stmt .)
    DO              reduce using rule 95 (statement -> iteration_stmt .)
    ID              reduce using rule 95 (statement -> iteration_stmt .)
    PRINT           reduce using rule 95 (statement -> iteration_stmt .)
    PRINTR          reduce using rule 95 (statement -> iteration_stmt .)
    VARDUMP         reduce using rule 95 (statement -> iteration_stmt .)
    ECHO            reduce using rule 95 (statement -> iteration_stmt .)
    CLOSETAG        reduce using rule 95 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 95 (statement -> iteration_stmt .)
    NUM             reduce using rule 95 (statement -> iteration_stmt .)
    STRING          reduce using rule 95 (statement -> iteration_stmt .)
    TRUE            reduce using rule 95 (statement -> iteration_stmt .)
    FALSE           reduce using rule 95 (statement -> iteration_stmt .)
    RBLOCK          reduce using rule 95 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 95 (statement -> iteration_stmt .)
    RETURN          reduce using rule 95 (statement -> iteration_stmt .)


state 151

    (96) statement -> return_stmt .

    BREAK           reduce using rule 96 (statement -> return_stmt .)
    SEMI            reduce using rule 96 (statement -> return_stmt .)
    ELSE            reduce using rule 96 (statement -> return_stmt .)
    ELSEIF          reduce using rule 96 (statement -> return_stmt .)
    IDVAR           reduce using rule 96 (statement -> return_stmt .)
    TIMESTIMES      reduce using rule 96 (statement -> return_stmt .)
    AMPERSANT       reduce using rule 96 (statement -> return_stmt .)
    FUNCTION        reduce using rule 96 (statement -> return_stmt .)
    PRIVATE         reduce using rule 96 (statement -> return_stmt .)
    PUBLIC          reduce using rule 96 (statement -> return_stmt .)
    PROTECTED       reduce using rule 96 (statement -> return_stmt .)
    REQUIRE         reduce using rule 96 (statement -> return_stmt .)
    INCLUDE         reduce using rule 96 (statement -> return_stmt .)
    CLASS           reduce using rule 96 (statement -> return_stmt .)
    IF              reduce using rule 96 (statement -> return_stmt .)
    SWITCH          reduce using rule 96 (statement -> return_stmt .)
    CASE            reduce using rule 96 (statement -> return_stmt .)
    DEFAULT         reduce using rule 96 (statement -> return_stmt .)
    FOR             reduce using rule 96 (statement -> return_stmt .)
    WHILE           reduce using rule 96 (statement -> return_stmt .)
    DO              reduce using rule 96 (statement -> return_stmt .)
    ID              reduce using rule 96 (statement -> return_stmt .)
    PRINT           reduce using rule 96 (statement -> return_stmt .)
    PRINTR          reduce using rule 96 (statement -> return_stmt .)
    VARDUMP         reduce using rule 96 (statement -> return_stmt .)
    ECHO            reduce using rule 96 (statement -> return_stmt .)
    CLOSETAG        reduce using rule 96 (statement -> return_stmt .)
    LPAREN          reduce using rule 96 (statement -> return_stmt .)
    NUM             reduce using rule 96 (statement -> return_stmt .)
    STRING          reduce using rule 96 (statement -> return_stmt .)
    TRUE            reduce using rule 96 (statement -> return_stmt .)
    FALSE           reduce using rule 96 (statement -> return_stmt .)
    RBLOCK          reduce using rule 96 (statement -> return_stmt .)
    LBLOCK          reduce using rule 96 (statement -> return_stmt .)
    RETURN          reduce using rule 96 (statement -> return_stmt .)


state 152

    (97) statement -> class_declaration .

    BREAK           reduce using rule 97 (statement -> class_declaration .)
    SEMI            reduce using rule 97 (statement -> class_declaration .)
    ELSE            reduce using rule 97 (statement -> class_declaration .)
    ELSEIF          reduce using rule 97 (statement -> class_declaration .)
    IDVAR           reduce using rule 97 (statement -> class_declaration .)
    TIMESTIMES      reduce using rule 97 (statement -> class_declaration .)
    AMPERSANT       reduce using rule 97 (statement -> class_declaration .)
    FUNCTION        reduce using rule 97 (statement -> class_declaration .)
    PRIVATE         reduce using rule 97 (statement -> class_declaration .)
    PUBLIC          reduce using rule 97 (statement -> class_declaration .)
    PROTECTED       reduce using rule 97 (statement -> class_declaration .)
    REQUIRE         reduce using rule 97 (statement -> class_declaration .)
    INCLUDE         reduce using rule 97 (statement -> class_declaration .)
    CLASS           reduce using rule 97 (statement -> class_declaration .)
    IF              reduce using rule 97 (statement -> class_declaration .)
    SWITCH          reduce using rule 97 (statement -> class_declaration .)
    CASE            reduce using rule 97 (statement -> class_declaration .)
    DEFAULT         reduce using rule 97 (statement -> class_declaration .)
    FOR             reduce using rule 97 (statement -> class_declaration .)
    WHILE           reduce using rule 97 (statement -> class_declaration .)
    DO              reduce using rule 97 (statement -> class_declaration .)
    ID              reduce using rule 97 (statement -> class_declaration .)
    PRINT           reduce using rule 97 (statement -> class_declaration .)
    PRINTR          reduce using rule 97 (statement -> class_declaration .)
    VARDUMP         reduce using rule 97 (statement -> class_declaration .)
    ECHO            reduce using rule 97 (statement -> class_declaration .)
    CLOSETAG        reduce using rule 97 (statement -> class_declaration .)
    LPAREN          reduce using rule 97 (statement -> class_declaration .)
    NUM             reduce using rule 97 (statement -> class_declaration .)
    STRING          reduce using rule 97 (statement -> class_declaration .)
    TRUE            reduce using rule 97 (statement -> class_declaration .)
    FALSE           reduce using rule 97 (statement -> class_declaration .)
    RBLOCK          reduce using rule 97 (statement -> class_declaration .)
    LBLOCK          reduce using rule 97 (statement -> class_declaration .)
    RETURN          reduce using rule 97 (statement -> class_declaration .)


state 153

    (98) statement -> echo_stmt .
    (14) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    BREAK           reduce using rule 98 (statement -> echo_stmt .)
    SEMI            reduce using rule 98 (statement -> echo_stmt .)
    ELSE            reduce using rule 98 (statement -> echo_stmt .)
    ELSEIF          reduce using rule 98 (statement -> echo_stmt .)
    IDVAR           reduce using rule 98 (statement -> echo_stmt .)
    TIMESTIMES      reduce using rule 98 (statement -> echo_stmt .)
    AMPERSANT       reduce using rule 98 (statement -> echo_stmt .)
    FUNCTION        reduce using rule 98 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 98 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 98 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 98 (statement -> echo_stmt .)
    REQUIRE         reduce using rule 98 (statement -> echo_stmt .)
    INCLUDE         reduce using rule 98 (statement -> echo_stmt .)
    CLASS           reduce using rule 98 (statement -> echo_stmt .)
    IF              reduce using rule 98 (statement -> echo_stmt .)
    SWITCH          reduce using rule 98 (statement -> echo_stmt .)
    CASE            reduce using rule 98 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 98 (statement -> echo_stmt .)
    FOR             reduce using rule 98 (statement -> echo_stmt .)
    WHILE           reduce using rule 98 (statement -> echo_stmt .)
    DO              reduce using rule 98 (statement -> echo_stmt .)
    ID              reduce using rule 98 (statement -> echo_stmt .)
    PRINT           reduce using rule 98 (statement -> echo_stmt .)
    PRINTR          reduce using rule 98 (statement -> echo_stmt .)
    VARDUMP         reduce using rule 98 (statement -> echo_stmt .)
    CLOSETAG        reduce using rule 98 (statement -> echo_stmt .)
    LPAREN          reduce using rule 98 (statement -> echo_stmt .)
    NUM             reduce using rule 98 (statement -> echo_stmt .)
    STRING          reduce using rule 98 (statement -> echo_stmt .)
    TRUE            reduce using rule 98 (statement -> echo_stmt .)
    FALSE           reduce using rule 98 (statement -> echo_stmt .)
    RBLOCK          reduce using rule 98 (statement -> echo_stmt .)
    LBLOCK          reduce using rule 98 (statement -> echo_stmt .)
    RETURN          reduce using rule 98 (statement -> echo_stmt .)
    ECHO            shift and go to state 43

  ! ECHO            [ reduce using rule 98 (statement -> echo_stmt .) ]


state 154

    (99) expression_stmt -> expression . SEMI
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    SEMI            shift and go to state 230
    AND             shift and go to state 199
    OR              shift and go to state 200


state 155

    (87) compount_stmt -> LBLOCK . echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (167) empty -> .

    ECHO            reduce using rule 167 (empty -> .)
    IDVAR           reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    LBLOCK          reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    SWITCH          reduce using rule 167 (empty -> .)
    CASE            reduce using rule 167 (empty -> .)
    DEFAULT         reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    DO              reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    CLASS           reduce using rule 167 (empty -> .)
    PRIVATE         reduce using rule 167 (empty -> .)
    PUBLIC          reduce using rule 167 (empty -> .)
    PROTECTED       reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    PRINTR          reduce using rule 167 (empty -> .)
    VARDUMP         reduce using rule 167 (empty -> .)
    LPAREN          reduce using rule 167 (empty -> .)
    NUM             reduce using rule 167 (empty -> .)
    STRING          reduce using rule 167 (empty -> .)
    TRUE            reduce using rule 167 (empty -> .)
    FALSE           reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)

    echo_stmt                      shift and go to state 231
    empty                          shift and go to state 27

state 156

    (111) return_stmt -> RETURN . SEMI
    (112) return_stmt -> RETURN . expression SEMI
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    SEMI            shift and go to state 232
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 233
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 157

    (26) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK

    CLASS           shift and go to state 42


state 158

    (108) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN statement
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 234
    additive_expression            shift and go to state 100
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 159

    (109) iteration_stmt -> WHILE LPAREN expression . RPAREN statement
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RPAREN          shift and go to state 235
    AND             shift and go to state 199
    OR              shift and go to state 200


state 160

    (110) iteration_stmt -> DO LBLOCK statement . SEMI RBLOCK WHILE LPAREN expression RPAREN

    SEMI            shift and go to state 236


state 161

    (77) fun_call -> PRINT LPAREN echo_params . RPAREN

    RPAREN          shift and go to state 237


state 162

    (78) fun_call -> PRINTR LPAREN IDVAR . RPAREN

    RPAREN          shift and go to state 238


state 163

    (79) fun_call -> VARDUMP LPAREN IDVAR . RPAREN

    RPAREN          shift and go to state 239


state 164

    (26) class_declaration -> area CLASS ID LBLOCK . attributes RBLOCK
    (28) attributes -> . attribute
    (29) attributes -> . attribute attributes
    (30) attribute -> . attribute area var_declaration
    (31) attribute -> . area var_declaration
    (32) attribute -> . attribute area fun_declaration
    (33) attribute -> . area fun_declaration
    (34) attribute -> . fun_declaration
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    area                           shift and go to state 223
    attributes                     shift and go to state 240
    attribute                      shift and go to state 222
    fun_declaration                shift and go to state 224

state 165

    (14) echo_stmt -> echo_stmt ECHO echo_params SEMI .

    ECHO            reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IDVAR           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TIMESTIMES      reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    AMPERSANT       reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FUNCTION        reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PRIVATE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PUBLIC          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PROTECTED       reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    REQUIRE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    INCLUDE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLASS           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IF              reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SWITCH          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CASE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DEFAULT         reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FOR             reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    WHILE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DO              reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ID              reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PRINT           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PRINTR          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    VARDUMP         reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLOSETAG        reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    BREAK           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SEMI            reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RETURN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LPAREN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    NUM             reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    STRING          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TRUE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FALSE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSEIF          reduce using rule 14 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)


state 166

    (17) echo_params -> echo_param DOT . echo_params
    (16) echo_params -> . echo_param
    (17) echo_params -> . echo_param DOT echo_params
    (18) echo_param -> . STRING
    (19) echo_param -> . IDVAR
    (20) echo_param -> . NUM
    (21) echo_param -> . boolean
    (22) echo_param -> . fun_declaration
    (23) echo_param -> . fun_call
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 82
    IDVAR           shift and go to state 83
    NUM             shift and go to state 84
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89
    FUNCTION        shift and go to state 19
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38

    echo_param                     shift and go to state 81
    echo_params                    shift and go to state 241
    boolean                        shift and go to state 85
    fun_declaration                shift and go to state 86
    fun_call                       shift and go to state 87
    assing_var                     shift and go to state 91
    var                            shift and go to state 30

state 167

    (155) factor -> IDVAR LPAREN . args RPAREN
    (156) args -> . args_list
    (157) args -> . empty
    (158) args -> . VOID
    (159) args_list -> . args_list COMMA expression
    (160) args_list -> . expression
    (167) empty -> .
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    VOID            shift and go to state 245
    RPAREN          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    args                           shift and go to state 242
    args_list                      shift and go to state 243
    empty                          shift and go to state 244
    expression                     shift and go to state 246
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 168

    (51) var_declaration -> IDVAR IGUAL array_declare SEMI .

    IDVAR           reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    TIMESTIMES      reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    AMPERSANT       reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    FUNCTION        reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    PRIVATE         reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    PUBLIC          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    PROTECTED       reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    REQUIRE         reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    INCLUDE         reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    CLASS           reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    IF              reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    SWITCH          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    CASE            reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    DEFAULT         reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    FOR             reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    WHILE           reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    DO              reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    ID              reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    PRINT           reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    PRINTR          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    VARDUMP         reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    ECHO            reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    CLOSETAG        reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    LPAREN          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    NUM             reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    STRING          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    TRUE            reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    FALSE           reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    RBLOCK          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    LBLOCK          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)
    RETURN          reduce using rule 51 (var_declaration -> IDVAR IGUAL array_declare SEMI .)


state 169

    (56) var_declaration -> IDVAR IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    IF              reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CASE            reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FOR             reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DO              reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ID              reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PRINT           reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PRINTR          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    VARDUMP         reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    NUM             reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    STRING          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 56 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)


state 170

    (59) array_declare -> ARRAY LPAREN . array_values RPAREN
    (60) array_values -> . array_value
    (61) array_values -> . array_value COMMA array_values
    (62) array_value -> . factor DARROW factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    array_values                   shift and go to state 247
    array_value                    shift and go to state 248
    factor                         shift and go to state 249
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 171

    (150) factor -> LPAREN expression . RPAREN
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RPAREN          shift and go to state 250
    AND             shift and go to state 199
    OR              shift and go to state 200


state 172

    (122) simple_expression -> additive_expression relop . additive_expression
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    additive_expression            shift and go to state 251
    term                           shift and go to state 101
    fun_call                       shift and go to state 102
    factor                         shift and go to state 103
    assing_var                     shift and go to state 91
    var                            shift and go to state 104
    boolean                        shift and go to state 107

state 173

    (139) additive_expression -> additive_expression addop . term
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    term                           shift and go to state 252
    factor                         shift and go to state 103
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 174

    (124) relop -> LESS .

    ID              reduce using rule 124 (relop -> LESS .)
    PRINT           reduce using rule 124 (relop -> LESS .)
    PRINTR          reduce using rule 124 (relop -> LESS .)
    VARDUMP         reduce using rule 124 (relop -> LESS .)
    LPAREN          reduce using rule 124 (relop -> LESS .)
    NUM             reduce using rule 124 (relop -> LESS .)
    STRING          reduce using rule 124 (relop -> LESS .)
    IDVAR           reduce using rule 124 (relop -> LESS .)
    TRUE            reduce using rule 124 (relop -> LESS .)
    FALSE           reduce using rule 124 (relop -> LESS .)


state 175

    (125) relop -> LESSEQUAL .

    ID              reduce using rule 125 (relop -> LESSEQUAL .)
    PRINT           reduce using rule 125 (relop -> LESSEQUAL .)
    PRINTR          reduce using rule 125 (relop -> LESSEQUAL .)
    VARDUMP         reduce using rule 125 (relop -> LESSEQUAL .)
    LPAREN          reduce using rule 125 (relop -> LESSEQUAL .)
    NUM             reduce using rule 125 (relop -> LESSEQUAL .)
    STRING          reduce using rule 125 (relop -> LESSEQUAL .)
    IDVAR           reduce using rule 125 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 125 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 125 (relop -> LESSEQUAL .)


state 176

    (126) relop -> GREATER .

    ID              reduce using rule 126 (relop -> GREATER .)
    PRINT           reduce using rule 126 (relop -> GREATER .)
    PRINTR          reduce using rule 126 (relop -> GREATER .)
    VARDUMP         reduce using rule 126 (relop -> GREATER .)
    LPAREN          reduce using rule 126 (relop -> GREATER .)
    NUM             reduce using rule 126 (relop -> GREATER .)
    STRING          reduce using rule 126 (relop -> GREATER .)
    IDVAR           reduce using rule 126 (relop -> GREATER .)
    TRUE            reduce using rule 126 (relop -> GREATER .)
    FALSE           reduce using rule 126 (relop -> GREATER .)


state 177

    (127) relop -> GREATEREQUAL .

    ID              reduce using rule 127 (relop -> GREATEREQUAL .)
    PRINT           reduce using rule 127 (relop -> GREATEREQUAL .)
    PRINTR          reduce using rule 127 (relop -> GREATEREQUAL .)
    VARDUMP         reduce using rule 127 (relop -> GREATEREQUAL .)
    LPAREN          reduce using rule 127 (relop -> GREATEREQUAL .)
    NUM             reduce using rule 127 (relop -> GREATEREQUAL .)
    STRING          reduce using rule 127 (relop -> GREATEREQUAL .)
    IDVAR           reduce using rule 127 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 127 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 127 (relop -> GREATEREQUAL .)


state 178

    (128) relop -> DEQUAL .

    ID              reduce using rule 128 (relop -> DEQUAL .)
    PRINT           reduce using rule 128 (relop -> DEQUAL .)
    PRINTR          reduce using rule 128 (relop -> DEQUAL .)
    VARDUMP         reduce using rule 128 (relop -> DEQUAL .)
    LPAREN          reduce using rule 128 (relop -> DEQUAL .)
    NUM             reduce using rule 128 (relop -> DEQUAL .)
    STRING          reduce using rule 128 (relop -> DEQUAL .)
    IDVAR           reduce using rule 128 (relop -> DEQUAL .)
    TRUE            reduce using rule 128 (relop -> DEQUAL .)
    FALSE           reduce using rule 128 (relop -> DEQUAL .)


state 179

    (129) relop -> DISTINT .

    ID              reduce using rule 129 (relop -> DISTINT .)
    PRINT           reduce using rule 129 (relop -> DISTINT .)
    PRINTR          reduce using rule 129 (relop -> DISTINT .)
    VARDUMP         reduce using rule 129 (relop -> DISTINT .)
    LPAREN          reduce using rule 129 (relop -> DISTINT .)
    NUM             reduce using rule 129 (relop -> DISTINT .)
    STRING          reduce using rule 129 (relop -> DISTINT .)
    IDVAR           reduce using rule 129 (relop -> DISTINT .)
    TRUE            reduce using rule 129 (relop -> DISTINT .)
    FALSE           reduce using rule 129 (relop -> DISTINT .)


state 180

    (130) relop -> ISEQUAL .

    ID              reduce using rule 130 (relop -> ISEQUAL .)
    PRINT           reduce using rule 130 (relop -> ISEQUAL .)
    PRINTR          reduce using rule 130 (relop -> ISEQUAL .)
    VARDUMP         reduce using rule 130 (relop -> ISEQUAL .)
    LPAREN          reduce using rule 130 (relop -> ISEQUAL .)
    NUM             reduce using rule 130 (relop -> ISEQUAL .)
    STRING          reduce using rule 130 (relop -> ISEQUAL .)
    IDVAR           reduce using rule 130 (relop -> ISEQUAL .)
    TRUE            reduce using rule 130 (relop -> ISEQUAL .)
    FALSE           reduce using rule 130 (relop -> ISEQUAL .)


state 181

    (131) relop -> IS_IDENTICAL .

    ID              reduce using rule 131 (relop -> IS_IDENTICAL .)
    PRINT           reduce using rule 131 (relop -> IS_IDENTICAL .)
    PRINTR          reduce using rule 131 (relop -> IS_IDENTICAL .)
    VARDUMP         reduce using rule 131 (relop -> IS_IDENTICAL .)
    LPAREN          reduce using rule 131 (relop -> IS_IDENTICAL .)
    NUM             reduce using rule 131 (relop -> IS_IDENTICAL .)
    STRING          reduce using rule 131 (relop -> IS_IDENTICAL .)
    IDVAR           reduce using rule 131 (relop -> IS_IDENTICAL .)
    TRUE            reduce using rule 131 (relop -> IS_IDENTICAL .)
    FALSE           reduce using rule 131 (relop -> IS_IDENTICAL .)


state 182

    (132) relop -> IS_NOT_IDENTICAL .

    ID              reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    PRINT           reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    PRINTR          reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    VARDUMP         reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    STRING          reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    IDVAR           reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 132 (relop -> IS_NOT_IDENTICAL .)


state 183

    (133) relop -> SR_EQUAL .

    ID              reduce using rule 133 (relop -> SR_EQUAL .)
    PRINT           reduce using rule 133 (relop -> SR_EQUAL .)
    PRINTR          reduce using rule 133 (relop -> SR_EQUAL .)
    VARDUMP         reduce using rule 133 (relop -> SR_EQUAL .)
    LPAREN          reduce using rule 133 (relop -> SR_EQUAL .)
    NUM             reduce using rule 133 (relop -> SR_EQUAL .)
    STRING          reduce using rule 133 (relop -> SR_EQUAL .)
    IDVAR           reduce using rule 133 (relop -> SR_EQUAL .)
    TRUE            reduce using rule 133 (relop -> SR_EQUAL .)
    FALSE           reduce using rule 133 (relop -> SR_EQUAL .)


state 184

    (134) relop -> SL_EQUAL .

    ID              reduce using rule 134 (relop -> SL_EQUAL .)
    PRINT           reduce using rule 134 (relop -> SL_EQUAL .)
    PRINTR          reduce using rule 134 (relop -> SL_EQUAL .)
    VARDUMP         reduce using rule 134 (relop -> SL_EQUAL .)
    LPAREN          reduce using rule 134 (relop -> SL_EQUAL .)
    NUM             reduce using rule 134 (relop -> SL_EQUAL .)
    STRING          reduce using rule 134 (relop -> SL_EQUAL .)
    IDVAR           reduce using rule 134 (relop -> SL_EQUAL .)
    TRUE            reduce using rule 134 (relop -> SL_EQUAL .)
    FALSE           reduce using rule 134 (relop -> SL_EQUAL .)


state 185

    (135) relop -> AND_EQUAL .

    ID              reduce using rule 135 (relop -> AND_EQUAL .)
    PRINT           reduce using rule 135 (relop -> AND_EQUAL .)
    PRINTR          reduce using rule 135 (relop -> AND_EQUAL .)
    VARDUMP         reduce using rule 135 (relop -> AND_EQUAL .)
    LPAREN          reduce using rule 135 (relop -> AND_EQUAL .)
    NUM             reduce using rule 135 (relop -> AND_EQUAL .)
    STRING          reduce using rule 135 (relop -> AND_EQUAL .)
    IDVAR           reduce using rule 135 (relop -> AND_EQUAL .)
    TRUE            reduce using rule 135 (relop -> AND_EQUAL .)
    FALSE           reduce using rule 135 (relop -> AND_EQUAL .)


state 186

    (136) relop -> OR_EQUAL .

    ID              reduce using rule 136 (relop -> OR_EQUAL .)
    PRINT           reduce using rule 136 (relop -> OR_EQUAL .)
    PRINTR          reduce using rule 136 (relop -> OR_EQUAL .)
    VARDUMP         reduce using rule 136 (relop -> OR_EQUAL .)
    LPAREN          reduce using rule 136 (relop -> OR_EQUAL .)
    NUM             reduce using rule 136 (relop -> OR_EQUAL .)
    STRING          reduce using rule 136 (relop -> OR_EQUAL .)
    IDVAR           reduce using rule 136 (relop -> OR_EQUAL .)
    TRUE            reduce using rule 136 (relop -> OR_EQUAL .)
    FALSE           reduce using rule 136 (relop -> OR_EQUAL .)


state 187

    (137) relop -> XOR_EQUAL .

    ID              reduce using rule 137 (relop -> XOR_EQUAL .)
    PRINT           reduce using rule 137 (relop -> XOR_EQUAL .)
    PRINTR          reduce using rule 137 (relop -> XOR_EQUAL .)
    VARDUMP         reduce using rule 137 (relop -> XOR_EQUAL .)
    LPAREN          reduce using rule 137 (relop -> XOR_EQUAL .)
    NUM             reduce using rule 137 (relop -> XOR_EQUAL .)
    STRING          reduce using rule 137 (relop -> XOR_EQUAL .)
    IDVAR           reduce using rule 137 (relop -> XOR_EQUAL .)
    TRUE            reduce using rule 137 (relop -> XOR_EQUAL .)
    FALSE           reduce using rule 137 (relop -> XOR_EQUAL .)


state 188

    (138) relop -> CONCAT_EQUAL .

    ID              reduce using rule 138 (relop -> CONCAT_EQUAL .)
    PRINT           reduce using rule 138 (relop -> CONCAT_EQUAL .)
    PRINTR          reduce using rule 138 (relop -> CONCAT_EQUAL .)
    VARDUMP         reduce using rule 138 (relop -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 138 (relop -> CONCAT_EQUAL .)
    NUM             reduce using rule 138 (relop -> CONCAT_EQUAL .)
    STRING          reduce using rule 138 (relop -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 138 (relop -> CONCAT_EQUAL .)
    TRUE            reduce using rule 138 (relop -> CONCAT_EQUAL .)
    FALSE           reduce using rule 138 (relop -> CONCAT_EQUAL .)


state 189

    (144) addop -> PLUS .

    LPAREN          reduce using rule 144 (addop -> PLUS .)
    NUM             reduce using rule 144 (addop -> PLUS .)
    STRING          reduce using rule 144 (addop -> PLUS .)
    IDVAR           reduce using rule 144 (addop -> PLUS .)
    TRUE            reduce using rule 144 (addop -> PLUS .)
    FALSE           reduce using rule 144 (addop -> PLUS .)


state 190

    (145) addop -> MINUS .

    LPAREN          reduce using rule 145 (addop -> MINUS .)
    NUM             reduce using rule 145 (addop -> MINUS .)
    STRING          reduce using rule 145 (addop -> MINUS .)
    IDVAR           reduce using rule 145 (addop -> MINUS .)
    TRUE            reduce using rule 145 (addop -> MINUS .)
    FALSE           reduce using rule 145 (addop -> MINUS .)


state 191

    (141) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    DEQUAL          reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    DISTINT         reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    ISEQUAL         reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    IS_IDENTICAL    reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    IS_NOT_IDENTICAL reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    SR_EQUAL        reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    SL_EQUAL        reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    AND_EQUAL       reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    OR_EQUAL        reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    XOR_EQUAL       reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    CONCAT_EQUAL    reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    RBRACKET        reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    AND             reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    OR              reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 141 (additive_expression -> term MINUSMINUS .)
    COMMA           reduce using rule 141 (additive_expression -> term MINUSMINUS .)


state 192

    (142) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    DEQUAL          reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    DISTINT         reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    ISEQUAL         reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    IS_IDENTICAL    reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    IS_NOT_IDENTICAL reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    SR_EQUAL        reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    SL_EQUAL        reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    AND_EQUAL       reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    OR_EQUAL        reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    XOR_EQUAL       reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    CONCAT_EQUAL    reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    RBRACKET        reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    AND             reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    OR              reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 142 (additive_expression -> term PLUSPLUS .)
    COMMA           reduce using rule 142 (additive_expression -> term PLUSPLUS .)


state 193

    (146) term -> term mulop . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    factor                         shift and go to state 253
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 194

    (148) mulop -> TIMES .

    LPAREN          reduce using rule 148 (mulop -> TIMES .)
    NUM             reduce using rule 148 (mulop -> TIMES .)
    STRING          reduce using rule 148 (mulop -> TIMES .)
    IDVAR           reduce using rule 148 (mulop -> TIMES .)
    TRUE            reduce using rule 148 (mulop -> TIMES .)
    FALSE           reduce using rule 148 (mulop -> TIMES .)


state 195

    (149) mulop -> DIVIDE .

    LPAREN          reduce using rule 149 (mulop -> DIVIDE .)
    NUM             reduce using rule 149 (mulop -> DIVIDE .)
    STRING          reduce using rule 149 (mulop -> DIVIDE .)
    IDVAR           reduce using rule 149 (mulop -> DIVIDE .)
    TRUE            reduce using rule 149 (mulop -> DIVIDE .)
    FALSE           reduce using rule 149 (mulop -> DIVIDE .)


state 196

    (164) typeclass -> IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 254


state 197

    (165) constructor -> ID . LPAREN RPAREN
    (166) constructor -> ID . LPAREN args RPAREN

    LPAREN          shift and go to state 255


state 198

    (121) var -> IDVAR LBRACKET expression RBRACKET .

    ARROW           reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    DARROW          reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    MUL_EQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIV_EQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    CONCAT_EQUAL    reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    MOD_EQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS_EQUAL      reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS_EQUAL     reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESS            reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_IDENTICAL    reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    SR_EQUAL        reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    SL_EQUAL        reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND_EQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR_EQUAL        reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    XOR_EQUAL       reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND             reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR              reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 121 (var -> IDVAR LBRACKET expression RBRACKET .)


state 199

    (116) expression -> expression AND . expression
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 256
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 200

    (117) expression -> expression OR . expression
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 257
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 201

    (113) expression -> assing_var EQUAL . expression
    (115) expression -> assing_var EQUAL . AMPERSANT IDVAR
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    AMPERSANT       shift and go to state 259
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    assing_var                     shift and go to state 111
    expression                     shift and go to state 258
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 202

    (41) var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    IF              reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CASE            reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FOR             reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DO              reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ID              reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRINT           reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRINTR          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    VARDUMP         reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    NUM             reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    STRING          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 41 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)


state 203

    (42) var_declaration -> assing_var IGUAL NUM SEMI . var_declaration
    (43) var_declaration -> assing_var IGUAL NUM SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TIMESTIMES      reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    AMPERSANT       reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FUNCTION        reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRIVATE         reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PUBLIC          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PROTECTED       reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    REQUIRE         reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    INCLUDE         reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLASS           reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    IF              reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    SWITCH          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CASE            reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DEFAULT         reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FOR             reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    WHILE           reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DO              reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ID              reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRINT           reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRINTR          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    VARDUMP         reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ECHO            reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLOSETAG        reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LPAREN          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    NUM             reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    STRING          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TRUE            reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FALSE           reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RETURN          reduce using rule 43 (var_declaration -> assing_var IGUAL NUM SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    assing_var                     shift and go to state 94
    var_declaration                shift and go to state 260
    var                            shift and go to state 30

state 204

    (44) var_declaration -> assing_var IGUAL STRING SEMI . var_declaration
    (45) var_declaration -> assing_var IGUAL STRING SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TIMESTIMES      reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    AMPERSANT       reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FUNCTION        reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRIVATE         reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PUBLIC          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PROTECTED       reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    REQUIRE         reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    INCLUDE         reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLASS           reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    IF              reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    SWITCH          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CASE            reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DEFAULT         reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FOR             reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    WHILE           reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DO              reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ID              reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRINT           reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRINTR          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    VARDUMP         reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ECHO            reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLOSETAG        reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LPAREN          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    NUM             reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    STRING          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TRUE            reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FALSE           reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RETURN          reduce using rule 45 (var_declaration -> assing_var IGUAL STRING SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    assing_var                     shift and go to state 94
    var_declaration                shift and go to state 261
    var                            shift and go to state 30

state 205

    (46) var_declaration -> assing_var IGUAL boolean SEMI . var_declaration
    (47) var_declaration -> assing_var IGUAL boolean SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TIMESTIMES      reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    AMPERSANT       reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FUNCTION        reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRIVATE         reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PUBLIC          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PROTECTED       reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    REQUIRE         reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    INCLUDE         reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLASS           reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    IF              reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    SWITCH          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CASE            reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DEFAULT         reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FOR             reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    WHILE           reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DO              reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ID              reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRINT           reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRINTR          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    VARDUMP         reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ECHO            reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLOSETAG        reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LPAREN          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    NUM             reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    STRING          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TRUE            reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FALSE           reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RETURN          reduce using rule 47 (var_declaration -> assing_var IGUAL boolean SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    assing_var                     shift and go to state 94
    var_declaration                shift and go to state 262
    var                            shift and go to state 30

state 206

    (48) var_declaration -> assing_var IGUAL IDVAR SEMI . var_declaration
    (49) var_declaration -> assing_var IGUAL IDVAR SEMI .
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TIMESTIMES      reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    AMPERSANT       reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FUNCTION        reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRIVATE         reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PUBLIC          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PROTECTED       reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    REQUIRE         reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    INCLUDE         reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLASS           reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    IF              reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    SWITCH          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CASE            reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DEFAULT         reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FOR             reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    WHILE           reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DO              reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ID              reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRINT           reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRINTR          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    VARDUMP         reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ECHO            reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLOSETAG        reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LPAREN          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    NUM             reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    STRING          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TRUE            reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FALSE           reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RBLOCK          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LBLOCK          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RETURN          reduce using rule 49 (var_declaration -> assing_var IGUAL IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 92 ]
  ! TIMESTIMES      [ shift and go to state 16 ]
  ! AMPERSANT       [ shift and go to state 18 ]

    assing_var                     shift and go to state 94
    var_declaration                shift and go to state 263
    var                            shift and go to state 30

state 207

    (50) var_declaration -> assing_var IGUAL read_data SEMI .

    IDVAR           reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    TIMESTIMES      reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    AMPERSANT       reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    FUNCTION        reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    PRIVATE         reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    PUBLIC          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    PROTECTED       reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    REQUIRE         reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    INCLUDE         reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    CLASS           reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    IF              reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    SWITCH          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    CASE            reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    DEFAULT         reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    FOR             reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    WHILE           reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    DO              reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    ID              reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    PRINT           reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    PRINTR          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    VARDUMP         reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    ECHO            reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    CLOSETAG        reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    LPAREN          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    NUM             reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    STRING          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    TRUE            reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    FALSE           reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    RBLOCK          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    LBLOCK          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)
    RETURN          reduce using rule 50 (var_declaration -> assing_var IGUAL read_data SEMI .)


state 208

    (55) var_declaration -> assing_var IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    IF              reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CASE            reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FOR             reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DO              reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ID              reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRINT           reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRINTR          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    VARDUMP         reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    NUM             reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    STRING          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 55 (var_declaration -> assing_var IGUAL simple_expression SEMI .)


state 209

    (57) read_data -> POST LBRACKET . STRING RBRACKET

    STRING          shift and go to state 264


state 210

    (58) read_data -> GET LBRACKET . STRING RBRACKET

    STRING          shift and go to state 265


state 211

    (76) fun_call -> assing_var LPAREN params RPAREN .

    SEMI            reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    DOT             reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    LESS            reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATER         reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    DEQUAL          reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    DISTINT         reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    PLUS            reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    MINUS           reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    RBRACKET        reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    AND             reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    OR              reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    RPAREN          reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)
    COMMA           reduce using rule 76 (fun_call -> assing_var LPAREN params RPAREN .)


state 212

    (83) param_list -> param COMMA . param_list
    (82) param_list -> . param
    (83) param_list -> . param COMMA param_list
    (84) param -> . IDVAR
    (85) param -> . IDVAR LBRACKET RBRACKET
    (86) param -> . term
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    IDVAR           shift and go to state 128
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    param                          shift and go to state 127
    param_list                     shift and go to state 266
    term                           shift and go to state 129
    factor                         shift and go to state 103
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 213

    (85) param -> IDVAR LBRACKET . RBRACKET
    (121) var -> IDVAR LBRACKET . expression RBRACKET
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    RBRACKET        shift and go to state 267
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 110
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 214

    (52) var_declaration -> AMPERSANT IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    IF              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CASE            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FOR             reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DO              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ID              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRINT           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRINTR          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    VARDUMP         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    NUM             reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    STRING          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)


state 215

    (53) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR . SEMI selection_stmt

    SEMI            shift and go to state 268


state 216

    (73) fun_declaration -> FUNCTION ID LPAREN params . RPAREN
    (74) fun_declaration -> FUNCTION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 269


state 217

    (163) typeclass -> ID IDVAR EQUAL NEW . constructor SEMI
    (165) constructor -> . ID LPAREN RPAREN
    (166) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 197

    constructor                    shift and go to state 270

state 218

    (75) fun_call -> ID LPAREN params RPAREN .

    SEMI            reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    DOT             reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    LESS            reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    GREATER         reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    DEQUAL          reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    DISTINT         reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    RBRACKET        reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 75 (fun_call -> ID LPAREN params RPAREN .)


state 219

    (24) header_declaration -> REQUIRE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 271


state 220

    (25) header_declaration -> INCLUDE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 272


state 221

    (27) class_declaration -> CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 273


state 222

    (28) attributes -> attribute .
    (29) attributes -> attribute . attributes
    (30) attribute -> attribute . area var_declaration
    (32) attribute -> attribute . area fun_declaration
    (28) attributes -> . attribute
    (29) attributes -> . attribute attributes
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (30) attribute -> . attribute area var_declaration
    (31) attribute -> . area var_declaration
    (32) attribute -> . attribute area fun_declaration
    (33) attribute -> . area fun_declaration
    (34) attribute -> . fun_declaration
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    RBLOCK          reduce using rule 28 (attributes -> attribute .)
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attribute                      shift and go to state 222
    attributes                     shift and go to state 274
    area                           shift and go to state 275
    fun_declaration                shift and go to state 224

state 223

    (31) attribute -> area . var_declaration
    (33) attribute -> area . fun_declaration
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 92
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18
    FUNCTION        shift and go to state 19

    var_declaration                shift and go to state 276
    fun_declaration                shift and go to state 277
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 224

    (34) attribute -> fun_declaration .

    PRIVATE         reduce using rule 34 (attribute -> fun_declaration .)
    PUBLIC          reduce using rule 34 (attribute -> fun_declaration .)
    PROTECTED       reduce using rule 34 (attribute -> fun_declaration .)
    FUNCTION        reduce using rule 34 (attribute -> fun_declaration .)
    RBLOCK          reduce using rule 34 (attribute -> fun_declaration .)


state 225

    (100) selection_stmt -> IF LPAREN expression RPAREN . statement
    (101) selection_stmt -> IF LPAREN expression RPAREN . statement selection
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    FUNCTION        reduce using rule 167 (empty -> .)
    REQUIRE         reduce using rule 167 (empty -> .)
    INCLUDE         reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]

    expression                     shift and go to state 154
    statement                      shift and go to state 278
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 226

    (104) selection_stmt -> SWITCH LPAREN var RPAREN . statement
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    FUNCTION        reduce using rule 167 (empty -> .)
    REQUIRE         reduce using rule 167 (empty -> .)
    INCLUDE         reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]

    var                            shift and go to state 114
    statement                      shift and go to state 279
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 227

    (105) selection_stmt -> CASE NUM COLON statement . BREAK SEMI

    BREAK           shift and go to state 280


state 228

    (106) selection_stmt -> CASE STRING COLON statement . BREAK SEMI

    BREAK           shift and go to state 281


state 229

    (107) selection_stmt -> DEFAULT COLON statement BREAK . SEMI

    SEMI            shift and go to state 282


state 230

    (99) expression_stmt -> expression SEMI .

    BREAK           reduce using rule 99 (expression_stmt -> expression SEMI .)
    SEMI            reduce using rule 99 (expression_stmt -> expression SEMI .)
    ELSE            reduce using rule 99 (expression_stmt -> expression SEMI .)
    ELSEIF          reduce using rule 99 (expression_stmt -> expression SEMI .)
    IDVAR           reduce using rule 99 (expression_stmt -> expression SEMI .)
    TIMESTIMES      reduce using rule 99 (expression_stmt -> expression SEMI .)
    AMPERSANT       reduce using rule 99 (expression_stmt -> expression SEMI .)
    FUNCTION        reduce using rule 99 (expression_stmt -> expression SEMI .)
    PRIVATE         reduce using rule 99 (expression_stmt -> expression SEMI .)
    PUBLIC          reduce using rule 99 (expression_stmt -> expression SEMI .)
    PROTECTED       reduce using rule 99 (expression_stmt -> expression SEMI .)
    REQUIRE         reduce using rule 99 (expression_stmt -> expression SEMI .)
    INCLUDE         reduce using rule 99 (expression_stmt -> expression SEMI .)
    CLASS           reduce using rule 99 (expression_stmt -> expression SEMI .)
    IF              reduce using rule 99 (expression_stmt -> expression SEMI .)
    SWITCH          reduce using rule 99 (expression_stmt -> expression SEMI .)
    CASE            reduce using rule 99 (expression_stmt -> expression SEMI .)
    DEFAULT         reduce using rule 99 (expression_stmt -> expression SEMI .)
    FOR             reduce using rule 99 (expression_stmt -> expression SEMI .)
    WHILE           reduce using rule 99 (expression_stmt -> expression SEMI .)
    DO              reduce using rule 99 (expression_stmt -> expression SEMI .)
    ID              reduce using rule 99 (expression_stmt -> expression SEMI .)
    PRINT           reduce using rule 99 (expression_stmt -> expression SEMI .)
    PRINTR          reduce using rule 99 (expression_stmt -> expression SEMI .)
    VARDUMP         reduce using rule 99 (expression_stmt -> expression SEMI .)
    ECHO            reduce using rule 99 (expression_stmt -> expression SEMI .)
    CLOSETAG        reduce using rule 99 (expression_stmt -> expression SEMI .)
    LPAREN          reduce using rule 99 (expression_stmt -> expression SEMI .)
    NUM             reduce using rule 99 (expression_stmt -> expression SEMI .)
    STRING          reduce using rule 99 (expression_stmt -> expression SEMI .)
    TRUE            reduce using rule 99 (expression_stmt -> expression SEMI .)
    FALSE           reduce using rule 99 (expression_stmt -> expression SEMI .)
    RBLOCK          reduce using rule 99 (expression_stmt -> expression SEMI .)
    LBLOCK          reduce using rule 99 (expression_stmt -> expression SEMI .)
    RETURN          reduce using rule 99 (expression_stmt -> expression SEMI .)


state 231

    (87) compount_stmt -> LBLOCK echo_stmt . local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (14) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (88) local_declarations -> . local_declarations var_declaration
    (89) local_declarations -> . empty
    (167) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 43
    IDVAR           reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    LBLOCK          reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    SWITCH          reduce using rule 167 (empty -> .)
    CASE            reduce using rule 167 (empty -> .)
    DEFAULT         reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    DO              reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    CLASS           reduce using rule 167 (empty -> .)
    PRIVATE         reduce using rule 167 (empty -> .)
    PUBLIC          reduce using rule 167 (empty -> .)
    PROTECTED       reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    PRINTR          reduce using rule 167 (empty -> .)
    VARDUMP         reduce using rule 167 (empty -> .)
    LPAREN          reduce using rule 167 (empty -> .)
    NUM             reduce using rule 167 (empty -> .)
    STRING          reduce using rule 167 (empty -> .)
    TRUE            reduce using rule 167 (empty -> .)
    FALSE           reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)

  ! ECHO            [ reduce using rule 167 (empty -> .) ]

    local_declarations             shift and go to state 283
    empty                          shift and go to state 284

state 232

    (111) return_stmt -> RETURN SEMI .

    BREAK           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 111 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 111 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    IDVAR           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    TIMESTIMES      reduce using rule 111 (return_stmt -> RETURN SEMI .)
    AMPERSANT       reduce using rule 111 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 111 (return_stmt -> RETURN SEMI .)
    PRIVATE         reduce using rule 111 (return_stmt -> RETURN SEMI .)
    PUBLIC          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    PROTECTED       reduce using rule 111 (return_stmt -> RETURN SEMI .)
    REQUIRE         reduce using rule 111 (return_stmt -> RETURN SEMI .)
    INCLUDE         reduce using rule 111 (return_stmt -> RETURN SEMI .)
    CLASS           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 111 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 111 (return_stmt -> RETURN SEMI .)
    DEFAULT         reduce using rule 111 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 111 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    DO              reduce using rule 111 (return_stmt -> RETURN SEMI .)
    ID              reduce using rule 111 (return_stmt -> RETURN SEMI .)
    PRINT           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    PRINTR          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    VARDUMP         reduce using rule 111 (return_stmt -> RETURN SEMI .)
    ECHO            reduce using rule 111 (return_stmt -> RETURN SEMI .)
    CLOSETAG        reduce using rule 111 (return_stmt -> RETURN SEMI .)
    LPAREN          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    NUM             reduce using rule 111 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    TRUE            reduce using rule 111 (return_stmt -> RETURN SEMI .)
    FALSE           reduce using rule 111 (return_stmt -> RETURN SEMI .)
    RBLOCK          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    LBLOCK          reduce using rule 111 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 111 (return_stmt -> RETURN SEMI .)


state 233

    (112) return_stmt -> RETURN expression . SEMI
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    SEMI            shift and go to state 285
    AND             shift and go to state 199
    OR              shift and go to state 200


state 234

    (108) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN statement
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    SEMI            shift and go to state 286
    AND             shift and go to state 199
    OR              shift and go to state 200


state 235

    (109) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    FUNCTION        reduce using rule 167 (empty -> .)
    REQUIRE         reduce using rule 167 (empty -> .)
    INCLUDE         reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]

    expression                     shift and go to state 154
    statement                      shift and go to state 287
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 236

    (110) iteration_stmt -> DO LBLOCK statement SEMI . RBLOCK WHILE LPAREN expression RPAREN

    RBLOCK          shift and go to state 288


state 237

    (77) fun_call -> PRINT LPAREN echo_params RPAREN .

    SEMI            reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    DOT             reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    LESS            reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    LESSEQUAL       reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    GREATER         reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    GREATEREQUAL    reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    DEQUAL          reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    DISTINT         reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    ISEQUAL         reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    IS_IDENTICAL    reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    SR_EQUAL        reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    SL_EQUAL        reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    AND_EQUAL       reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    OR_EQUAL        reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    XOR_EQUAL       reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    CONCAT_EQUAL    reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    PLUS            reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    MINUS           reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    RBRACKET        reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    AND             reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    OR              reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    RPAREN          reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)
    COMMA           reduce using rule 77 (fun_call -> PRINT LPAREN echo_params RPAREN .)


state 238

    (78) fun_call -> PRINTR LPAREN IDVAR RPAREN .

    SEMI            reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    DOT             reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    LESS            reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    LESSEQUAL       reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    GREATER         reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    GREATEREQUAL    reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    DEQUAL          reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    DISTINT         reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    ISEQUAL         reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    IS_IDENTICAL    reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    SR_EQUAL        reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    SL_EQUAL        reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    AND_EQUAL       reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    OR_EQUAL        reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    XOR_EQUAL       reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    CONCAT_EQUAL    reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    PLUS            reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    MINUS           reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    RBRACKET        reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    AND             reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    OR              reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    RPAREN          reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)
    COMMA           reduce using rule 78 (fun_call -> PRINTR LPAREN IDVAR RPAREN .)


state 239

    (79) fun_call -> VARDUMP LPAREN IDVAR RPAREN .

    SEMI            reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    DOT             reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    LESS            reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    LESSEQUAL       reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    GREATER         reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    GREATEREQUAL    reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    DEQUAL          reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    DISTINT         reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    ISEQUAL         reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    IS_IDENTICAL    reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    SR_EQUAL        reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    SL_EQUAL        reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    AND_EQUAL       reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    OR_EQUAL        reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    XOR_EQUAL       reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    CONCAT_EQUAL    reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    PLUS            reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    MINUS           reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    RBRACKET        reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    AND             reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    OR              reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    RPAREN          reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)
    COMMA           reduce using rule 79 (fun_call -> VARDUMP LPAREN IDVAR RPAREN .)


state 240

    (26) class_declaration -> area CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 289


state 241

    (17) echo_params -> echo_param DOT echo_params .

    SEMI            reduce using rule 17 (echo_params -> echo_param DOT echo_params .)
    RPAREN          reduce using rule 17 (echo_params -> echo_param DOT echo_params .)


state 242

    (155) factor -> IDVAR LPAREN args . RPAREN

    RPAREN          shift and go to state 290


state 243

    (156) args -> args_list .
    (159) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 156 (args -> args_list .)
    COMMA           shift and go to state 291


state 244

    (157) args -> empty .

    RPAREN          reduce using rule 157 (args -> empty .)


state 245

    (158) args -> VOID .

    RPAREN          reduce using rule 158 (args -> VOID .)


state 246

    (160) args_list -> expression .
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    COMMA           reduce using rule 160 (args_list -> expression .)
    RPAREN          reduce using rule 160 (args_list -> expression .)
    AND             shift and go to state 199
    OR              shift and go to state 200


state 247

    (59) array_declare -> ARRAY LPAREN array_values . RPAREN

    RPAREN          shift and go to state 292


state 248

    (60) array_values -> array_value .
    (61) array_values -> array_value . COMMA array_values

    RPAREN          reduce using rule 60 (array_values -> array_value .)
    COMMA           shift and go to state 293


state 249

    (62) array_value -> factor . DARROW factor

    DARROW          shift and go to state 294


state 250

    (150) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    SR_EQUAL        reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    SL_EQUAL        reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    AND_EQUAL       reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    OR_EQUAL        reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    XOR_EQUAL       reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    CONCAT_EQUAL    reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 150 (factor -> LPAREN expression RPAREN .)
    DARROW          reduce using rule 150 (factor -> LPAREN expression RPAREN .)


state 251

    (122) simple_expression -> additive_expression relop additive_expression .
    (139) additive_expression -> additive_expression . addop term
    (144) addop -> . PLUS
    (145) addop -> . MINUS

    SEMI            reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    RBRACKET        reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    AND             reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 122 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 189
    MINUS           shift and go to state 190

    addop                          shift and go to state 173

state 252

    (139) additive_expression -> additive_expression addop term .
    (146) term -> term . mulop factor
    (148) mulop -> . TIMES
    (149) mulop -> . DIVIDE

    LESS            reduce using rule 139 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 139 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 139 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 139 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 139 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 139 (additive_expression -> additive_expression addop term .)
    ISEQUAL         reduce using rule 139 (additive_expression -> additive_expression addop term .)
    IS_IDENTICAL    reduce using rule 139 (additive_expression -> additive_expression addop term .)
    IS_NOT_IDENTICAL reduce using rule 139 (additive_expression -> additive_expression addop term .)
    SR_EQUAL        reduce using rule 139 (additive_expression -> additive_expression addop term .)
    SL_EQUAL        reduce using rule 139 (additive_expression -> additive_expression addop term .)
    AND_EQUAL       reduce using rule 139 (additive_expression -> additive_expression addop term .)
    OR_EQUAL        reduce using rule 139 (additive_expression -> additive_expression addop term .)
    XOR_EQUAL       reduce using rule 139 (additive_expression -> additive_expression addop term .)
    CONCAT_EQUAL    reduce using rule 139 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 139 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 139 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 139 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 139 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 139 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 139 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 139 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 139 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 194
    DIVIDE          shift and go to state 195

    mulop                          shift and go to state 193

state 253

    (146) term -> term mulop factor .

    MINUSMINUS      reduce using rule 146 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 146 (term -> term mulop factor .)
    TIMES           reduce using rule 146 (term -> term mulop factor .)
    DIVIDE          reduce using rule 146 (term -> term mulop factor .)
    LESS            reduce using rule 146 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 146 (term -> term mulop factor .)
    GREATER         reduce using rule 146 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 146 (term -> term mulop factor .)
    DEQUAL          reduce using rule 146 (term -> term mulop factor .)
    DISTINT         reduce using rule 146 (term -> term mulop factor .)
    ISEQUAL         reduce using rule 146 (term -> term mulop factor .)
    IS_IDENTICAL    reduce using rule 146 (term -> term mulop factor .)
    IS_NOT_IDENTICAL reduce using rule 146 (term -> term mulop factor .)
    SR_EQUAL        reduce using rule 146 (term -> term mulop factor .)
    SL_EQUAL        reduce using rule 146 (term -> term mulop factor .)
    AND_EQUAL       reduce using rule 146 (term -> term mulop factor .)
    OR_EQUAL        reduce using rule 146 (term -> term mulop factor .)
    XOR_EQUAL       reduce using rule 146 (term -> term mulop factor .)
    CONCAT_EQUAL    reduce using rule 146 (term -> term mulop factor .)
    PLUS            reduce using rule 146 (term -> term mulop factor .)
    MINUS           reduce using rule 146 (term -> term mulop factor .)
    SEMI            reduce using rule 146 (term -> term mulop factor .)
    RBRACKET        reduce using rule 146 (term -> term mulop factor .)
    AND             reduce using rule 146 (term -> term mulop factor .)
    OR              reduce using rule 146 (term -> term mulop factor .)
    COMMA           reduce using rule 146 (term -> term mulop factor .)
    RPAREN          reduce using rule 146 (term -> term mulop factor .)


state 254

    (164) typeclass -> IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PRINT           reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PRINTR          reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    VARDUMP         reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 164 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)


state 255

    (165) constructor -> ID LPAREN . RPAREN
    (166) constructor -> ID LPAREN . args RPAREN
    (156) args -> . args_list
    (157) args -> . empty
    (158) args -> . VOID
    (159) args_list -> . args_list COMMA expression
    (160) args_list -> . expression
    (167) empty -> .
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 295
    VOID            shift and go to state 245
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! RPAREN          [ reduce using rule 167 (empty -> .) ]

    args                           shift and go to state 296
    args_list                      shift and go to state 243
    empty                          shift and go to state 244
    expression                     shift and go to state 246
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 256

    (116) expression -> expression AND expression .
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RBRACKET        reduce using rule 116 (expression -> expression AND expression .)
    AND             reduce using rule 116 (expression -> expression AND expression .)
    OR              reduce using rule 116 (expression -> expression AND expression .)
    RPAREN          reduce using rule 116 (expression -> expression AND expression .)
    SEMI            reduce using rule 116 (expression -> expression AND expression .)
    COMMA           reduce using rule 116 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 199 ]
  ! OR              [ shift and go to state 200 ]


state 257

    (117) expression -> expression OR expression .
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RBRACKET        reduce using rule 117 (expression -> expression OR expression .)
    OR              reduce using rule 117 (expression -> expression OR expression .)
    RPAREN          reduce using rule 117 (expression -> expression OR expression .)
    SEMI            reduce using rule 117 (expression -> expression OR expression .)
    COMMA           reduce using rule 117 (expression -> expression OR expression .)
    AND             shift and go to state 199

  ! AND             [ reduce using rule 117 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 200 ]


state 258

    (113) expression -> assing_var EQUAL expression .
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RBRACKET        reduce using rule 113 (expression -> assing_var EQUAL expression .)
    RPAREN          reduce using rule 113 (expression -> assing_var EQUAL expression .)
    SEMI            reduce using rule 113 (expression -> assing_var EQUAL expression .)
    COMMA           reduce using rule 113 (expression -> assing_var EQUAL expression .)
    AND             shift and go to state 199
    OR              shift and go to state 200

  ! AND             [ reduce using rule 113 (expression -> assing_var EQUAL expression .) ]
  ! OR              [ reduce using rule 113 (expression -> assing_var EQUAL expression .) ]


state 259

    (115) expression -> assing_var EQUAL AMPERSANT . IDVAR

    IDVAR           shift and go to state 297


state 260

    (42) var_declaration -> assing_var IGUAL NUM SEMI var_declaration .

    IDVAR           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TIMESTIMES      reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    AMPERSANT       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FUNCTION        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRIVATE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PUBLIC          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PROTECTED       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    REQUIRE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    INCLUDE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLASS           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    IF              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    SWITCH          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CASE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DEFAULT         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FOR             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    WHILE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DO              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ID              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRINT           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRINTR          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    VARDUMP         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ECHO            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLOSETAG        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LPAREN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    NUM             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    STRING          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TRUE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FALSE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RETURN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)


state 261

    (44) var_declaration -> assing_var IGUAL STRING SEMI var_declaration .

    IDVAR           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TIMESTIMES      reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    AMPERSANT       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FUNCTION        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRIVATE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PUBLIC          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PROTECTED       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    REQUIRE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    INCLUDE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLASS           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    IF              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    SWITCH          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CASE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DEFAULT         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FOR             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    WHILE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DO              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ID              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRINT           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRINTR          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    VARDUMP         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ECHO            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLOSETAG        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LPAREN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    NUM             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    STRING          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TRUE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FALSE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RETURN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)


state 262

    (46) var_declaration -> assing_var IGUAL boolean SEMI var_declaration .

    IDVAR           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TIMESTIMES      reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    AMPERSANT       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FUNCTION        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRIVATE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PUBLIC          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PROTECTED       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    REQUIRE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    INCLUDE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLASS           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    IF              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    SWITCH          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CASE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DEFAULT         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FOR             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    WHILE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DO              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ID              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRINT           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRINTR          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    VARDUMP         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ECHO            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLOSETAG        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LPAREN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    NUM             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    STRING          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TRUE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FALSE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RETURN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)


state 263

    (48) var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    IF              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CASE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FOR             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DO              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ID              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRINT           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRINTR          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    VARDUMP         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    NUM             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    STRING          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)


state 264

    (57) read_data -> POST LBRACKET STRING . RBRACKET

    RBRACKET        shift and go to state 298


state 265

    (58) read_data -> GET LBRACKET STRING . RBRACKET

    RBRACKET        shift and go to state 299


state 266

    (83) param_list -> param COMMA param_list .

    RPAREN          reduce using rule 83 (param_list -> param COMMA param_list .)


state 267

    (85) param -> IDVAR LBRACKET RBRACKET .

    COMMA           reduce using rule 85 (param -> IDVAR LBRACKET RBRACKET .)
    RPAREN          reduce using rule 85 (param -> IDVAR LBRACKET RBRACKET .)


state 268

    (53) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI . selection_stmt
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI

    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32

    selection_stmt                 shift and go to state 300

state 269

    (73) fun_declaration -> FUNCTION ID LPAREN params RPAREN .
    (74) fun_declaration -> FUNCTION ID LPAREN params RPAREN . compount_stmt
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

    IDVAR           reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    TIMESTIMES      reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    AMPERSANT       reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FUNCTION        reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRIVATE         reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PUBLIC          reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PROTECTED       reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    REQUIRE         reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    INCLUDE         reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLASS           reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    IF              reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SWITCH          reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CASE            reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DEFAULT         reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FOR             reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    WHILE           reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DO              reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ID              reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRINT           reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRINTR          reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    VARDUMP         reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ECHO            reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLOSETAG        reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DOT             reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SEMI            reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 73 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 155

    compount_stmt                  shift and go to state 301

state 270

    (163) typeclass -> ID IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 302


state 271

    (24) header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRINTR          reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    VARDUMP         reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 24 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)


state 272

    (25) header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRINT           reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRINTR          reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    VARDUMP         reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 25 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)


state 273

    (27) class_declaration -> CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRINT           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRINTR          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    VARDUMP         reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 27 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)


state 274

    (29) attributes -> attribute attributes .

    RBLOCK          reduce using rule 29 (attributes -> attribute attributes .)


state 275

    (30) attribute -> attribute area . var_declaration
    (32) attribute -> attribute area . fun_declaration
    (31) attribute -> area . var_declaration
    (33) attribute -> area . fun_declaration
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (73) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (74) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 92
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18
    FUNCTION        shift and go to state 19

    var_declaration                shift and go to state 303
    fun_declaration                shift and go to state 304
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 276

    (31) attribute -> area var_declaration .

    PRIVATE         reduce using rule 31 (attribute -> area var_declaration .)
    PUBLIC          reduce using rule 31 (attribute -> area var_declaration .)
    PROTECTED       reduce using rule 31 (attribute -> area var_declaration .)
    FUNCTION        reduce using rule 31 (attribute -> area var_declaration .)
    RBLOCK          reduce using rule 31 (attribute -> area var_declaration .)


state 277

    (33) attribute -> area fun_declaration .

    PRIVATE         reduce using rule 33 (attribute -> area fun_declaration .)
    PUBLIC          reduce using rule 33 (attribute -> area fun_declaration .)
    PROTECTED       reduce using rule 33 (attribute -> area fun_declaration .)
    FUNCTION        reduce using rule 33 (attribute -> area fun_declaration .)
    RBLOCK          reduce using rule 33 (attribute -> area fun_declaration .)


state 278

    (100) selection_stmt -> IF LPAREN expression RPAREN statement .
    (101) selection_stmt -> IF LPAREN expression RPAREN statement . selection
    (102) selection -> . ELSE statement
    (103) selection -> . ELSEIF statement selection

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    IDVAR           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRINTR          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    VARDUMP         reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUM             reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 306
    ELSEIF          shift and go to state 307

  ! ELSE            [ reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 100 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]

    selection                      shift and go to state 305

state 279

    (104) selection_stmt -> SWITCH LPAREN var RPAREN statement .

    IDVAR           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TIMESTIMES      reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    AMPERSANT       reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FUNCTION        reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRIVATE         reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PUBLIC          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PROTECTED       reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    REQUIRE         reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    INCLUDE         reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLASS           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    IF              reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SWITCH          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CASE            reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DEFAULT         reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FOR             reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    WHILE           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DO              reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ID              reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRINT           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRINTR          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    VARDUMP         reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ECHO            reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLOSETAG        reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    BREAK           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SEMI            reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSE            reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSEIF          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LPAREN          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    NUM             reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    STRING          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TRUE            reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FALSE           reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RBLOCK          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LBLOCK          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RETURN          reduce using rule 104 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)


state 280

    (105) selection_stmt -> CASE NUM COLON statement BREAK . SEMI

    SEMI            shift and go to state 308


state 281

    (106) selection_stmt -> CASE STRING COLON statement BREAK . SEMI

    SEMI            shift and go to state 309


state 282

    (107) selection_stmt -> DEFAULT COLON statement BREAK SEMI .

    IDVAR           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLASS           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    IF              reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CASE            reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FOR             reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    WHILE           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DO              reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ID              reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRINT           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRINTR          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    VARDUMP         reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ECHO            reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    BREAK           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SEMI            reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSE            reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    NUM             reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    STRING          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TRUE            reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FALSE           reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RETURN          reduce using rule 107 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)


state 283

    (87) compount_stmt -> LBLOCK echo_stmt local_declarations . echo_stmt statement_list echo_stmt RBLOCK
    (88) local_declarations -> local_declarations . var_declaration
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (38) var_declaration -> . IDVAR SEMI var_declaration
    (39) var_declaration -> . IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI
    (41) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (43) var_declaration -> . assing_var IGUAL NUM SEMI
    (44) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (45) var_declaration -> . assing_var IGUAL STRING SEMI
    (46) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (47) var_declaration -> . assing_var IGUAL boolean SEMI
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (49) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (50) var_declaration -> . assing_var IGUAL read_data SEMI
    (51) var_declaration -> . IDVAR IGUAL array_declare SEMI
    (52) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (53) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (54) var_declaration -> . AMPERSANT IDVAR SEMI
    (55) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (56) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
    IDVAR           shift and go to state 92
    TIMESTIMES      shift and go to state 16
    AMPERSANT       shift and go to state 18
    ECHO            reduce using rule 167 (empty -> .)
    LBLOCK          reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    SWITCH          reduce using rule 167 (empty -> .)
    CASE            reduce using rule 167 (empty -> .)
    DEFAULT         reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    DO              reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    CLASS           reduce using rule 167 (empty -> .)
    PRIVATE         reduce using rule 167 (empty -> .)
    PUBLIC          reduce using rule 167 (empty -> .)
    PROTECTED       reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    PRINTR          reduce using rule 167 (empty -> .)
    VARDUMP         reduce using rule 167 (empty -> .)
    LPAREN          reduce using rule 167 (empty -> .)
    NUM             reduce using rule 167 (empty -> .)
    STRING          reduce using rule 167 (empty -> .)
    TRUE            reduce using rule 167 (empty -> .)
    FALSE           reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]

    echo_stmt                      shift and go to state 310
    var_declaration                shift and go to state 311
    empty                          shift and go to state 27
    assing_var                     shift and go to state 94
    var                            shift and go to state 30

state 284

    (89) local_declarations -> empty .

    IDVAR           reduce using rule 89 (local_declarations -> empty .)
    TIMESTIMES      reduce using rule 89 (local_declarations -> empty .)
    AMPERSANT       reduce using rule 89 (local_declarations -> empty .)
    ECHO            reduce using rule 89 (local_declarations -> empty .)
    LBLOCK          reduce using rule 89 (local_declarations -> empty .)
    IF              reduce using rule 89 (local_declarations -> empty .)
    SWITCH          reduce using rule 89 (local_declarations -> empty .)
    CASE            reduce using rule 89 (local_declarations -> empty .)
    DEFAULT         reduce using rule 89 (local_declarations -> empty .)
    FOR             reduce using rule 89 (local_declarations -> empty .)
    WHILE           reduce using rule 89 (local_declarations -> empty .)
    DO              reduce using rule 89 (local_declarations -> empty .)
    RETURN          reduce using rule 89 (local_declarations -> empty .)
    CLASS           reduce using rule 89 (local_declarations -> empty .)
    PRIVATE         reduce using rule 89 (local_declarations -> empty .)
    PUBLIC          reduce using rule 89 (local_declarations -> empty .)
    PROTECTED       reduce using rule 89 (local_declarations -> empty .)
    ID              reduce using rule 89 (local_declarations -> empty .)
    PRINT           reduce using rule 89 (local_declarations -> empty .)
    PRINTR          reduce using rule 89 (local_declarations -> empty .)
    VARDUMP         reduce using rule 89 (local_declarations -> empty .)
    LPAREN          reduce using rule 89 (local_declarations -> empty .)
    NUM             reduce using rule 89 (local_declarations -> empty .)
    STRING          reduce using rule 89 (local_declarations -> empty .)
    TRUE            reduce using rule 89 (local_declarations -> empty .)
    FALSE           reduce using rule 89 (local_declarations -> empty .)
    RBLOCK          reduce using rule 89 (local_declarations -> empty .)


state 285

    (112) return_stmt -> RETURN expression SEMI .

    BREAK           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    SEMI            reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    ELSE            reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    ELSEIF          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    IDVAR           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    TIMESTIMES      reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    AMPERSANT       reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    PRIVATE         reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    PUBLIC          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    PROTECTED       reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    REQUIRE         reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    INCLUDE         reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    CLASS           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    IF              reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    SWITCH          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    CASE            reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    FOR             reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    WHILE           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    DO              reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    ID              reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    PRINT           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    PRINTR          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    VARDUMP         reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    ECHO            reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    CLOSETAG        reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    LPAREN          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    NUM             reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    STRING          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    TRUE            reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    FALSE           reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    RBLOCK          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    LBLOCK          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)
    RETURN          reduce using rule 112 (return_stmt -> RETURN expression SEMI .)


state 286

    (108) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN statement
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    additive_expression            shift and go to state 312
    term                           shift and go to state 101
    fun_call                       shift and go to state 102
    factor                         shift and go to state 103
    assing_var                     shift and go to state 91
    var                            shift and go to state 104
    boolean                        shift and go to state 107

state 287

    (109) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    IDVAR           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRINTR          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    VARDUMP         reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 109 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 288

    (110) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 313


state 289

    (26) class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRINT           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRINTR          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    VARDUMP         reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 26 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)


state 290

    (155) factor -> IDVAR LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    TIMES           reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    DIVIDE          reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    LESS            reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    GREATER         reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    DEQUAL          reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    DISTINT         reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    ISEQUAL         reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    IS_IDENTICAL    reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    SR_EQUAL        reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    SL_EQUAL        reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    AND_EQUAL       reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    OR_EQUAL        reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    XOR_EQUAL       reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    CONCAT_EQUAL    reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    PLUS            reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    MINUS           reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    SEMI            reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    RBRACKET        reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    AND             reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    OR              reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    COMMA           reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    RPAREN          reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)
    DARROW          reduce using rule 155 (factor -> IDVAR LPAREN args RPAREN .)


state 291

    (159) args_list -> args_list COMMA . expression
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 314
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 292

    (59) array_declare -> ARRAY LPAREN array_values RPAREN .

    SEMI            reduce using rule 59 (array_declare -> ARRAY LPAREN array_values RPAREN .)


state 293

    (61) array_values -> array_value COMMA . array_values
    (60) array_values -> . array_value
    (61) array_values -> . array_value COMMA array_values
    (62) array_value -> . factor DARROW factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    array_value                    shift and go to state 248
    array_values                   shift and go to state 315
    factor                         shift and go to state 249
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 294

    (62) array_value -> factor DARROW . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    IDVAR           shift and go to state 95
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    factor                         shift and go to state 316
    var                            shift and go to state 130
    boolean                        shift and go to state 107

state 295

    (165) constructor -> ID LPAREN RPAREN .

    SEMI            reduce using rule 165 (constructor -> ID LPAREN RPAREN .)


state 296

    (166) constructor -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 317


state 297

    (115) expression -> assing_var EQUAL AMPERSANT IDVAR .

    RBRACKET        reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    AND             reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    OR              reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    RPAREN          reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    SEMI            reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    COMMA           reduce using rule 115 (expression -> assing_var EQUAL AMPERSANT IDVAR .)


state 298

    (57) read_data -> POST LBRACKET STRING RBRACKET .

    SEMI            reduce using rule 57 (read_data -> POST LBRACKET STRING RBRACKET .)


state 299

    (58) read_data -> GET LBRACKET STRING RBRACKET .

    SEMI            reduce using rule 58 (read_data -> GET LBRACKET STRING RBRACKET .)


state 300

    (53) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .

    IDVAR           reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TIMESTIMES      reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    AMPERSANT       reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FUNCTION        reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRIVATE         reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PUBLIC          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PROTECTED       reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    REQUIRE         reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    INCLUDE         reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLASS           reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    IF              reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SWITCH          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CASE            reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DEFAULT         reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FOR             reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    WHILE           reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DO              reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ID              reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRINT           reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRINTR          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    VARDUMP         reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ECHO            reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLOSETAG        reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LPAREN          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    NUM             reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    STRING          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TRUE            reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FALSE           reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RBLOCK          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LBLOCK          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RETURN          reduce using rule 53 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)


state 301

    (74) fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .

    IDVAR           reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    TIMESTIMES      reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    AMPERSANT       reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FUNCTION        reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRIVATE         reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PUBLIC          reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PROTECTED       reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    REQUIRE         reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    INCLUDE         reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLASS           reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    IF              reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SWITCH          reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CASE            reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DEFAULT         reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FOR             reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    WHILE           reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DO              reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRINT           reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRINTR          reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    VARDUMP         reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ECHO            reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLOSETAG        reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DOT             reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SEMI            reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RPAREN          reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RBLOCK          reduce using rule 74 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)


state 302

    (163) typeclass -> ID IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRINT           reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRINTR          reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    VARDUMP         reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 163 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)


state 303

    (30) attribute -> attribute area var_declaration .
    (31) attribute -> area var_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 30 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 30 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 30 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 30 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 30 (attribute -> attribute area var_declaration .)
    PRIVATE         reduce using rule 30 (attribute -> attribute area var_declaration .)
    PUBLIC          reduce using rule 30 (attribute -> attribute area var_declaration .)
    PROTECTED       reduce using rule 30 (attribute -> attribute area var_declaration .)
    FUNCTION        reduce using rule 30 (attribute -> attribute area var_declaration .)
    RBLOCK          reduce using rule 30 (attribute -> attribute area var_declaration .)

  ! PRIVATE         [ reduce using rule 31 (attribute -> area var_declaration .) ]
  ! PUBLIC          [ reduce using rule 31 (attribute -> area var_declaration .) ]
  ! PROTECTED       [ reduce using rule 31 (attribute -> area var_declaration .) ]
  ! FUNCTION        [ reduce using rule 31 (attribute -> area var_declaration .) ]
  ! RBLOCK          [ reduce using rule 31 (attribute -> area var_declaration .) ]


state 304

    (32) attribute -> attribute area fun_declaration .
    (33) attribute -> area fun_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 32 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 32 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 32 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 32 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 32 (attribute -> attribute area fun_declaration .)
    PRIVATE         reduce using rule 32 (attribute -> attribute area fun_declaration .)
    PUBLIC          reduce using rule 32 (attribute -> attribute area fun_declaration .)
    PROTECTED       reduce using rule 32 (attribute -> attribute area fun_declaration .)
    FUNCTION        reduce using rule 32 (attribute -> attribute area fun_declaration .)
    RBLOCK          reduce using rule 32 (attribute -> attribute area fun_declaration .)

  ! PRIVATE         [ reduce using rule 33 (attribute -> area fun_declaration .) ]
  ! PUBLIC          [ reduce using rule 33 (attribute -> area fun_declaration .) ]
  ! PROTECTED       [ reduce using rule 33 (attribute -> area fun_declaration .) ]
  ! FUNCTION        [ reduce using rule 33 (attribute -> area fun_declaration .) ]
  ! RBLOCK          [ reduce using rule 33 (attribute -> area fun_declaration .) ]


state 305

    (101) selection_stmt -> IF LPAREN expression RPAREN statement selection .

    IDVAR           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TIMESTIMES      reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    AMPERSANT       reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FUNCTION        reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRIVATE         reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PUBLIC          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PROTECTED       reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    REQUIRE         reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    INCLUDE         reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLASS           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    IF              reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SWITCH          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CASE            reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DEFAULT         reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FOR             reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    WHILE           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DO              reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ID              reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRINT           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRINTR          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    VARDUMP         reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ECHO            reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLOSETAG        reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    BREAK           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SEMI            reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSE            reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSEIF          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LPAREN          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    NUM             reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    STRING          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TRUE            reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FALSE           reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RBLOCK          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LBLOCK          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RETURN          reduce using rule 101 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)


state 306

    (102) selection -> ELSE . statement
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    FUNCTION        reduce using rule 167 (empty -> .)
    REQUIRE         reduce using rule 167 (empty -> .)
    INCLUDE         reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]

    statement                      shift and go to state 318
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 307

    (103) selection -> ELSEIF . statement selection
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    statement                      shift and go to state 319
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 308

    (105) selection_stmt -> CASE NUM COLON statement BREAK SEMI .

    IDVAR           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLASS           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    IF              reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CASE            reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FOR             reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    WHILE           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DO              reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ID              reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRINT           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRINTR          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    VARDUMP         reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ECHO            reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    BREAK           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SEMI            reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSE            reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    NUM             reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    STRING          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TRUE            reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FALSE           reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RETURN          reduce using rule 105 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)


state 309

    (106) selection_stmt -> CASE STRING COLON statement BREAK SEMI .

    IDVAR           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLASS           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    IF              reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CASE            reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FOR             reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    WHILE           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DO              reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ID              reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRINT           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRINTR          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    VARDUMP         reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ECHO            reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    BREAK           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SEMI            reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSE            reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    NUM             reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    STRING          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TRUE            reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FALSE           reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RETURN          reduce using rule 106 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)


state 310

    (87) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt . statement_list echo_stmt RBLOCK
    (14) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (90) statement_list -> . statement_list statement
    (91) statement_list -> . empty
    (167) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 43
    LBLOCK          reduce using rule 167 (empty -> .)
    IF              reduce using rule 167 (empty -> .)
    SWITCH          reduce using rule 167 (empty -> .)
    CASE            reduce using rule 167 (empty -> .)
    DEFAULT         reduce using rule 167 (empty -> .)
    FOR             reduce using rule 167 (empty -> .)
    WHILE           reduce using rule 167 (empty -> .)
    DO              reduce using rule 167 (empty -> .)
    RETURN          reduce using rule 167 (empty -> .)
    CLASS           reduce using rule 167 (empty -> .)
    PRIVATE         reduce using rule 167 (empty -> .)
    PUBLIC          reduce using rule 167 (empty -> .)
    PROTECTED       reduce using rule 167 (empty -> .)
    ID              reduce using rule 167 (empty -> .)
    PRINT           reduce using rule 167 (empty -> .)
    PRINTR          reduce using rule 167 (empty -> .)
    VARDUMP         reduce using rule 167 (empty -> .)
    IDVAR           reduce using rule 167 (empty -> .)
    LPAREN          reduce using rule 167 (empty -> .)
    NUM             reduce using rule 167 (empty -> .)
    STRING          reduce using rule 167 (empty -> .)
    TRUE            reduce using rule 167 (empty -> .)
    FALSE           reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)

  ! ECHO            [ reduce using rule 167 (empty -> .) ]

    statement_list                 shift and go to state 320
    empty                          shift and go to state 321

state 311

    (88) local_declarations -> local_declarations var_declaration .

    IDVAR           reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    TIMESTIMES      reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    AMPERSANT       reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    CLASS           reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    PUBLIC          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    PROTECTED       reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    PRINT           reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    PRINTR          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    VARDUMP         reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 88 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 88 (local_declarations -> local_declarations var_declaration .)


state 312

    (108) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN statement
    (139) additive_expression -> additive_expression . addop term
    (144) addop -> . PLUS
    (145) addop -> . MINUS

    RPAREN          shift and go to state 322
    PLUS            shift and go to state 189
    MINUS           shift and go to state 190

    addop                          shift and go to state 173

state 313

    (110) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 323


state 314

    (159) args_list -> args_list COMMA expression .
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    COMMA           reduce using rule 159 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 159 (args_list -> args_list COMMA expression .)
    AND             shift and go to state 199
    OR              shift and go to state 200


state 315

    (61) array_values -> array_value COMMA array_values .

    RPAREN          reduce using rule 61 (array_values -> array_value COMMA array_values .)


state 316

    (62) array_value -> factor DARROW factor .

    COMMA           reduce using rule 62 (array_value -> factor DARROW factor .)
    RPAREN          reduce using rule 62 (array_value -> factor DARROW factor .)


state 317

    (166) constructor -> ID LPAREN args RPAREN .

    SEMI            reduce using rule 166 (constructor -> ID LPAREN args RPAREN .)


state 318

    (102) selection -> ELSE statement .

    ELSE            reduce using rule 102 (selection -> ELSE statement .)
    ELSEIF          reduce using rule 102 (selection -> ELSE statement .)
    IDVAR           reduce using rule 102 (selection -> ELSE statement .)
    TIMESTIMES      reduce using rule 102 (selection -> ELSE statement .)
    AMPERSANT       reduce using rule 102 (selection -> ELSE statement .)
    FUNCTION        reduce using rule 102 (selection -> ELSE statement .)
    PRIVATE         reduce using rule 102 (selection -> ELSE statement .)
    PUBLIC          reduce using rule 102 (selection -> ELSE statement .)
    PROTECTED       reduce using rule 102 (selection -> ELSE statement .)
    REQUIRE         reduce using rule 102 (selection -> ELSE statement .)
    INCLUDE         reduce using rule 102 (selection -> ELSE statement .)
    CLASS           reduce using rule 102 (selection -> ELSE statement .)
    IF              reduce using rule 102 (selection -> ELSE statement .)
    SWITCH          reduce using rule 102 (selection -> ELSE statement .)
    CASE            reduce using rule 102 (selection -> ELSE statement .)
    DEFAULT         reduce using rule 102 (selection -> ELSE statement .)
    FOR             reduce using rule 102 (selection -> ELSE statement .)
    WHILE           reduce using rule 102 (selection -> ELSE statement .)
    DO              reduce using rule 102 (selection -> ELSE statement .)
    ID              reduce using rule 102 (selection -> ELSE statement .)
    PRINT           reduce using rule 102 (selection -> ELSE statement .)
    PRINTR          reduce using rule 102 (selection -> ELSE statement .)
    VARDUMP         reduce using rule 102 (selection -> ELSE statement .)
    ECHO            reduce using rule 102 (selection -> ELSE statement .)
    CLOSETAG        reduce using rule 102 (selection -> ELSE statement .)
    BREAK           reduce using rule 102 (selection -> ELSE statement .)
    SEMI            reduce using rule 102 (selection -> ELSE statement .)
    LPAREN          reduce using rule 102 (selection -> ELSE statement .)
    NUM             reduce using rule 102 (selection -> ELSE statement .)
    STRING          reduce using rule 102 (selection -> ELSE statement .)
    TRUE            reduce using rule 102 (selection -> ELSE statement .)
    FALSE           reduce using rule 102 (selection -> ELSE statement .)
    RBLOCK          reduce using rule 102 (selection -> ELSE statement .)
    LBLOCK          reduce using rule 102 (selection -> ELSE statement .)
    RETURN          reduce using rule 102 (selection -> ELSE statement .)


state 319

    (103) selection -> ELSEIF statement . selection
    (102) selection -> . ELSE statement
    (103) selection -> . ELSEIF statement selection

    ELSE            shift and go to state 306
    ELSEIF          shift and go to state 307

    selection                      shift and go to state 324

state 320

    (87) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list . echo_stmt RBLOCK
    (90) statement_list -> statement_list . statement
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (167) empty -> .
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBLOCK          reduce using rule 167 (empty -> .)
    ECHO            reduce using rule 167 (empty -> .)
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]

    echo_stmt                      shift and go to state 325
    statement                      shift and go to state 326
    empty                          shift and go to state 27
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    expression                     shift and go to state 154
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    area                           shift and go to state 157
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 321

    (91) statement_list -> empty .

    LBLOCK          reduce using rule 91 (statement_list -> empty .)
    IF              reduce using rule 91 (statement_list -> empty .)
    SWITCH          reduce using rule 91 (statement_list -> empty .)
    CASE            reduce using rule 91 (statement_list -> empty .)
    DEFAULT         reduce using rule 91 (statement_list -> empty .)
    FOR             reduce using rule 91 (statement_list -> empty .)
    WHILE           reduce using rule 91 (statement_list -> empty .)
    DO              reduce using rule 91 (statement_list -> empty .)
    RETURN          reduce using rule 91 (statement_list -> empty .)
    CLASS           reduce using rule 91 (statement_list -> empty .)
    PRIVATE         reduce using rule 91 (statement_list -> empty .)
    PUBLIC          reduce using rule 91 (statement_list -> empty .)
    PROTECTED       reduce using rule 91 (statement_list -> empty .)
    ID              reduce using rule 91 (statement_list -> empty .)
    PRINT           reduce using rule 91 (statement_list -> empty .)
    PRINTR          reduce using rule 91 (statement_list -> empty .)
    VARDUMP         reduce using rule 91 (statement_list -> empty .)
    IDVAR           reduce using rule 91 (statement_list -> empty .)
    LPAREN          reduce using rule 91 (statement_list -> empty .)
    NUM             reduce using rule 91 (statement_list -> empty .)
    STRING          reduce using rule 91 (statement_list -> empty .)
    TRUE            reduce using rule 91 (statement_list -> empty .)
    FALSE           reduce using rule 91 (statement_list -> empty .)
    RBLOCK          reduce using rule 91 (statement_list -> empty .)
    ECHO            reduce using rule 91 (statement_list -> empty .)


state 322

    (108) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . statement
    (92) statement -> . expression_stmt
    (93) statement -> . compount_stmt
    (94) statement -> . selection_stmt
    (95) statement -> . iteration_stmt
    (96) statement -> . return_stmt
    (97) statement -> . class_declaration
    (98) statement -> . echo_stmt
    (99) expression_stmt -> . expression SEMI
    (87) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (100) selection_stmt -> . IF LPAREN expression RPAREN statement
    (101) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (104) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (105) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (106) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (107) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (108) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (109) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (110) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (111) return_stmt -> . RETURN SEMI
    (112) return_stmt -> . RETURN expression SEMI
    (26) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (27) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (14) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (15) echo_stmt -> . empty
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (35) area -> . PRIVATE
    (36) area -> . PUBLIC
    (37) area -> . PROTECTED
    (167) empty -> .
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PRINTR resolved as shift
  ! shift/reduce conflict for VARDUMP resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 155
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 156
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 167 (empty -> .)
    ELSE            reduce using rule 167 (empty -> .)
    ELSEIF          reduce using rule 167 (empty -> .)
    TIMESTIMES      reduce using rule 167 (empty -> .)
    AMPERSANT       reduce using rule 167 (empty -> .)
    FUNCTION        reduce using rule 167 (empty -> .)
    REQUIRE         reduce using rule 167 (empty -> .)
    INCLUDE         reduce using rule 167 (empty -> .)
    CLOSETAG        reduce using rule 167 (empty -> .)
    BREAK           reduce using rule 167 (empty -> .)
    SEMI            reduce using rule 167 (empty -> .)
    RBLOCK          reduce using rule 167 (empty -> .)
    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

  ! IDVAR           [ reduce using rule 167 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 167 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 167 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 167 (empty -> .) ]
  ! CLASS           [ reduce using rule 167 (empty -> .) ]
  ! IF              [ reduce using rule 167 (empty -> .) ]
  ! SWITCH          [ reduce using rule 167 (empty -> .) ]
  ! CASE            [ reduce using rule 167 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 167 (empty -> .) ]
  ! FOR             [ reduce using rule 167 (empty -> .) ]
  ! WHILE           [ reduce using rule 167 (empty -> .) ]
  ! DO              [ reduce using rule 167 (empty -> .) ]
  ! ID              [ reduce using rule 167 (empty -> .) ]
  ! PRINT           [ reduce using rule 167 (empty -> .) ]
  ! PRINTR          [ reduce using rule 167 (empty -> .) ]
  ! VARDUMP         [ reduce using rule 167 (empty -> .) ]
  ! LPAREN          [ reduce using rule 167 (empty -> .) ]
  ! NUM             [ reduce using rule 167 (empty -> .) ]
  ! STRING          [ reduce using rule 167 (empty -> .) ]
  ! TRUE            [ reduce using rule 167 (empty -> .) ]
  ! FALSE           [ reduce using rule 167 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 167 (empty -> .) ]
  ! RETURN          [ reduce using rule 167 (empty -> .) ]

    expression                     shift and go to state 154
    additive_expression            shift and go to state 100
    statement                      shift and go to state 327
    expression_stmt                shift and go to state 147
    compount_stmt                  shift and go to state 148
    selection_stmt                 shift and go to state 149
    iteration_stmt                 shift and go to state 150
    return_stmt                    shift and go to state 151
    class_declaration              shift and go to state 152
    echo_stmt                      shift and go to state 153
    var                            shift and go to state 114
    area                           shift and go to state 157
    empty                          shift and go to state 27
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 323

    (110) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN . expression RPAREN
    (113) expression -> . assing_var EQUAL expression
    (114) expression -> . simple_expression
    (115) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (116) expression -> . expression AND expression
    (117) expression -> . expression OR expression
    (118) expression -> . assing_var
    (119) expression -> . fun_call
    (63) assing_var -> . var
    (64) assing_var -> . var ARROW ID
    (65) assing_var -> . var DARROW ID
    (122) simple_expression -> . additive_expression relop additive_expression
    (123) simple_expression -> . additive_expression
    (75) fun_call -> . ID LPAREN params RPAREN
    (76) fun_call -> . assing_var LPAREN params RPAREN
    (77) fun_call -> . PRINT LPAREN echo_params RPAREN
    (78) fun_call -> . PRINTR LPAREN IDVAR RPAREN
    (79) fun_call -> . VARDUMP LPAREN IDVAR RPAREN
    (120) var -> . IDVAR
    (121) var -> . IDVAR LBRACKET expression RBRACKET
    (139) additive_expression -> . additive_expression addop term
    (140) additive_expression -> . term
    (141) additive_expression -> . term MINUSMINUS
    (142) additive_expression -> . term PLUSPLUS
    (143) additive_expression -> . fun_call
    (146) term -> . term mulop factor
    (147) term -> . factor
    (150) factor -> . LPAREN expression RPAREN
    (151) factor -> . var
    (152) factor -> . NUM
    (153) factor -> . STRING
    (154) factor -> . boolean
    (155) factor -> . IDVAR LPAREN args RPAREN
    (161) boolean -> . TRUE
    (162) boolean -> . FALSE

    ID              shift and go to state 90
    PRINT           shift and go to state 36
    PRINTR          shift and go to state 37
    VARDUMP         shift and go to state 38
    IDVAR           shift and go to state 109
    LPAREN          shift and go to state 99
    NUM             shift and go to state 105
    STRING          shift and go to state 106
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expression                     shift and go to state 328
    assing_var                     shift and go to state 111
    simple_expression              shift and go to state 112
    fun_call                       shift and go to state 113
    var                            shift and go to state 114
    additive_expression            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 103
    boolean                        shift and go to state 107

state 324

    (103) selection -> ELSEIF statement selection .

    ELSE            reduce using rule 103 (selection -> ELSEIF statement selection .)
    ELSEIF          reduce using rule 103 (selection -> ELSEIF statement selection .)
    IDVAR           reduce using rule 103 (selection -> ELSEIF statement selection .)
    TIMESTIMES      reduce using rule 103 (selection -> ELSEIF statement selection .)
    AMPERSANT       reduce using rule 103 (selection -> ELSEIF statement selection .)
    FUNCTION        reduce using rule 103 (selection -> ELSEIF statement selection .)
    PRIVATE         reduce using rule 103 (selection -> ELSEIF statement selection .)
    PUBLIC          reduce using rule 103 (selection -> ELSEIF statement selection .)
    PROTECTED       reduce using rule 103 (selection -> ELSEIF statement selection .)
    REQUIRE         reduce using rule 103 (selection -> ELSEIF statement selection .)
    INCLUDE         reduce using rule 103 (selection -> ELSEIF statement selection .)
    CLASS           reduce using rule 103 (selection -> ELSEIF statement selection .)
    IF              reduce using rule 103 (selection -> ELSEIF statement selection .)
    SWITCH          reduce using rule 103 (selection -> ELSEIF statement selection .)
    CASE            reduce using rule 103 (selection -> ELSEIF statement selection .)
    DEFAULT         reduce using rule 103 (selection -> ELSEIF statement selection .)
    FOR             reduce using rule 103 (selection -> ELSEIF statement selection .)
    WHILE           reduce using rule 103 (selection -> ELSEIF statement selection .)
    DO              reduce using rule 103 (selection -> ELSEIF statement selection .)
    ID              reduce using rule 103 (selection -> ELSEIF statement selection .)
    PRINT           reduce using rule 103 (selection -> ELSEIF statement selection .)
    PRINTR          reduce using rule 103 (selection -> ELSEIF statement selection .)
    VARDUMP         reduce using rule 103 (selection -> ELSEIF statement selection .)
    ECHO            reduce using rule 103 (selection -> ELSEIF statement selection .)
    CLOSETAG        reduce using rule 103 (selection -> ELSEIF statement selection .)
    BREAK           reduce using rule 103 (selection -> ELSEIF statement selection .)
    SEMI            reduce using rule 103 (selection -> ELSEIF statement selection .)
    LPAREN          reduce using rule 103 (selection -> ELSEIF statement selection .)
    NUM             reduce using rule 103 (selection -> ELSEIF statement selection .)
    STRING          reduce using rule 103 (selection -> ELSEIF statement selection .)
    TRUE            reduce using rule 103 (selection -> ELSEIF statement selection .)
    FALSE           reduce using rule 103 (selection -> ELSEIF statement selection .)
    RBLOCK          reduce using rule 103 (selection -> ELSEIF statement selection .)
    LBLOCK          reduce using rule 103 (selection -> ELSEIF statement selection .)
    RETURN          reduce using rule 103 (selection -> ELSEIF statement selection .)


state 325

    (87) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt . RBLOCK
    (14) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (98) statement -> echo_stmt .

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
    RBLOCK          shift and go to state 329
    ECHO            shift and go to state 43
    LBLOCK          reduce using rule 98 (statement -> echo_stmt .)
    IF              reduce using rule 98 (statement -> echo_stmt .)
    SWITCH          reduce using rule 98 (statement -> echo_stmt .)
    CASE            reduce using rule 98 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 98 (statement -> echo_stmt .)
    FOR             reduce using rule 98 (statement -> echo_stmt .)
    WHILE           reduce using rule 98 (statement -> echo_stmt .)
    DO              reduce using rule 98 (statement -> echo_stmt .)
    RETURN          reduce using rule 98 (statement -> echo_stmt .)
    CLASS           reduce using rule 98 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 98 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 98 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 98 (statement -> echo_stmt .)
    ID              reduce using rule 98 (statement -> echo_stmt .)
    PRINT           reduce using rule 98 (statement -> echo_stmt .)
    PRINTR          reduce using rule 98 (statement -> echo_stmt .)
    VARDUMP         reduce using rule 98 (statement -> echo_stmt .)
    IDVAR           reduce using rule 98 (statement -> echo_stmt .)
    LPAREN          reduce using rule 98 (statement -> echo_stmt .)
    NUM             reduce using rule 98 (statement -> echo_stmt .)
    STRING          reduce using rule 98 (statement -> echo_stmt .)
    TRUE            reduce using rule 98 (statement -> echo_stmt .)
    FALSE           reduce using rule 98 (statement -> echo_stmt .)

  ! RBLOCK          [ reduce using rule 98 (statement -> echo_stmt .) ]
  ! ECHO            [ reduce using rule 98 (statement -> echo_stmt .) ]


state 326

    (90) statement_list -> statement_list statement .

    LBLOCK          reduce using rule 90 (statement_list -> statement_list statement .)
    IF              reduce using rule 90 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 90 (statement_list -> statement_list statement .)
    CASE            reduce using rule 90 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 90 (statement_list -> statement_list statement .)
    FOR             reduce using rule 90 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 90 (statement_list -> statement_list statement .)
    DO              reduce using rule 90 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 90 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 90 (statement_list -> statement_list statement .)
    PRIVATE         reduce using rule 90 (statement_list -> statement_list statement .)
    PUBLIC          reduce using rule 90 (statement_list -> statement_list statement .)
    PROTECTED       reduce using rule 90 (statement_list -> statement_list statement .)
    ID              reduce using rule 90 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 90 (statement_list -> statement_list statement .)
    PRINTR          reduce using rule 90 (statement_list -> statement_list statement .)
    VARDUMP         reduce using rule 90 (statement_list -> statement_list statement .)
    IDVAR           reduce using rule 90 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 90 (statement_list -> statement_list statement .)
    NUM             reduce using rule 90 (statement_list -> statement_list statement .)
    STRING          reduce using rule 90 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 90 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 90 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 90 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 90 (statement_list -> statement_list statement .)


state 327

    (108) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .

    IDVAR           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TIMESTIMES      reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    AMPERSANT       reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PRIVATE         reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PUBLIC          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PROTECTED       reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    REQUIRE         reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    INCLUDE         reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLASS           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    IF              reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SWITCH          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CASE            reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FOR             reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    WHILE           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DO              reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ID              reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PRINT           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PRINTR          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    VARDUMP         reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ECHO            reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLOSETAG        reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    BREAK           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SEMI            reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSE            reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LPAREN          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    NUM             reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    STRING          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TRUE            reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FALSE           reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RBLOCK          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LBLOCK          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RETURN          reduce using rule 108 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)


state 328

    (110) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression . RPAREN
    (116) expression -> expression . AND expression
    (117) expression -> expression . OR expression

    RPAREN          shift and go to state 330
    AND             shift and go to state 199
    OR              shift and go to state 200


state 329

    (87) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .

    BREAK           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SEMI            reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSE            reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSEIF          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IDVAR           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TIMESTIMES      reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    AMPERSANT       reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FUNCTION        reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRIVATE         reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PUBLIC          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PROTECTED       reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    REQUIRE         reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    INCLUDE         reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLASS           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IF              reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SWITCH          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CASE            reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DEFAULT         reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FOR             reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    WHILE           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DO              reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ID              reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRINT           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRINTR          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    VARDUMP         reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ECHO            reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLOSETAG        reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LPAREN          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    NUM             reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    STRING          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TRUE            reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FALSE           reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RBLOCK          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LBLOCK          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RETURN          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DOT             reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RPAREN          reduce using rule 87 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)


state 330

    (110) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .

    IDVAR           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TIMESTIMES      reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRIVATE         reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PUBLIC          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PROTECTED       reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    REQUIRE         reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    INCLUDE         reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLASS           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SWITCH          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CASE            reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DEFAULT         reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ID              reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRINT           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRINTR          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    VARDUMP         reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ECHO            reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLOSETAG        reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SEMI            reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSEIF          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    NUM             reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LBLOCK          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 110 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDVAR in state 2 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 2 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 2 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 2 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 2 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 4 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 4 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 4 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 4 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 4 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 4 resolved as shift
WARNING: shift/reduce conflict for CASE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 4 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 10 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MUL_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for DIV_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for CONCAT_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MOD_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS_EQUAL in state 15 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for MUL_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for DIV_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for CONCAT_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for MOD_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS_EQUAL in state 92 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 95 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 109 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 116 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 117 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 118 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 119 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 119 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 153 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 225 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 225 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 225 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 225 resolved as shift
WARNING: shift/reduce conflict for CASE in state 225 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 225 resolved as shift
WARNING: shift/reduce conflict for FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 225 resolved as shift
WARNING: shift/reduce conflict for DO in state 225 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 225 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 225 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 225 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 225 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 225 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 225 resolved as shift
WARNING: shift/reduce conflict for NUM in state 225 resolved as shift
WARNING: shift/reduce conflict for STRING in state 225 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 225 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 225 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 226 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 226 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 226 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 226 resolved as shift
WARNING: shift/reduce conflict for IF in state 226 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 226 resolved as shift
WARNING: shift/reduce conflict for CASE in state 226 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 226 resolved as shift
WARNING: shift/reduce conflict for FOR in state 226 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 226 resolved as shift
WARNING: shift/reduce conflict for DO in state 226 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 226 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 226 resolved as shift
WARNING: shift/reduce conflict for ID in state 226 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 226 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 226 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 226 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 226 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 226 resolved as shift
WARNING: shift/reduce conflict for NUM in state 226 resolved as shift
WARNING: shift/reduce conflict for STRING in state 226 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 226 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 226 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 231 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 235 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 235 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 235 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 235 resolved as shift
WARNING: shift/reduce conflict for CASE in state 235 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 235 resolved as shift
WARNING: shift/reduce conflict for FOR in state 235 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 235 resolved as shift
WARNING: shift/reduce conflict for DO in state 235 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 235 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 235 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 235 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 235 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 235 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 235 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 235 resolved as shift
WARNING: shift/reduce conflict for NUM in state 235 resolved as shift
WARNING: shift/reduce conflict for STRING in state 235 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 235 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 235 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 255 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 278 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 278 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 283 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 306 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 306 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 306 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 306 resolved as shift
WARNING: shift/reduce conflict for IF in state 306 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 306 resolved as shift
WARNING: shift/reduce conflict for CASE in state 306 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 306 resolved as shift
WARNING: shift/reduce conflict for FOR in state 306 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 306 resolved as shift
WARNING: shift/reduce conflict for DO in state 306 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 306 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 306 resolved as shift
WARNING: shift/reduce conflict for ID in state 306 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 306 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 306 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 306 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 306 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 306 resolved as shift
WARNING: shift/reduce conflict for NUM in state 306 resolved as shift
WARNING: shift/reduce conflict for STRING in state 306 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 306 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 306 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 310 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 320 resolved as shift
WARNING: shift/reduce conflict for IF in state 320 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 320 resolved as shift
WARNING: shift/reduce conflict for CASE in state 320 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 320 resolved as shift
WARNING: shift/reduce conflict for FOR in state 320 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 320 resolved as shift
WARNING: shift/reduce conflict for DO in state 320 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 320 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 320 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 320 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 320 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 320 resolved as shift
WARNING: shift/reduce conflict for ID in state 320 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 320 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 320 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 320 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 320 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 320 resolved as shift
WARNING: shift/reduce conflict for NUM in state 320 resolved as shift
WARNING: shift/reduce conflict for STRING in state 320 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 320 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 320 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 322 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 322 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 322 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 322 resolved as shift
WARNING: shift/reduce conflict for IF in state 322 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 322 resolved as shift
WARNING: shift/reduce conflict for CASE in state 322 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 322 resolved as shift
WARNING: shift/reduce conflict for FOR in state 322 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 322 resolved as shift
WARNING: shift/reduce conflict for DO in state 322 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 322 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 322 resolved as shift
WARNING: shift/reduce conflict for ID in state 322 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 322 resolved as shift
WARNING: shift/reduce conflict for PRINTR in state 322 resolved as shift
WARNING: shift/reduce conflict for VARDUMP in state 322 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 322 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 322 resolved as shift
WARNING: shift/reduce conflict for NUM in state 322 resolved as shift
WARNING: shift/reduce conflict for STRING in state 322 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 322 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 322 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 325 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 325 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (declaration_list -> declaration)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 113 resolved using rule (expression -> fun_call)
WARNING: rejected rule (additive_expression -> fun_call) in state 113
WARNING: reduce/reduce conflict in state 114 resolved using rule (assing_var -> var)
WARNING: rejected rule (factor -> var) in state 114
WARNING: reduce/reduce conflict in state 128 resolved using rule (param -> IDVAR)
WARNING: rejected rule (var -> IDVAR) in state 128
WARNING: reduce/reduce conflict in state 303 resolved using rule (attribute -> attribute area var_declaration)
WARNING: rejected rule (attribute -> area var_declaration) in state 303
WARNING: reduce/reduce conflict in state 304 resolved using rule (attribute -> attribute area fun_declaration)
WARNING: rejected rule (attribute -> area fun_declaration) in state 304
