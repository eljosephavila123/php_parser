Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    AS
    CALLABLE
    CATCH
    CLONE
    CLOSETAGAL
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DECLARE
    DIE
    DOT_DOT
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    PLUSEQUAL
    PRINT
    QUOTES
    REQUIRE_ONCE
    STATIC
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    XOR
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENTAG declaration_list CLOSETAG
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> area fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     declaration -> echo_stmt
Rule 10    declaration -> selection_stmt
Rule 11    declaration -> iteration_stmt
Rule 12    declaration -> typeclass
Rule 13    echo_stmt -> echo_stmt ECHO echo_params SEMI
Rule 14    echo_stmt -> empty
Rule 15    echo_params -> echo_param
Rule 16    echo_params -> echo_param DOT echo_params
Rule 17    echo_param -> STRING
Rule 18    echo_param -> IDVAR
Rule 19    echo_param -> NUM
Rule 20    echo_param -> boolean
Rule 21    echo_param -> fun_declaration
Rule 22    echo_param -> fun_call
Rule 23    header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI
Rule 24    header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI
Rule 25    class_declaration -> area CLASS ID LBLOCK attributes RBLOCK
Rule 26    class_declaration -> CLASS ID LBLOCK attributes RBLOCK
Rule 27    attributes -> attribute
Rule 28    attributes -> attribute attributes
Rule 29    attribute -> attribute area var_declaration
Rule 30    attribute -> area var_declaration
Rule 31    attribute -> attribute area fun_declaration
Rule 32    attribute -> area fun_declaration
Rule 33    attribute -> fun_declaration
Rule 34    area -> PRIVATE
Rule 35    area -> PUBLIC
Rule 36    area -> PROTECTED
Rule 37    var_declaration -> IDVAR SEMI var_declaration
Rule 38    var_declaration -> IDVAR SEMI
Rule 39    var_declaration -> TIMESTIMES IDVAR SEMI
Rule 40    var_declaration -> TIMESTIMES IDVAR SEMI var_declaration
Rule 41    var_declaration -> assing_var IGUAL NUM SEMI var_declaration
Rule 42    var_declaration -> assing_var IGUAL NUM SEMI
Rule 43    var_declaration -> assing_var IGUAL STRING SEMI var_declaration
Rule 44    var_declaration -> assing_var IGUAL STRING SEMI
Rule 45    var_declaration -> assing_var IGUAL boolean SEMI var_declaration
Rule 46    var_declaration -> assing_var IGUAL boolean SEMI
Rule 47    var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration
Rule 48    var_declaration -> assing_var IGUAL IDVAR SEMI
Rule 49    var_declaration -> assing_var IGUAL array_declare SEMI
Rule 50    var_declaration -> AMPERSANT IDVAR SEMI var_declaration
Rule 51    var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
Rule 52    var_declaration -> AMPERSANT IDVAR SEMI
Rule 53    var_declaration -> assing_var IGUAL simple_expression SEMI
Rule 54    var_declaration -> IDVAR IGUAL simple_expression SEMI
Rule 55    var_declaration -> fun_call SEMI
Rule 56    array_declare -> ARRAY LPAREN array_values RPAREN
Rule 57    array_values -> array_value
Rule 58    array_values -> array_value COMMA array_values
Rule 59    array_value -> factor DARROW factor
Rule 60    assing_var -> var
Rule 61    assing_var -> var ARROW ID
Rule 62    assing_var -> var DARROW ID
Rule 63    IGUAL -> EQUAL
Rule 64    IGUAL -> MUL_EQUAL
Rule 65    IGUAL -> DIV_EQUAL
Rule 66    IGUAL -> CONCAT_EQUAL
Rule 67    IGUAL -> MOD_EQUAL
Rule 68    IGUAL -> PLUS_EQUAL
Rule 69    IGUAL -> MINUS_EQUAL
Rule 70    fun_declaration -> FUNCTION ID LPAREN params RPAREN
Rule 71    fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt
Rule 72    fun_call -> ID LPAREN params RPAREN
Rule 73    fun_call -> assing_var LPAREN params RPAREN
Rule 74    params -> param_list
Rule 75    params -> empty
Rule 76    param_list -> param
Rule 77    param_list -> param COMMA param_list
Rule 78    param -> IDVAR
Rule 79    param -> IDVAR LBRACKET RBRACKET
Rule 80    param -> term
Rule 81    compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
Rule 82    local_declarations -> local_declarations var_declaration
Rule 83    local_declarations -> empty
Rule 84    statement_list -> statement_list statement
Rule 85    statement_list -> empty
Rule 86    statement -> expression_stmt
Rule 87    statement -> compount_stmt
Rule 88    statement -> selection_stmt
Rule 89    statement -> iteration_stmt
Rule 90    statement -> return_stmt
Rule 91    statement -> class_declaration
Rule 92    statement -> echo_stmt
Rule 93    expression_stmt -> expression SEMI
Rule 94    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 95    selection_stmt -> IF LPAREN expression RPAREN statement selection
Rule 96    selection -> ELSE statement
Rule 97    selection -> ELSEIF statement selection
Rule 98    selection_stmt -> SWITCH LPAREN var RPAREN statement
Rule 99    selection_stmt -> CASE NUM COLON statement BREAK SEMI
Rule 100   selection_stmt -> CASE STRING COLON statement BREAK SEMI
Rule 101   selection_stmt -> DEFAULT COLON statement BREAK SEMI
Rule 102   iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
Rule 103   iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 104   iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
Rule 105   return_stmt -> RETURN SEMI
Rule 106   return_stmt -> RETURN expression SEMI
Rule 107   expression -> assing_var EQUAL expression
Rule 108   expression -> simple_expression
Rule 109   expression -> assing_var EQUAL AMPERSANT IDVAR
Rule 110   expression -> expression AND expression
Rule 111   expression -> expression OR expression
Rule 112   expression -> assing_var
Rule 113   expression -> fun_call
Rule 114   var -> IDVAR
Rule 115   var -> IDVAR LBRACKET expression RBRACKET
Rule 116   simple_expression -> additive_expression relop additive_expression
Rule 117   simple_expression -> additive_expression
Rule 118   relop -> LESS
Rule 119   relop -> LESSEQUAL
Rule 120   relop -> GREATER
Rule 121   relop -> GREATEREQUAL
Rule 122   relop -> DEQUAL
Rule 123   relop -> DISTINT
Rule 124   relop -> ISEQUAL
Rule 125   relop -> IS_IDENTICAL
Rule 126   relop -> IS_NOT_IDENTICAL
Rule 127   relop -> SR_EQUAL
Rule 128   relop -> SL_EQUAL
Rule 129   relop -> AND_EQUAL
Rule 130   relop -> OR_EQUAL
Rule 131   relop -> XOR_EQUAL
Rule 132   relop -> CONCAT_EQUAL
Rule 133   additive_expression -> additive_expression addop term
Rule 134   additive_expression -> term
Rule 135   additive_expression -> term MINUSMINUS
Rule 136   additive_expression -> term PLUSPLUS
Rule 137   additive_expression -> fun_call
Rule 138   addop -> PLUS
Rule 139   addop -> MINUS
Rule 140   term -> term mulop factor
Rule 141   term -> factor
Rule 142   mulop -> TIMES
Rule 143   mulop -> DIVIDE
Rule 144   factor -> LPAREN expression RPAREN
Rule 145   factor -> var
Rule 146   factor -> NUM
Rule 147   factor -> STRING
Rule 148   factor -> boolean
Rule 149   factor -> IDVAR LPAREN args RPAREN
Rule 150   args -> args_list
Rule 151   args -> empty
Rule 152   args -> VOID
Rule 153   args_list -> args_list COMMA expression
Rule 154   args_list -> expression
Rule 155   boolean -> TRUE
Rule 156   boolean -> FALSE
Rule 157   typeclass -> ID IDVAR EQUAL NEW constructor SEMI
Rule 158   typeclass -> IDVAR EQUAL NEW constructor SEMI
Rule 159   constructor -> ID LPAREN RPAREN
Rule 160   constructor -> ID LPAREN args RPAREN
Rule 161   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 50 51 52 109
AND                  : 110
AND_EQUAL            : 129
APOSTROPHE           : 
ARRAY                : 56
ARROW                : 61
AS                   : 
BREAK                : 99 100 101
CALLABLE             : 
CASE                 : 99 100
CATCH                : 
CLASS                : 25 26
CLONE                : 
CLOSETAG             : 1
CLOSETAGAL           : 
COLON                : 99 100 101
COMMA                : 58 77 153
COMMENTS             : 
COMMENTS_C99         : 
CONCAT_EQUAL         : 66 132
CONST                : 
CONTINUE             : 
DARROW               : 59 62
DECLARE              : 
DEFAULT              : 101
DEQUAL               : 122
DIE                  : 
DISTINT              : 123
DIVIDE               : 143
DIV_EQUAL            : 65
DO                   : 104
DOT                  : 16
DOT_DOT              : 
ECHO                 : 13
ELSE                 : 96
ELSEIF               : 97
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 63 107 109 157 158
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 156
FINALLY              : 
FOR                  : 102
FOREACH              : 
FUNCTION             : 70 71
GLOBAL               : 
GOTO                 : 
GREATER              : 120
GREATEREQUAL         : 121
HASHTAG              : 
ID                   : 25 26 61 62 70 71 72 157 159 160
IDVAR                : 18 37 38 39 40 47 48 50 51 51 52 54 78 79 109 114 115 149 157 158
IF                   : 94 95
IMPLEMENTS           : 
INCLUDE              : 24
INCLUDE_ONCE         : 
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
ISEQUAL              : 124
ISSET                : 
IS_IDENTICAL         : 125
IS_NOT_IDENTICAL     : 126
LBLOCK               : 25 26 81 104
LBRACKET             : 79 115
LESS                 : 118
LESSEQUAL            : 119
LIST                 : 
LPAREN               : 23 24 56 70 71 72 73 94 95 98 102 103 104 144 149 159 160
MINUS                : 139
MINUSEQUAL           : 
MINUSMINUS           : 135
MINUS_EQUAL          : 69
MOD_EQUAL            : 67
MUL_EQUAL            : 64
NAMESPACE            : 
NEW                  : 157 158
NUM                  : 19 41 42 99 146
OPENTAG              : 1
OR                   : 111
OR_EQUAL             : 130
PLUS                 : 138
PLUSEQUAL            : 
PLUSPLUS             : 136
PLUS_EQUAL           : 68
PRINT                : 
PRIVATE              : 34
PROTECTED            : 36
PUBLIC               : 35
QUOTES               : 
RBLOCK               : 25 26 81 104
RBRACKET             : 79 115
REQUIRE              : 23
REQUIRE_ONCE         : 
RETURN               : 105 106
RPAREN               : 23 24 56 70 71 72 73 94 95 98 102 103 104 144 149 159 160
SEMI                 : 13 23 24 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 93 99 100 101 102 104 105 106 157 158
SL_EQUAL             : 128
SR_EQUAL             : 127
STATIC               : 
STRING               : 17 23 24 43 44 100 147
SWITCH               : 98
THROW                : 
TIMES                : 142
TIMESTIMES           : 39 40
TRAIT                : 
TRUE                 : 155
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VOID                 : 152
WHILE                : 103 104
XOR                  : 
XOR_EQUAL            : 131
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

IGUAL                : 41 42 43 44 45 46 47 48 49 51 53 54
additive_expression  : 102 116 116 117 133
addop                : 133
area                 : 6 25 29 30 31 32
args                 : 149 160
args_list            : 150 153
array_declare        : 49
array_value          : 57 58
array_values         : 56 58
assing_var           : 41 42 43 44 45 46 47 48 49 53 73 107 109 112
attribute            : 27 28 29 31
attributes           : 25 26 28
boolean              : 20 45 46 148
class_declaration    : 8 91
compount_stmt        : 71 87
constructor          : 157 158
declaration          : 2 3
declaration_list     : 1 3
echo_param           : 15 16
echo_params          : 13 16
echo_stmt            : 9 13 81 81 81 92
empty                : 14 75 83 85 151
expression           : 93 94 95 102 103 104 106 107 110 110 111 111 115 144 153 154
expression_stmt      : 86
factor               : 59 59 140 141
fun_call             : 22 55 113 137
fun_declaration      : 5 6 21 31 32 33
header_declaration   : 7
iteration_stmt       : 11 89
local_declarations   : 81 82
mulop                : 140
param                : 76 77
param_list           : 74 77
params               : 70 71 72 73
program              : 0
relop                : 116
return_stmt          : 90
selection            : 95 97
selection_stmt       : 10 51 88
simple_expression    : 53 54 108
statement            : 84 94 95 96 97 98 99 100 101 102 103 104
statement_list       : 81 84
term                 : 80 133 134 135 136 140
typeclass            : 12
var                  : 60 61 62 98 145
var_declaration      : 4 29 30 37 40 41 43 45 47 50 82 102

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENTAG declaration_list CLOSETAG

    OPENTAG         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENTAG . declaration_list CLOSETAG
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (23) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (24) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (157) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (158) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (161) empty -> .
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    ECHO            reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 161 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 161 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 161 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 3

    (1) program -> OPENTAG declaration_list . CLOSETAG

    CLOSETAG        shift and go to state 36


state 4

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (23) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (24) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (157) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (158) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (161) empty -> .
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for CLOSETAG resolved using rule 2 (declaration_list -> declaration .)
    CLOSETAG        reduce using rule 2 (declaration_list -> declaration .)
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    ECHO            reduce using rule 161 (empty -> .)

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 161 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 161 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 161 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! CLOSETAG        [ reduce using rule 161 (empty -> .) ]

    declaration                    shift and go to state 4
    declaration_list               shift and go to state 37
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 5

    (4) declaration -> var_declaration .

    IDVAR           reduce using rule 4 (declaration -> var_declaration .)
    TIMESTIMES      reduce using rule 4 (declaration -> var_declaration .)
    AMPERSANT       reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PROTECTED       reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    ID              reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    CLOSETAG        reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    IDVAR           reduce using rule 5 (declaration -> fun_declaration .)
    TIMESTIMES      reduce using rule 5 (declaration -> fun_declaration .)
    AMPERSANT       reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> fun_declaration .)
    PROTECTED       reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    CLASS           reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    DO              reduce using rule 5 (declaration -> fun_declaration .)
    ID              reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    CLOSETAG        reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> area . fun_declaration
    (25) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    CLASS           shift and go to state 39
    FUNCTION        shift and go to state 19

    fun_declaration                shift and go to state 38

state 8

    (7) declaration -> header_declaration .

    IDVAR           reduce using rule 7 (declaration -> header_declaration .)
    TIMESTIMES      reduce using rule 7 (declaration -> header_declaration .)
    AMPERSANT       reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PROTECTED       reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    ID              reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    CLOSETAG        reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> class_declaration .

    IDVAR           reduce using rule 8 (declaration -> class_declaration .)
    TIMESTIMES      reduce using rule 8 (declaration -> class_declaration .)
    AMPERSANT       reduce using rule 8 (declaration -> class_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PROTECTED       reduce using rule 8 (declaration -> class_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> class_declaration .)
    INCLUDE         reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    ID              reduce using rule 8 (declaration -> class_declaration .)
    ECHO            reduce using rule 8 (declaration -> class_declaration .)
    CLOSETAG        reduce using rule 8 (declaration -> class_declaration .)


state 10

    (9) declaration -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    IDVAR           reduce using rule 9 (declaration -> echo_stmt .)
    TIMESTIMES      reduce using rule 9 (declaration -> echo_stmt .)
    AMPERSANT       reduce using rule 9 (declaration -> echo_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> echo_stmt .)
    PRIVATE         reduce using rule 9 (declaration -> echo_stmt .)
    PUBLIC          reduce using rule 9 (declaration -> echo_stmt .)
    PROTECTED       reduce using rule 9 (declaration -> echo_stmt .)
    REQUIRE         reduce using rule 9 (declaration -> echo_stmt .)
    INCLUDE         reduce using rule 9 (declaration -> echo_stmt .)
    CLASS           reduce using rule 9 (declaration -> echo_stmt .)
    IF              reduce using rule 9 (declaration -> echo_stmt .)
    SWITCH          reduce using rule 9 (declaration -> echo_stmt .)
    CASE            reduce using rule 9 (declaration -> echo_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> echo_stmt .)
    FOR             reduce using rule 9 (declaration -> echo_stmt .)
    WHILE           reduce using rule 9 (declaration -> echo_stmt .)
    DO              reduce using rule 9 (declaration -> echo_stmt .)
    ID              reduce using rule 9 (declaration -> echo_stmt .)
    CLOSETAG        reduce using rule 9 (declaration -> echo_stmt .)
    ECHO            shift and go to state 40

  ! ECHO            [ reduce using rule 9 (declaration -> echo_stmt .) ]


state 11

    (10) declaration -> selection_stmt .

    IDVAR           reduce using rule 10 (declaration -> selection_stmt .)
    TIMESTIMES      reduce using rule 10 (declaration -> selection_stmt .)
    AMPERSANT       reduce using rule 10 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 10 (declaration -> selection_stmt .)
    PRIVATE         reduce using rule 10 (declaration -> selection_stmt .)
    PUBLIC          reduce using rule 10 (declaration -> selection_stmt .)
    PROTECTED       reduce using rule 10 (declaration -> selection_stmt .)
    REQUIRE         reduce using rule 10 (declaration -> selection_stmt .)
    INCLUDE         reduce using rule 10 (declaration -> selection_stmt .)
    CLASS           reduce using rule 10 (declaration -> selection_stmt .)
    IF              reduce using rule 10 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 10 (declaration -> selection_stmt .)
    CASE            reduce using rule 10 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 10 (declaration -> selection_stmt .)
    FOR             reduce using rule 10 (declaration -> selection_stmt .)
    WHILE           reduce using rule 10 (declaration -> selection_stmt .)
    DO              reduce using rule 10 (declaration -> selection_stmt .)
    ID              reduce using rule 10 (declaration -> selection_stmt .)
    ECHO            reduce using rule 10 (declaration -> selection_stmt .)
    CLOSETAG        reduce using rule 10 (declaration -> selection_stmt .)


state 12

    (11) declaration -> iteration_stmt .

    IDVAR           reduce using rule 11 (declaration -> iteration_stmt .)
    TIMESTIMES      reduce using rule 11 (declaration -> iteration_stmt .)
    AMPERSANT       reduce using rule 11 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 11 (declaration -> iteration_stmt .)
    PRIVATE         reduce using rule 11 (declaration -> iteration_stmt .)
    PUBLIC          reduce using rule 11 (declaration -> iteration_stmt .)
    PROTECTED       reduce using rule 11 (declaration -> iteration_stmt .)
    REQUIRE         reduce using rule 11 (declaration -> iteration_stmt .)
    INCLUDE         reduce using rule 11 (declaration -> iteration_stmt .)
    CLASS           reduce using rule 11 (declaration -> iteration_stmt .)
    IF              reduce using rule 11 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 11 (declaration -> iteration_stmt .)
    CASE            reduce using rule 11 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 11 (declaration -> iteration_stmt .)
    FOR             reduce using rule 11 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 11 (declaration -> iteration_stmt .)
    DO              reduce using rule 11 (declaration -> iteration_stmt .)
    ID              reduce using rule 11 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 11 (declaration -> iteration_stmt .)
    CLOSETAG        reduce using rule 11 (declaration -> iteration_stmt .)


state 13

    (12) declaration -> typeclass .

    IDVAR           reduce using rule 12 (declaration -> typeclass .)
    TIMESTIMES      reduce using rule 12 (declaration -> typeclass .)
    AMPERSANT       reduce using rule 12 (declaration -> typeclass .)
    FUNCTION        reduce using rule 12 (declaration -> typeclass .)
    PRIVATE         reduce using rule 12 (declaration -> typeclass .)
    PUBLIC          reduce using rule 12 (declaration -> typeclass .)
    PROTECTED       reduce using rule 12 (declaration -> typeclass .)
    REQUIRE         reduce using rule 12 (declaration -> typeclass .)
    INCLUDE         reduce using rule 12 (declaration -> typeclass .)
    CLASS           reduce using rule 12 (declaration -> typeclass .)
    IF              reduce using rule 12 (declaration -> typeclass .)
    SWITCH          reduce using rule 12 (declaration -> typeclass .)
    CASE            reduce using rule 12 (declaration -> typeclass .)
    DEFAULT         reduce using rule 12 (declaration -> typeclass .)
    FOR             reduce using rule 12 (declaration -> typeclass .)
    WHILE           reduce using rule 12 (declaration -> typeclass .)
    DO              reduce using rule 12 (declaration -> typeclass .)
    ID              reduce using rule 12 (declaration -> typeclass .)
    ECHO            reduce using rule 12 (declaration -> typeclass .)
    CLOSETAG        reduce using rule 12 (declaration -> typeclass .)


state 14

    (37) var_declaration -> IDVAR . SEMI var_declaration
    (38) var_declaration -> IDVAR . SEMI
    (54) var_declaration -> IDVAR . IGUAL simple_expression SEMI
    (158) typeclass -> IDVAR . EQUAL NEW constructor SEMI
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET
    (63) IGUAL -> . EQUAL
    (64) IGUAL -> . MUL_EQUAL
    (65) IGUAL -> . DIV_EQUAL
    (66) IGUAL -> . CONCAT_EQUAL
    (67) IGUAL -> . MOD_EQUAL
    (68) IGUAL -> . PLUS_EQUAL
    (69) IGUAL -> . MINUS_EQUAL

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for MUL_EQUAL resolved as shift
  ! shift/reduce conflict for DIV_EQUAL resolved as shift
  ! shift/reduce conflict for CONCAT_EQUAL resolved as shift
  ! shift/reduce conflict for MOD_EQUAL resolved as shift
  ! shift/reduce conflict for PLUS_EQUAL resolved as shift
  ! shift/reduce conflict for MINUS_EQUAL resolved as shift
    SEMI            shift and go to state 41
    EQUAL           shift and go to state 43
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    LPAREN          reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

  ! EQUAL           [ reduce using rule 114 (var -> IDVAR .) ]
  ! MUL_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! DIV_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! CONCAT_EQUAL    [ reduce using rule 114 (var -> IDVAR .) ]
  ! MOD_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! PLUS_EQUAL      [ reduce using rule 114 (var -> IDVAR .) ]
  ! MINUS_EQUAL     [ reduce using rule 114 (var -> IDVAR .) ]

    IGUAL                          shift and go to state 42

state 15

    (39) var_declaration -> TIMESTIMES . IDVAR SEMI
    (40) var_declaration -> TIMESTIMES . IDVAR SEMI var_declaration

    IDVAR           shift and go to state 51


state 16

    (41) var_declaration -> assing_var . IGUAL NUM SEMI var_declaration
    (42) var_declaration -> assing_var . IGUAL NUM SEMI
    (43) var_declaration -> assing_var . IGUAL STRING SEMI var_declaration
    (44) var_declaration -> assing_var . IGUAL STRING SEMI
    (45) var_declaration -> assing_var . IGUAL boolean SEMI var_declaration
    (46) var_declaration -> assing_var . IGUAL boolean SEMI
    (47) var_declaration -> assing_var . IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> assing_var . IGUAL IDVAR SEMI
    (49) var_declaration -> assing_var . IGUAL array_declare SEMI
    (53) var_declaration -> assing_var . IGUAL simple_expression SEMI
    (73) fun_call -> assing_var . LPAREN params RPAREN
    (63) IGUAL -> . EQUAL
    (64) IGUAL -> . MUL_EQUAL
    (65) IGUAL -> . DIV_EQUAL
    (66) IGUAL -> . CONCAT_EQUAL
    (67) IGUAL -> . MOD_EQUAL
    (68) IGUAL -> . PLUS_EQUAL
    (69) IGUAL -> . MINUS_EQUAL

    LPAREN          shift and go to state 53
    EQUAL           shift and go to state 54
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

    IGUAL                          shift and go to state 52

state 17

    (50) var_declaration -> AMPERSANT . IDVAR SEMI var_declaration
    (51) var_declaration -> AMPERSANT . IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> AMPERSANT . IDVAR SEMI

    IDVAR           shift and go to state 55


state 18

    (55) var_declaration -> fun_call . SEMI

    SEMI            shift and go to state 56


state 19

    (70) fun_declaration -> FUNCTION . ID LPAREN params RPAREN
    (71) fun_declaration -> FUNCTION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 57


state 20

    (157) typeclass -> ID . IDVAR EQUAL NEW constructor SEMI
    (72) fun_call -> ID . LPAREN params RPAREN

    IDVAR           shift and go to state 58
    LPAREN          shift and go to state 59


state 21

    (34) area -> PRIVATE .

    CLASS           reduce using rule 34 (area -> PRIVATE .)
    FUNCTION        reduce using rule 34 (area -> PRIVATE .)
    IDVAR           reduce using rule 34 (area -> PRIVATE .)
    TIMESTIMES      reduce using rule 34 (area -> PRIVATE .)
    AMPERSANT       reduce using rule 34 (area -> PRIVATE .)
    ID              reduce using rule 34 (area -> PRIVATE .)


state 22

    (35) area -> PUBLIC .

    CLASS           reduce using rule 35 (area -> PUBLIC .)
    FUNCTION        reduce using rule 35 (area -> PUBLIC .)
    IDVAR           reduce using rule 35 (area -> PUBLIC .)
    TIMESTIMES      reduce using rule 35 (area -> PUBLIC .)
    AMPERSANT       reduce using rule 35 (area -> PUBLIC .)
    ID              reduce using rule 35 (area -> PUBLIC .)


state 23

    (36) area -> PROTECTED .

    CLASS           reduce using rule 36 (area -> PROTECTED .)
    FUNCTION        reduce using rule 36 (area -> PROTECTED .)
    IDVAR           reduce using rule 36 (area -> PROTECTED .)
    TIMESTIMES      reduce using rule 36 (area -> PROTECTED .)
    AMPERSANT       reduce using rule 36 (area -> PROTECTED .)
    ID              reduce using rule 36 (area -> PROTECTED .)


state 24

    (23) header_declaration -> REQUIRE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 60


state 25

    (24) header_declaration -> INCLUDE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 61


state 26

    (26) class_declaration -> CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 62


state 27

    (14) echo_stmt -> empty .

    ECHO            reduce using rule 14 (echo_stmt -> empty .)
    IDVAR           reduce using rule 14 (echo_stmt -> empty .)
    TIMESTIMES      reduce using rule 14 (echo_stmt -> empty .)
    AMPERSANT       reduce using rule 14 (echo_stmt -> empty .)
    FUNCTION        reduce using rule 14 (echo_stmt -> empty .)
    PRIVATE         reduce using rule 14 (echo_stmt -> empty .)
    PUBLIC          reduce using rule 14 (echo_stmt -> empty .)
    PROTECTED       reduce using rule 14 (echo_stmt -> empty .)
    REQUIRE         reduce using rule 14 (echo_stmt -> empty .)
    INCLUDE         reduce using rule 14 (echo_stmt -> empty .)
    CLASS           reduce using rule 14 (echo_stmt -> empty .)
    IF              reduce using rule 14 (echo_stmt -> empty .)
    SWITCH          reduce using rule 14 (echo_stmt -> empty .)
    CASE            reduce using rule 14 (echo_stmt -> empty .)
    DEFAULT         reduce using rule 14 (echo_stmt -> empty .)
    FOR             reduce using rule 14 (echo_stmt -> empty .)
    WHILE           reduce using rule 14 (echo_stmt -> empty .)
    DO              reduce using rule 14 (echo_stmt -> empty .)
    ID              reduce using rule 14 (echo_stmt -> empty .)
    CLOSETAG        reduce using rule 14 (echo_stmt -> empty .)
    BREAK           reduce using rule 14 (echo_stmt -> empty .)
    SEMI            reduce using rule 14 (echo_stmt -> empty .)
    LBLOCK          reduce using rule 14 (echo_stmt -> empty .)
    RETURN          reduce using rule 14 (echo_stmt -> empty .)
    LPAREN          reduce using rule 14 (echo_stmt -> empty .)
    NUM             reduce using rule 14 (echo_stmt -> empty .)
    STRING          reduce using rule 14 (echo_stmt -> empty .)
    TRUE            reduce using rule 14 (echo_stmt -> empty .)
    FALSE           reduce using rule 14 (echo_stmt -> empty .)
    RBLOCK          reduce using rule 14 (echo_stmt -> empty .)
    ELSE            reduce using rule 14 (echo_stmt -> empty .)
    ELSEIF          reduce using rule 14 (echo_stmt -> empty .)


state 28

    (94) selection_stmt -> IF . LPAREN expression RPAREN statement
    (95) selection_stmt -> IF . LPAREN expression RPAREN statement selection

    LPAREN          shift and go to state 63


state 29

    (98) selection_stmt -> SWITCH . LPAREN var RPAREN statement

    LPAREN          shift and go to state 64


state 30

    (60) assing_var -> var .
    (61) assing_var -> var . ARROW ID
    (62) assing_var -> var . DARROW ID

    LPAREN          reduce using rule 60 (assing_var -> var .)
    EQUAL           reduce using rule 60 (assing_var -> var .)
    MUL_EQUAL       reduce using rule 60 (assing_var -> var .)
    DIV_EQUAL       reduce using rule 60 (assing_var -> var .)
    CONCAT_EQUAL    reduce using rule 60 (assing_var -> var .)
    MOD_EQUAL       reduce using rule 60 (assing_var -> var .)
    PLUS_EQUAL      reduce using rule 60 (assing_var -> var .)
    MINUS_EQUAL     reduce using rule 60 (assing_var -> var .)
    ARROW           shift and go to state 65
    DARROW          shift and go to state 66


state 31

    (99) selection_stmt -> CASE . NUM COLON statement BREAK SEMI
    (100) selection_stmt -> CASE . STRING COLON statement BREAK SEMI

    NUM             shift and go to state 67
    STRING          shift and go to state 68


state 32

    (101) selection_stmt -> DEFAULT . COLON statement BREAK SEMI

    COLON           shift and go to state 69


state 33

    (102) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN statement

    LPAREN          shift and go to state 70


state 34

    (103) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 71


state 35

    (104) iteration_stmt -> DO . LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN

    LBLOCK          shift and go to state 72


state 36

    (1) program -> OPENTAG declaration_list CLOSETAG .

    $end            reduce using rule 1 (program -> OPENTAG declaration_list CLOSETAG .)


state 37

    (3) declaration_list -> declaration declaration_list .

    CLOSETAG        reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 38

    (6) declaration -> area fun_declaration .

    IDVAR           reduce using rule 6 (declaration -> area fun_declaration .)
    TIMESTIMES      reduce using rule 6 (declaration -> area fun_declaration .)
    AMPERSANT       reduce using rule 6 (declaration -> area fun_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> area fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> area fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> area fun_declaration .)
    PROTECTED       reduce using rule 6 (declaration -> area fun_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> area fun_declaration .)
    INCLUDE         reduce using rule 6 (declaration -> area fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> area fun_declaration .)
    IF              reduce using rule 6 (declaration -> area fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> area fun_declaration .)
    CASE            reduce using rule 6 (declaration -> area fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> area fun_declaration .)
    FOR             reduce using rule 6 (declaration -> area fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> area fun_declaration .)
    DO              reduce using rule 6 (declaration -> area fun_declaration .)
    ID              reduce using rule 6 (declaration -> area fun_declaration .)
    ECHO            reduce using rule 6 (declaration -> area fun_declaration .)
    CLOSETAG        reduce using rule 6 (declaration -> area fun_declaration .)


state 39

    (25) class_declaration -> area CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 73


state 40

    (13) echo_stmt -> echo_stmt ECHO . echo_params SEMI
    (15) echo_params -> . echo_param
    (16) echo_params -> . echo_param DOT echo_params
    (17) echo_param -> . STRING
    (18) echo_param -> . IDVAR
    (19) echo_param -> . NUM
    (20) echo_param -> . boolean
    (21) echo_param -> . fun_declaration
    (22) echo_param -> . fun_call
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 76
    IDVAR           shift and go to state 77
    NUM             shift and go to state 78
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    FUNCTION        shift and go to state 19
    ID              shift and go to state 84

    echo_params                    shift and go to state 74
    echo_param                     shift and go to state 75
    boolean                        shift and go to state 79
    fun_declaration                shift and go to state 80
    fun_call                       shift and go to state 81
    assing_var                     shift and go to state 85
    var                            shift and go to state 30

state 41

    (37) var_declaration -> IDVAR SEMI . var_declaration
    (38) var_declaration -> IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    TIMESTIMES      reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    AMPERSANT       reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FUNCTION        reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PRIVATE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PUBLIC          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PROTECTED       reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    REQUIRE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    INCLUDE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CLASS           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    IF              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    SWITCH          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CASE            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    DEFAULT         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FOR             reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    WHILE           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    DO              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    ID              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    ECHO            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CLOSETAG        reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    LPAREN          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    NUM             reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    STRING          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    TRUE            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FALSE           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    RBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    LBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    RETURN          reduce using rule 38 (var_declaration -> IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    var_declaration                shift and go to state 87
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 42

    (54) var_declaration -> IDVAR IGUAL . simple_expression SEMI
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    simple_expression              shift and go to state 89
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    fun_call                       shift and go to state 92
    factor                         shift and go to state 93
    assing_var                     shift and go to state 85
    var                            shift and go to state 95
    boolean                        shift and go to state 98

state 43

    (158) typeclass -> IDVAR EQUAL . NEW constructor SEMI
    (63) IGUAL -> EQUAL .

    NEW             shift and go to state 99
    ID              reduce using rule 63 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 63 (IGUAL -> EQUAL .)
    NUM             reduce using rule 63 (IGUAL -> EQUAL .)
    STRING          reduce using rule 63 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 63 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 63 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 63 (IGUAL -> EQUAL .)


state 44

    (115) var -> IDVAR LBRACKET . expression RBRACKET
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 101
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 45

    (64) IGUAL -> MUL_EQUAL .

    ID              reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    LPAREN          reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    NUM             reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    STRING          reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    IDVAR           reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    TRUE            reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    FALSE           reduce using rule 64 (IGUAL -> MUL_EQUAL .)
    ARRAY           reduce using rule 64 (IGUAL -> MUL_EQUAL .)


state 46

    (65) IGUAL -> DIV_EQUAL .

    ID              reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    LPAREN          reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    NUM             reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    STRING          reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    IDVAR           reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    TRUE            reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    FALSE           reduce using rule 65 (IGUAL -> DIV_EQUAL .)
    ARRAY           reduce using rule 65 (IGUAL -> DIV_EQUAL .)


state 47

    (66) IGUAL -> CONCAT_EQUAL .

    ID              reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    NUM             reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    STRING          reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    TRUE            reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    FALSE           reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)
    ARRAY           reduce using rule 66 (IGUAL -> CONCAT_EQUAL .)


state 48

    (67) IGUAL -> MOD_EQUAL .

    ID              reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    LPAREN          reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    NUM             reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    STRING          reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    IDVAR           reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    TRUE            reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    FALSE           reduce using rule 67 (IGUAL -> MOD_EQUAL .)
    ARRAY           reduce using rule 67 (IGUAL -> MOD_EQUAL .)


state 49

    (68) IGUAL -> PLUS_EQUAL .

    ID              reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    LPAREN          reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    NUM             reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    STRING          reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    IDVAR           reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    TRUE            reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    FALSE           reduce using rule 68 (IGUAL -> PLUS_EQUAL .)
    ARRAY           reduce using rule 68 (IGUAL -> PLUS_EQUAL .)


state 50

    (69) IGUAL -> MINUS_EQUAL .

    ID              reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    LPAREN          reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    NUM             reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    STRING          reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    IDVAR           reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    TRUE            reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    FALSE           reduce using rule 69 (IGUAL -> MINUS_EQUAL .)
    ARRAY           reduce using rule 69 (IGUAL -> MINUS_EQUAL .)


state 51

    (39) var_declaration -> TIMESTIMES IDVAR . SEMI
    (40) var_declaration -> TIMESTIMES IDVAR . SEMI var_declaration

    SEMI            shift and go to state 106


state 52

    (41) var_declaration -> assing_var IGUAL . NUM SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL . NUM SEMI
    (43) var_declaration -> assing_var IGUAL . STRING SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL . STRING SEMI
    (45) var_declaration -> assing_var IGUAL . boolean SEMI var_declaration
    (46) var_declaration -> assing_var IGUAL . boolean SEMI
    (47) var_declaration -> assing_var IGUAL . IDVAR SEMI var_declaration
    (48) var_declaration -> assing_var IGUAL . IDVAR SEMI
    (49) var_declaration -> assing_var IGUAL . array_declare SEMI
    (53) var_declaration -> assing_var IGUAL . simple_expression SEMI
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE
    (56) array_declare -> . ARRAY LPAREN array_values RPAREN
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    NUM             shift and go to state 107
    STRING          shift and go to state 108
    IDVAR           shift and go to state 110
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    ARRAY           shift and go to state 113
    ID              shift and go to state 84
    LPAREN          shift and go to state 94

    assing_var                     shift and go to state 85
    boolean                        shift and go to state 109
    array_declare                  shift and go to state 111
    simple_expression              shift and go to state 112
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    fun_call                       shift and go to state 92
    factor                         shift and go to state 93
    var                            shift and go to state 95

state 53

    (73) fun_call -> assing_var LPAREN . params RPAREN
    (74) params -> . param_list
    (75) params -> . empty
    (76) param_list -> . param
    (77) param_list -> . param COMMA param_list
    (161) empty -> .
    (78) param -> . IDVAR
    (79) param -> . IDVAR LBRACKET RBRACKET
    (80) param -> . term
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    RPAREN          reduce using rule 161 (empty -> .)
    IDVAR           shift and go to state 118
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    params                         shift and go to state 114
    param_list                     shift and go to state 115
    empty                          shift and go to state 116
    param                          shift and go to state 117
    term                           shift and go to state 119
    factor                         shift and go to state 93
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 54

    (63) IGUAL -> EQUAL .

    NUM             reduce using rule 63 (IGUAL -> EQUAL .)
    STRING          reduce using rule 63 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 63 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 63 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 63 (IGUAL -> EQUAL .)
    ARRAY           reduce using rule 63 (IGUAL -> EQUAL .)
    ID              reduce using rule 63 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 63 (IGUAL -> EQUAL .)


state 55

    (50) var_declaration -> AMPERSANT IDVAR . SEMI var_declaration
    (51) var_declaration -> AMPERSANT IDVAR . IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> AMPERSANT IDVAR . SEMI
    (63) IGUAL -> . EQUAL
    (64) IGUAL -> . MUL_EQUAL
    (65) IGUAL -> . DIV_EQUAL
    (66) IGUAL -> . CONCAT_EQUAL
    (67) IGUAL -> . MOD_EQUAL
    (68) IGUAL -> . PLUS_EQUAL
    (69) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 121
    EQUAL           shift and go to state 54
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

    IGUAL                          shift and go to state 122

state 56

    (55) var_declaration -> fun_call SEMI .

    IDVAR           reduce using rule 55 (var_declaration -> fun_call SEMI .)
    TIMESTIMES      reduce using rule 55 (var_declaration -> fun_call SEMI .)
    AMPERSANT       reduce using rule 55 (var_declaration -> fun_call SEMI .)
    FUNCTION        reduce using rule 55 (var_declaration -> fun_call SEMI .)
    PRIVATE         reduce using rule 55 (var_declaration -> fun_call SEMI .)
    PUBLIC          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    PROTECTED       reduce using rule 55 (var_declaration -> fun_call SEMI .)
    REQUIRE         reduce using rule 55 (var_declaration -> fun_call SEMI .)
    INCLUDE         reduce using rule 55 (var_declaration -> fun_call SEMI .)
    CLASS           reduce using rule 55 (var_declaration -> fun_call SEMI .)
    IF              reduce using rule 55 (var_declaration -> fun_call SEMI .)
    SWITCH          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    CASE            reduce using rule 55 (var_declaration -> fun_call SEMI .)
    DEFAULT         reduce using rule 55 (var_declaration -> fun_call SEMI .)
    FOR             reduce using rule 55 (var_declaration -> fun_call SEMI .)
    WHILE           reduce using rule 55 (var_declaration -> fun_call SEMI .)
    DO              reduce using rule 55 (var_declaration -> fun_call SEMI .)
    ID              reduce using rule 55 (var_declaration -> fun_call SEMI .)
    ECHO            reduce using rule 55 (var_declaration -> fun_call SEMI .)
    CLOSETAG        reduce using rule 55 (var_declaration -> fun_call SEMI .)
    LPAREN          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    NUM             reduce using rule 55 (var_declaration -> fun_call SEMI .)
    STRING          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    TRUE            reduce using rule 55 (var_declaration -> fun_call SEMI .)
    FALSE           reduce using rule 55 (var_declaration -> fun_call SEMI .)
    RBLOCK          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    LBLOCK          reduce using rule 55 (var_declaration -> fun_call SEMI .)
    RETURN          reduce using rule 55 (var_declaration -> fun_call SEMI .)


state 57

    (70) fun_declaration -> FUNCTION ID . LPAREN params RPAREN
    (71) fun_declaration -> FUNCTION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 123


state 58

    (157) typeclass -> ID IDVAR . EQUAL NEW constructor SEMI

    EQUAL           shift and go to state 124


state 59

    (72) fun_call -> ID LPAREN . params RPAREN
    (74) params -> . param_list
    (75) params -> . empty
    (76) param_list -> . param
    (77) param_list -> . param COMMA param_list
    (161) empty -> .
    (78) param -> . IDVAR
    (79) param -> . IDVAR LBRACKET RBRACKET
    (80) param -> . term
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    RPAREN          reduce using rule 161 (empty -> .)
    IDVAR           shift and go to state 118
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    params                         shift and go to state 125
    param_list                     shift and go to state 115
    empty                          shift and go to state 116
    param                          shift and go to state 117
    term                           shift and go to state 119
    factor                         shift and go to state 93
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 60

    (23) header_declaration -> REQUIRE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 126


state 61

    (24) header_declaration -> INCLUDE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 127


state 62

    (26) class_declaration -> CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 128


state 63

    (94) selection_stmt -> IF LPAREN . expression RPAREN statement
    (95) selection_stmt -> IF LPAREN . expression RPAREN statement selection
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 129
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 64

    (98) selection_stmt -> SWITCH LPAREN . var RPAREN statement
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 131

    var                            shift and go to state 130

state 65

    (61) assing_var -> var ARROW . ID

    ID              shift and go to state 132


state 66

    (62) assing_var -> var DARROW . ID

    ID              shift and go to state 133


state 67

    (99) selection_stmt -> CASE NUM . COLON statement BREAK SEMI

    COLON           shift and go to state 134


state 68

    (100) selection_stmt -> CASE STRING . COLON statement BREAK SEMI

    COLON           shift and go to state 135


state 69

    (101) selection_stmt -> DEFAULT COLON . statement BREAK SEMI
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    statement                      shift and go to state 136
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 70

    (102) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN statement
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 86
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    ID              shift and go to state 84

    var_declaration                shift and go to state 148
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 71

    (103) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 149
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 72

    (104) iteration_stmt -> DO LBLOCK . statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    statement                      shift and go to state 150
    expression                     shift and go to state 144
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 73

    (25) class_declaration -> area CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 151


state 74

    (13) echo_stmt -> echo_stmt ECHO echo_params . SEMI

    SEMI            shift and go to state 152


state 75

    (15) echo_params -> echo_param .
    (16) echo_params -> echo_param . DOT echo_params

    SEMI            reduce using rule 15 (echo_params -> echo_param .)
    DOT             shift and go to state 153


state 76

    (17) echo_param -> STRING .

    DOT             reduce using rule 17 (echo_param -> STRING .)
    SEMI            reduce using rule 17 (echo_param -> STRING .)


state 77

    (18) echo_param -> IDVAR .
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET

    DOT             reduce using rule 18 (echo_param -> IDVAR .)
    SEMI            reduce using rule 18 (echo_param -> IDVAR .)
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    LPAREN          reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44


state 78

    (19) echo_param -> NUM .

    DOT             reduce using rule 19 (echo_param -> NUM .)
    SEMI            reduce using rule 19 (echo_param -> NUM .)


state 79

    (20) echo_param -> boolean .

    DOT             reduce using rule 20 (echo_param -> boolean .)
    SEMI            reduce using rule 20 (echo_param -> boolean .)


state 80

    (21) echo_param -> fun_declaration .

    DOT             reduce using rule 21 (echo_param -> fun_declaration .)
    SEMI            reduce using rule 21 (echo_param -> fun_declaration .)


state 81

    (22) echo_param -> fun_call .

    DOT             reduce using rule 22 (echo_param -> fun_call .)
    SEMI            reduce using rule 22 (echo_param -> fun_call .)


state 82

    (155) boolean -> TRUE .

    DOT             reduce using rule 155 (boolean -> TRUE .)
    SEMI            reduce using rule 155 (boolean -> TRUE .)
    MINUSMINUS      reduce using rule 155 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 155 (boolean -> TRUE .)
    TIMES           reduce using rule 155 (boolean -> TRUE .)
    DIVIDE          reduce using rule 155 (boolean -> TRUE .)
    LESS            reduce using rule 155 (boolean -> TRUE .)
    LESSEQUAL       reduce using rule 155 (boolean -> TRUE .)
    GREATER         reduce using rule 155 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 155 (boolean -> TRUE .)
    DEQUAL          reduce using rule 155 (boolean -> TRUE .)
    DISTINT         reduce using rule 155 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 155 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 155 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 155 (boolean -> TRUE .)
    SR_EQUAL        reduce using rule 155 (boolean -> TRUE .)
    SL_EQUAL        reduce using rule 155 (boolean -> TRUE .)
    AND_EQUAL       reduce using rule 155 (boolean -> TRUE .)
    OR_EQUAL        reduce using rule 155 (boolean -> TRUE .)
    XOR_EQUAL       reduce using rule 155 (boolean -> TRUE .)
    CONCAT_EQUAL    reduce using rule 155 (boolean -> TRUE .)
    PLUS            reduce using rule 155 (boolean -> TRUE .)
    MINUS           reduce using rule 155 (boolean -> TRUE .)
    RBRACKET        reduce using rule 155 (boolean -> TRUE .)
    AND             reduce using rule 155 (boolean -> TRUE .)
    OR              reduce using rule 155 (boolean -> TRUE .)
    COMMA           reduce using rule 155 (boolean -> TRUE .)
    RPAREN          reduce using rule 155 (boolean -> TRUE .)
    DARROW          reduce using rule 155 (boolean -> TRUE .)


state 83

    (156) boolean -> FALSE .

    DOT             reduce using rule 156 (boolean -> FALSE .)
    SEMI            reduce using rule 156 (boolean -> FALSE .)
    MINUSMINUS      reduce using rule 156 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 156 (boolean -> FALSE .)
    TIMES           reduce using rule 156 (boolean -> FALSE .)
    DIVIDE          reduce using rule 156 (boolean -> FALSE .)
    LESS            reduce using rule 156 (boolean -> FALSE .)
    LESSEQUAL       reduce using rule 156 (boolean -> FALSE .)
    GREATER         reduce using rule 156 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 156 (boolean -> FALSE .)
    DEQUAL          reduce using rule 156 (boolean -> FALSE .)
    DISTINT         reduce using rule 156 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 156 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 156 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 156 (boolean -> FALSE .)
    SR_EQUAL        reduce using rule 156 (boolean -> FALSE .)
    SL_EQUAL        reduce using rule 156 (boolean -> FALSE .)
    AND_EQUAL       reduce using rule 156 (boolean -> FALSE .)
    OR_EQUAL        reduce using rule 156 (boolean -> FALSE .)
    XOR_EQUAL       reduce using rule 156 (boolean -> FALSE .)
    CONCAT_EQUAL    reduce using rule 156 (boolean -> FALSE .)
    PLUS            reduce using rule 156 (boolean -> FALSE .)
    MINUS           reduce using rule 156 (boolean -> FALSE .)
    RBRACKET        reduce using rule 156 (boolean -> FALSE .)
    AND             reduce using rule 156 (boolean -> FALSE .)
    OR              reduce using rule 156 (boolean -> FALSE .)
    COMMA           reduce using rule 156 (boolean -> FALSE .)
    RPAREN          reduce using rule 156 (boolean -> FALSE .)
    DARROW          reduce using rule 156 (boolean -> FALSE .)


state 84

    (72) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 59


state 85

    (73) fun_call -> assing_var . LPAREN params RPAREN

    LPAREN          shift and go to state 53


state 86

    (37) var_declaration -> IDVAR . SEMI var_declaration
    (38) var_declaration -> IDVAR . SEMI
    (54) var_declaration -> IDVAR . IGUAL simple_expression SEMI
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET
    (63) IGUAL -> . EQUAL
    (64) IGUAL -> . MUL_EQUAL
    (65) IGUAL -> . DIV_EQUAL
    (66) IGUAL -> . CONCAT_EQUAL
    (67) IGUAL -> . MOD_EQUAL
    (68) IGUAL -> . PLUS_EQUAL
    (69) IGUAL -> . MINUS_EQUAL

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for MUL_EQUAL resolved as shift
  ! shift/reduce conflict for DIV_EQUAL resolved as shift
  ! shift/reduce conflict for CONCAT_EQUAL resolved as shift
  ! shift/reduce conflict for MOD_EQUAL resolved as shift
  ! shift/reduce conflict for PLUS_EQUAL resolved as shift
  ! shift/reduce conflict for MINUS_EQUAL resolved as shift
    SEMI            shift and go to state 41
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    LPAREN          reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44
    EQUAL           shift and go to state 54
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

  ! EQUAL           [ reduce using rule 114 (var -> IDVAR .) ]
  ! MUL_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! DIV_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! CONCAT_EQUAL    [ reduce using rule 114 (var -> IDVAR .) ]
  ! MOD_EQUAL       [ reduce using rule 114 (var -> IDVAR .) ]
  ! PLUS_EQUAL      [ reduce using rule 114 (var -> IDVAR .) ]
  ! MINUS_EQUAL     [ reduce using rule 114 (var -> IDVAR .) ]

    IGUAL                          shift and go to state 42

state 87

    (37) var_declaration -> IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    IF              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CASE            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FOR             reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    DO              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    ID              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    NUM             reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    STRING          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)


state 88

    (149) factor -> IDVAR . LPAREN args RPAREN
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 154
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 114 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 114 (var -> IDVAR .)
    TIMES           reduce using rule 114 (var -> IDVAR .)
    DIVIDE          reduce using rule 114 (var -> IDVAR .)
    LESS            reduce using rule 114 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 114 (var -> IDVAR .)
    GREATER         reduce using rule 114 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 114 (var -> IDVAR .)
    DEQUAL          reduce using rule 114 (var -> IDVAR .)
    DISTINT         reduce using rule 114 (var -> IDVAR .)
    ISEQUAL         reduce using rule 114 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 114 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 114 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 114 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 114 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 114 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 114 (var -> IDVAR .)
    PLUS            reduce using rule 114 (var -> IDVAR .)
    MINUS           reduce using rule 114 (var -> IDVAR .)
    SEMI            reduce using rule 114 (var -> IDVAR .)
    RBRACKET        reduce using rule 114 (var -> IDVAR .)
    AND             reduce using rule 114 (var -> IDVAR .)
    OR              reduce using rule 114 (var -> IDVAR .)
    RPAREN          reduce using rule 114 (var -> IDVAR .)
    COMMA           reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44

  ! LPAREN          [ reduce using rule 114 (var -> IDVAR .) ]


state 89

    (54) var_declaration -> IDVAR IGUAL simple_expression . SEMI

    SEMI            shift and go to state 155


state 90

    (116) simple_expression -> additive_expression . relop additive_expression
    (117) simple_expression -> additive_expression .
    (133) additive_expression -> additive_expression . addop term
    (118) relop -> . LESS
    (119) relop -> . LESSEQUAL
    (120) relop -> . GREATER
    (121) relop -> . GREATEREQUAL
    (122) relop -> . DEQUAL
    (123) relop -> . DISTINT
    (124) relop -> . ISEQUAL
    (125) relop -> . IS_IDENTICAL
    (126) relop -> . IS_NOT_IDENTICAL
    (127) relop -> . SR_EQUAL
    (128) relop -> . SL_EQUAL
    (129) relop -> . AND_EQUAL
    (130) relop -> . OR_EQUAL
    (131) relop -> . XOR_EQUAL
    (132) relop -> . CONCAT_EQUAL
    (138) addop -> . PLUS
    (139) addop -> . MINUS

    SEMI            reduce using rule 117 (simple_expression -> additive_expression .)
    RBRACKET        reduce using rule 117 (simple_expression -> additive_expression .)
    AND             reduce using rule 117 (simple_expression -> additive_expression .)
    OR              reduce using rule 117 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 117 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 117 (simple_expression -> additive_expression .)
    LESS            shift and go to state 158
    LESSEQUAL       shift and go to state 159
    GREATER         shift and go to state 160
    GREATEREQUAL    shift and go to state 161
    DEQUAL          shift and go to state 162
    DISTINT         shift and go to state 163
    ISEQUAL         shift and go to state 164
    IS_IDENTICAL    shift and go to state 165
    IS_NOT_IDENTICAL shift and go to state 166
    SR_EQUAL        shift and go to state 167
    SL_EQUAL        shift and go to state 168
    AND_EQUAL       shift and go to state 169
    OR_EQUAL        shift and go to state 170
    XOR_EQUAL       shift and go to state 171
    CONCAT_EQUAL    shift and go to state 172
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174

    relop                          shift and go to state 156
    addop                          shift and go to state 157

state 91

    (134) additive_expression -> term .
    (135) additive_expression -> term . MINUSMINUS
    (136) additive_expression -> term . PLUSPLUS
    (140) term -> term . mulop factor
    (142) mulop -> . TIMES
    (143) mulop -> . DIVIDE

    LESS            reduce using rule 134 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 134 (additive_expression -> term .)
    GREATER         reduce using rule 134 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 134 (additive_expression -> term .)
    DEQUAL          reduce using rule 134 (additive_expression -> term .)
    DISTINT         reduce using rule 134 (additive_expression -> term .)
    ISEQUAL         reduce using rule 134 (additive_expression -> term .)
    IS_IDENTICAL    reduce using rule 134 (additive_expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 134 (additive_expression -> term .)
    SR_EQUAL        reduce using rule 134 (additive_expression -> term .)
    SL_EQUAL        reduce using rule 134 (additive_expression -> term .)
    AND_EQUAL       reduce using rule 134 (additive_expression -> term .)
    OR_EQUAL        reduce using rule 134 (additive_expression -> term .)
    XOR_EQUAL       reduce using rule 134 (additive_expression -> term .)
    CONCAT_EQUAL    reduce using rule 134 (additive_expression -> term .)
    PLUS            reduce using rule 134 (additive_expression -> term .)
    MINUS           reduce using rule 134 (additive_expression -> term .)
    SEMI            reduce using rule 134 (additive_expression -> term .)
    RBRACKET        reduce using rule 134 (additive_expression -> term .)
    AND             reduce using rule 134 (additive_expression -> term .)
    OR              reduce using rule 134 (additive_expression -> term .)
    RPAREN          reduce using rule 134 (additive_expression -> term .)
    COMMA           reduce using rule 134 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 175
    PLUSPLUS        shift and go to state 176
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179

    mulop                          shift and go to state 177

state 92

    (137) additive_expression -> fun_call .

    LESS            reduce using rule 137 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    GREATER         reduce using rule 137 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 137 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 137 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 137 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 137 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 137 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 137 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 137 (additive_expression -> fun_call .)
    PLUS            reduce using rule 137 (additive_expression -> fun_call .)
    MINUS           reduce using rule 137 (additive_expression -> fun_call .)
    SEMI            reduce using rule 137 (additive_expression -> fun_call .)
    RBRACKET        reduce using rule 137 (additive_expression -> fun_call .)
    AND             reduce using rule 137 (additive_expression -> fun_call .)
    OR              reduce using rule 137 (additive_expression -> fun_call .)
    RPAREN          reduce using rule 137 (additive_expression -> fun_call .)
    COMMA           reduce using rule 137 (additive_expression -> fun_call .)


state 93

    (141) term -> factor .

    MINUSMINUS      reduce using rule 141 (term -> factor .)
    PLUSPLUS        reduce using rule 141 (term -> factor .)
    TIMES           reduce using rule 141 (term -> factor .)
    DIVIDE          reduce using rule 141 (term -> factor .)
    LESS            reduce using rule 141 (term -> factor .)
    LESSEQUAL       reduce using rule 141 (term -> factor .)
    GREATER         reduce using rule 141 (term -> factor .)
    GREATEREQUAL    reduce using rule 141 (term -> factor .)
    DEQUAL          reduce using rule 141 (term -> factor .)
    DISTINT         reduce using rule 141 (term -> factor .)
    ISEQUAL         reduce using rule 141 (term -> factor .)
    IS_IDENTICAL    reduce using rule 141 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 141 (term -> factor .)
    SR_EQUAL        reduce using rule 141 (term -> factor .)
    SL_EQUAL        reduce using rule 141 (term -> factor .)
    AND_EQUAL       reduce using rule 141 (term -> factor .)
    OR_EQUAL        reduce using rule 141 (term -> factor .)
    XOR_EQUAL       reduce using rule 141 (term -> factor .)
    CONCAT_EQUAL    reduce using rule 141 (term -> factor .)
    PLUS            reduce using rule 141 (term -> factor .)
    MINUS           reduce using rule 141 (term -> factor .)
    SEMI            reduce using rule 141 (term -> factor .)
    RBRACKET        reduce using rule 141 (term -> factor .)
    AND             reduce using rule 141 (term -> factor .)
    OR              reduce using rule 141 (term -> factor .)
    COMMA           reduce using rule 141 (term -> factor .)
    RPAREN          reduce using rule 141 (term -> factor .)


state 94

    (144) factor -> LPAREN . expression RPAREN
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 180
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 95

    (145) factor -> var .
    (60) assing_var -> var .
    (61) assing_var -> var . ARROW ID
    (62) assing_var -> var . DARROW ID

    MINUSMINUS      reduce using rule 145 (factor -> var .)
    PLUSPLUS        reduce using rule 145 (factor -> var .)
    TIMES           reduce using rule 145 (factor -> var .)
    DIVIDE          reduce using rule 145 (factor -> var .)
    LESS            reduce using rule 145 (factor -> var .)
    LESSEQUAL       reduce using rule 145 (factor -> var .)
    GREATER         reduce using rule 145 (factor -> var .)
    GREATEREQUAL    reduce using rule 145 (factor -> var .)
    DEQUAL          reduce using rule 145 (factor -> var .)
    DISTINT         reduce using rule 145 (factor -> var .)
    ISEQUAL         reduce using rule 145 (factor -> var .)
    IS_IDENTICAL    reduce using rule 145 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 145 (factor -> var .)
    SR_EQUAL        reduce using rule 145 (factor -> var .)
    SL_EQUAL        reduce using rule 145 (factor -> var .)
    AND_EQUAL       reduce using rule 145 (factor -> var .)
    OR_EQUAL        reduce using rule 145 (factor -> var .)
    XOR_EQUAL       reduce using rule 145 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 145 (factor -> var .)
    PLUS            reduce using rule 145 (factor -> var .)
    MINUS           reduce using rule 145 (factor -> var .)
    SEMI            reduce using rule 145 (factor -> var .)
    RBRACKET        reduce using rule 145 (factor -> var .)
    AND             reduce using rule 145 (factor -> var .)
    OR              reduce using rule 145 (factor -> var .)
    RPAREN          reduce using rule 145 (factor -> var .)
    COMMA           reduce using rule 145 (factor -> var .)
    LPAREN          reduce using rule 60 (assing_var -> var .)
    ARROW           shift and go to state 65
    DARROW          shift and go to state 66


state 96

    (146) factor -> NUM .

    MINUSMINUS      reduce using rule 146 (factor -> NUM .)
    PLUSPLUS        reduce using rule 146 (factor -> NUM .)
    TIMES           reduce using rule 146 (factor -> NUM .)
    DIVIDE          reduce using rule 146 (factor -> NUM .)
    LESS            reduce using rule 146 (factor -> NUM .)
    LESSEQUAL       reduce using rule 146 (factor -> NUM .)
    GREATER         reduce using rule 146 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 146 (factor -> NUM .)
    DEQUAL          reduce using rule 146 (factor -> NUM .)
    DISTINT         reduce using rule 146 (factor -> NUM .)
    ISEQUAL         reduce using rule 146 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 146 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 146 (factor -> NUM .)
    SR_EQUAL        reduce using rule 146 (factor -> NUM .)
    SL_EQUAL        reduce using rule 146 (factor -> NUM .)
    AND_EQUAL       reduce using rule 146 (factor -> NUM .)
    OR_EQUAL        reduce using rule 146 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 146 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 146 (factor -> NUM .)
    PLUS            reduce using rule 146 (factor -> NUM .)
    MINUS           reduce using rule 146 (factor -> NUM .)
    SEMI            reduce using rule 146 (factor -> NUM .)
    RBRACKET        reduce using rule 146 (factor -> NUM .)
    AND             reduce using rule 146 (factor -> NUM .)
    OR              reduce using rule 146 (factor -> NUM .)
    COMMA           reduce using rule 146 (factor -> NUM .)
    RPAREN          reduce using rule 146 (factor -> NUM .)
    DARROW          reduce using rule 146 (factor -> NUM .)


state 97

    (147) factor -> STRING .

    MINUSMINUS      reduce using rule 147 (factor -> STRING .)
    PLUSPLUS        reduce using rule 147 (factor -> STRING .)
    TIMES           reduce using rule 147 (factor -> STRING .)
    DIVIDE          reduce using rule 147 (factor -> STRING .)
    LESS            reduce using rule 147 (factor -> STRING .)
    LESSEQUAL       reduce using rule 147 (factor -> STRING .)
    GREATER         reduce using rule 147 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 147 (factor -> STRING .)
    DEQUAL          reduce using rule 147 (factor -> STRING .)
    DISTINT         reduce using rule 147 (factor -> STRING .)
    ISEQUAL         reduce using rule 147 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 147 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 147 (factor -> STRING .)
    SR_EQUAL        reduce using rule 147 (factor -> STRING .)
    SL_EQUAL        reduce using rule 147 (factor -> STRING .)
    AND_EQUAL       reduce using rule 147 (factor -> STRING .)
    OR_EQUAL        reduce using rule 147 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 147 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 147 (factor -> STRING .)
    PLUS            reduce using rule 147 (factor -> STRING .)
    MINUS           reduce using rule 147 (factor -> STRING .)
    SEMI            reduce using rule 147 (factor -> STRING .)
    RBRACKET        reduce using rule 147 (factor -> STRING .)
    AND             reduce using rule 147 (factor -> STRING .)
    OR              reduce using rule 147 (factor -> STRING .)
    COMMA           reduce using rule 147 (factor -> STRING .)
    RPAREN          reduce using rule 147 (factor -> STRING .)
    DARROW          reduce using rule 147 (factor -> STRING .)


state 98

    (148) factor -> boolean .

    MINUSMINUS      reduce using rule 148 (factor -> boolean .)
    PLUSPLUS        reduce using rule 148 (factor -> boolean .)
    TIMES           reduce using rule 148 (factor -> boolean .)
    DIVIDE          reduce using rule 148 (factor -> boolean .)
    LESS            reduce using rule 148 (factor -> boolean .)
    LESSEQUAL       reduce using rule 148 (factor -> boolean .)
    GREATER         reduce using rule 148 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 148 (factor -> boolean .)
    DEQUAL          reduce using rule 148 (factor -> boolean .)
    DISTINT         reduce using rule 148 (factor -> boolean .)
    ISEQUAL         reduce using rule 148 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 148 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 148 (factor -> boolean .)
    SR_EQUAL        reduce using rule 148 (factor -> boolean .)
    SL_EQUAL        reduce using rule 148 (factor -> boolean .)
    AND_EQUAL       reduce using rule 148 (factor -> boolean .)
    OR_EQUAL        reduce using rule 148 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 148 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 148 (factor -> boolean .)
    PLUS            reduce using rule 148 (factor -> boolean .)
    MINUS           reduce using rule 148 (factor -> boolean .)
    SEMI            reduce using rule 148 (factor -> boolean .)
    RBRACKET        reduce using rule 148 (factor -> boolean .)
    AND             reduce using rule 148 (factor -> boolean .)
    OR              reduce using rule 148 (factor -> boolean .)
    COMMA           reduce using rule 148 (factor -> boolean .)
    RPAREN          reduce using rule 148 (factor -> boolean .)
    DARROW          reduce using rule 148 (factor -> boolean .)


state 99

    (158) typeclass -> IDVAR EQUAL NEW . constructor SEMI
    (159) constructor -> . ID LPAREN RPAREN
    (160) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 182

    constructor                    shift and go to state 181

state 100

    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET
    (149) factor -> IDVAR . LPAREN args RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    EQUAL           reduce using rule 114 (var -> IDVAR .)
    RBRACKET        reduce using rule 114 (var -> IDVAR .)
    AND             reduce using rule 114 (var -> IDVAR .)
    OR              reduce using rule 114 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 114 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 114 (var -> IDVAR .)
    TIMES           reduce using rule 114 (var -> IDVAR .)
    DIVIDE          reduce using rule 114 (var -> IDVAR .)
    LESS            reduce using rule 114 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 114 (var -> IDVAR .)
    GREATER         reduce using rule 114 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 114 (var -> IDVAR .)
    DEQUAL          reduce using rule 114 (var -> IDVAR .)
    DISTINT         reduce using rule 114 (var -> IDVAR .)
    ISEQUAL         reduce using rule 114 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 114 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 114 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 114 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 114 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 114 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 114 (var -> IDVAR .)
    PLUS            reduce using rule 114 (var -> IDVAR .)
    MINUS           reduce using rule 114 (var -> IDVAR .)
    RPAREN          reduce using rule 114 (var -> IDVAR .)
    SEMI            reduce using rule 114 (var -> IDVAR .)
    COMMA           reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44
    LPAREN          shift and go to state 154

  ! LPAREN          [ reduce using rule 114 (var -> IDVAR .) ]


state 101

    (115) var -> IDVAR LBRACKET expression . RBRACKET
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RBRACKET        shift and go to state 183
    AND             shift and go to state 184
    OR              shift and go to state 185


state 102

    (107) expression -> assing_var . EQUAL expression
    (109) expression -> assing_var . EQUAL AMPERSANT IDVAR
    (112) expression -> assing_var .
    (73) fun_call -> assing_var . LPAREN params RPAREN

    EQUAL           shift and go to state 186
    RBRACKET        reduce using rule 112 (expression -> assing_var .)
    AND             reduce using rule 112 (expression -> assing_var .)
    OR              reduce using rule 112 (expression -> assing_var .)
    RPAREN          reduce using rule 112 (expression -> assing_var .)
    SEMI            reduce using rule 112 (expression -> assing_var .)
    COMMA           reduce using rule 112 (expression -> assing_var .)
    LPAREN          shift and go to state 53


state 103

    (108) expression -> simple_expression .

    RBRACKET        reduce using rule 108 (expression -> simple_expression .)
    AND             reduce using rule 108 (expression -> simple_expression .)
    OR              reduce using rule 108 (expression -> simple_expression .)
    RPAREN          reduce using rule 108 (expression -> simple_expression .)
    SEMI            reduce using rule 108 (expression -> simple_expression .)
    COMMA           reduce using rule 108 (expression -> simple_expression .)


state 104

    (113) expression -> fun_call .
    (137) additive_expression -> fun_call .

  ! reduce/reduce conflict for RBRACKET resolved using rule 113 (expression -> fun_call .)
  ! reduce/reduce conflict for AND resolved using rule 113 (expression -> fun_call .)
  ! reduce/reduce conflict for OR resolved using rule 113 (expression -> fun_call .)
  ! reduce/reduce conflict for RPAREN resolved using rule 113 (expression -> fun_call .)
  ! reduce/reduce conflict for SEMI resolved using rule 113 (expression -> fun_call .)
  ! reduce/reduce conflict for COMMA resolved using rule 113 (expression -> fun_call .)
    RBRACKET        reduce using rule 113 (expression -> fun_call .)
    AND             reduce using rule 113 (expression -> fun_call .)
    OR              reduce using rule 113 (expression -> fun_call .)
    RPAREN          reduce using rule 113 (expression -> fun_call .)
    SEMI            reduce using rule 113 (expression -> fun_call .)
    COMMA           reduce using rule 113 (expression -> fun_call .)
    LESS            reduce using rule 137 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    GREATER         reduce using rule 137 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 137 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 137 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 137 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 137 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 137 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 137 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 137 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 137 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 137 (additive_expression -> fun_call .)
    PLUS            reduce using rule 137 (additive_expression -> fun_call .)
    MINUS           reduce using rule 137 (additive_expression -> fun_call .)

  ! RBRACKET        [ reduce using rule 137 (additive_expression -> fun_call .) ]
  ! AND             [ reduce using rule 137 (additive_expression -> fun_call .) ]
  ! OR              [ reduce using rule 137 (additive_expression -> fun_call .) ]
  ! RPAREN          [ reduce using rule 137 (additive_expression -> fun_call .) ]
  ! SEMI            [ reduce using rule 137 (additive_expression -> fun_call .) ]
  ! COMMA           [ reduce using rule 137 (additive_expression -> fun_call .) ]


state 105

    (60) assing_var -> var .
    (61) assing_var -> var . ARROW ID
    (62) assing_var -> var . DARROW ID
    (145) factor -> var .

  ! reduce/reduce conflict for RBRACKET resolved using rule 60 (assing_var -> var .)
  ! reduce/reduce conflict for AND resolved using rule 60 (assing_var -> var .)
  ! reduce/reduce conflict for OR resolved using rule 60 (assing_var -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (assing_var -> var .)
  ! reduce/reduce conflict for SEMI resolved using rule 60 (assing_var -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 60 (assing_var -> var .)
    EQUAL           reduce using rule 60 (assing_var -> var .)
    LPAREN          reduce using rule 60 (assing_var -> var .)
    RBRACKET        reduce using rule 60 (assing_var -> var .)
    AND             reduce using rule 60 (assing_var -> var .)
    OR              reduce using rule 60 (assing_var -> var .)
    RPAREN          reduce using rule 60 (assing_var -> var .)
    SEMI            reduce using rule 60 (assing_var -> var .)
    COMMA           reduce using rule 60 (assing_var -> var .)
    ARROW           shift and go to state 65
    DARROW          shift and go to state 66
    MINUSMINUS      reduce using rule 145 (factor -> var .)
    PLUSPLUS        reduce using rule 145 (factor -> var .)
    TIMES           reduce using rule 145 (factor -> var .)
    DIVIDE          reduce using rule 145 (factor -> var .)
    LESS            reduce using rule 145 (factor -> var .)
    LESSEQUAL       reduce using rule 145 (factor -> var .)
    GREATER         reduce using rule 145 (factor -> var .)
    GREATEREQUAL    reduce using rule 145 (factor -> var .)
    DEQUAL          reduce using rule 145 (factor -> var .)
    DISTINT         reduce using rule 145 (factor -> var .)
    ISEQUAL         reduce using rule 145 (factor -> var .)
    IS_IDENTICAL    reduce using rule 145 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 145 (factor -> var .)
    SR_EQUAL        reduce using rule 145 (factor -> var .)
    SL_EQUAL        reduce using rule 145 (factor -> var .)
    AND_EQUAL       reduce using rule 145 (factor -> var .)
    OR_EQUAL        reduce using rule 145 (factor -> var .)
    XOR_EQUAL       reduce using rule 145 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 145 (factor -> var .)
    PLUS            reduce using rule 145 (factor -> var .)
    MINUS           reduce using rule 145 (factor -> var .)

  ! RBRACKET        [ reduce using rule 145 (factor -> var .) ]
  ! AND             [ reduce using rule 145 (factor -> var .) ]
  ! OR              [ reduce using rule 145 (factor -> var .) ]
  ! RPAREN          [ reduce using rule 145 (factor -> var .) ]
  ! SEMI            [ reduce using rule 145 (factor -> var .) ]
  ! COMMA           [ reduce using rule 145 (factor -> var .) ]


state 106

    (39) var_declaration -> TIMESTIMES IDVAR SEMI .
    (40) var_declaration -> TIMESTIMES IDVAR SEMI . var_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TIMESTIMES      reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    AMPERSANT       reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FUNCTION        reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRIVATE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PUBLIC          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PROTECTED       reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    REQUIRE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    INCLUDE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLASS           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    IF              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SWITCH          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CASE            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DEFAULT         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FOR             reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    WHILE           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DO              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ID              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ECHO            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLOSETAG        reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LPAREN          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    NUM             reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    STRING          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TRUE            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FALSE           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RBLOCK          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LBLOCK          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RETURN          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    var_declaration                shift and go to state 187
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 107

    (41) var_declaration -> assing_var IGUAL NUM . SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL NUM . SEMI
    (146) factor -> NUM .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 188
    MINUSMINUS      reduce using rule 146 (factor -> NUM .)
    PLUSPLUS        reduce using rule 146 (factor -> NUM .)
    TIMES           reduce using rule 146 (factor -> NUM .)
    DIVIDE          reduce using rule 146 (factor -> NUM .)
    LESS            reduce using rule 146 (factor -> NUM .)
    LESSEQUAL       reduce using rule 146 (factor -> NUM .)
    GREATER         reduce using rule 146 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 146 (factor -> NUM .)
    DEQUAL          reduce using rule 146 (factor -> NUM .)
    DISTINT         reduce using rule 146 (factor -> NUM .)
    ISEQUAL         reduce using rule 146 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 146 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 146 (factor -> NUM .)
    SR_EQUAL        reduce using rule 146 (factor -> NUM .)
    SL_EQUAL        reduce using rule 146 (factor -> NUM .)
    AND_EQUAL       reduce using rule 146 (factor -> NUM .)
    OR_EQUAL        reduce using rule 146 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 146 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 146 (factor -> NUM .)
    PLUS            reduce using rule 146 (factor -> NUM .)
    MINUS           reduce using rule 146 (factor -> NUM .)

  ! SEMI            [ reduce using rule 146 (factor -> NUM .) ]


state 108

    (43) var_declaration -> assing_var IGUAL STRING . SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL STRING . SEMI
    (147) factor -> STRING .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 189
    MINUSMINUS      reduce using rule 147 (factor -> STRING .)
    PLUSPLUS        reduce using rule 147 (factor -> STRING .)
    TIMES           reduce using rule 147 (factor -> STRING .)
    DIVIDE          reduce using rule 147 (factor -> STRING .)
    LESS            reduce using rule 147 (factor -> STRING .)
    LESSEQUAL       reduce using rule 147 (factor -> STRING .)
    GREATER         reduce using rule 147 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 147 (factor -> STRING .)
    DEQUAL          reduce using rule 147 (factor -> STRING .)
    DISTINT         reduce using rule 147 (factor -> STRING .)
    ISEQUAL         reduce using rule 147 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 147 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 147 (factor -> STRING .)
    SR_EQUAL        reduce using rule 147 (factor -> STRING .)
    SL_EQUAL        reduce using rule 147 (factor -> STRING .)
    AND_EQUAL       reduce using rule 147 (factor -> STRING .)
    OR_EQUAL        reduce using rule 147 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 147 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 147 (factor -> STRING .)
    PLUS            reduce using rule 147 (factor -> STRING .)
    MINUS           reduce using rule 147 (factor -> STRING .)

  ! SEMI            [ reduce using rule 147 (factor -> STRING .) ]


state 109

    (45) var_declaration -> assing_var IGUAL boolean . SEMI var_declaration
    (46) var_declaration -> assing_var IGUAL boolean . SEMI
    (148) factor -> boolean .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 190
    MINUSMINUS      reduce using rule 148 (factor -> boolean .)
    PLUSPLUS        reduce using rule 148 (factor -> boolean .)
    TIMES           reduce using rule 148 (factor -> boolean .)
    DIVIDE          reduce using rule 148 (factor -> boolean .)
    LESS            reduce using rule 148 (factor -> boolean .)
    LESSEQUAL       reduce using rule 148 (factor -> boolean .)
    GREATER         reduce using rule 148 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 148 (factor -> boolean .)
    DEQUAL          reduce using rule 148 (factor -> boolean .)
    DISTINT         reduce using rule 148 (factor -> boolean .)
    ISEQUAL         reduce using rule 148 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 148 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 148 (factor -> boolean .)
    SR_EQUAL        reduce using rule 148 (factor -> boolean .)
    SL_EQUAL        reduce using rule 148 (factor -> boolean .)
    AND_EQUAL       reduce using rule 148 (factor -> boolean .)
    OR_EQUAL        reduce using rule 148 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 148 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 148 (factor -> boolean .)
    PLUS            reduce using rule 148 (factor -> boolean .)
    MINUS           reduce using rule 148 (factor -> boolean .)

  ! SEMI            [ reduce using rule 148 (factor -> boolean .) ]


state 110

    (47) var_declaration -> assing_var IGUAL IDVAR . SEMI var_declaration
    (48) var_declaration -> assing_var IGUAL IDVAR . SEMI
    (149) factor -> IDVAR . LPAREN args RPAREN
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            shift and go to state 191
    LPAREN          shift and go to state 154
    ARROW           reduce using rule 114 (var -> IDVAR .)
    DARROW          reduce using rule 114 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 114 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 114 (var -> IDVAR .)
    TIMES           reduce using rule 114 (var -> IDVAR .)
    DIVIDE          reduce using rule 114 (var -> IDVAR .)
    LESS            reduce using rule 114 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 114 (var -> IDVAR .)
    GREATER         reduce using rule 114 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 114 (var -> IDVAR .)
    DEQUAL          reduce using rule 114 (var -> IDVAR .)
    DISTINT         reduce using rule 114 (var -> IDVAR .)
    ISEQUAL         reduce using rule 114 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 114 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 114 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 114 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 114 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 114 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 114 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 114 (var -> IDVAR .)
    PLUS            reduce using rule 114 (var -> IDVAR .)
    MINUS           reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44

  ! SEMI            [ reduce using rule 114 (var -> IDVAR .) ]
  ! LPAREN          [ reduce using rule 114 (var -> IDVAR .) ]


state 111

    (49) var_declaration -> assing_var IGUAL array_declare . SEMI

    SEMI            shift and go to state 192


state 112

    (53) var_declaration -> assing_var IGUAL simple_expression . SEMI

    SEMI            shift and go to state 193


state 113

    (56) array_declare -> ARRAY . LPAREN array_values RPAREN

    LPAREN          shift and go to state 194


state 114

    (73) fun_call -> assing_var LPAREN params . RPAREN

    RPAREN          shift and go to state 195


state 115

    (74) params -> param_list .

    RPAREN          reduce using rule 74 (params -> param_list .)


state 116

    (75) params -> empty .

    RPAREN          reduce using rule 75 (params -> empty .)


state 117

    (76) param_list -> param .
    (77) param_list -> param . COMMA param_list

    RPAREN          reduce using rule 76 (param_list -> param .)
    COMMA           shift and go to state 196


state 118

    (78) param -> IDVAR .
    (79) param -> IDVAR . LBRACKET RBRACKET
    (149) factor -> IDVAR . LPAREN args RPAREN
    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 78 (param -> IDVAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 78 (param -> IDVAR .)
    COMMA           reduce using rule 78 (param -> IDVAR .)
    RPAREN          reduce using rule 78 (param -> IDVAR .)
    LBRACKET        shift and go to state 197
    LPAREN          shift and go to state 154
    TIMES           reduce using rule 114 (var -> IDVAR .)
    DIVIDE          reduce using rule 114 (var -> IDVAR .)

  ! COMMA           [ reduce using rule 114 (var -> IDVAR .) ]
  ! RPAREN          [ reduce using rule 114 (var -> IDVAR .) ]


state 119

    (80) param -> term .
    (140) term -> term . mulop factor
    (142) mulop -> . TIMES
    (143) mulop -> . DIVIDE

    COMMA           reduce using rule 80 (param -> term .)
    RPAREN          reduce using rule 80 (param -> term .)
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179

    mulop                          shift and go to state 177

state 120

    (145) factor -> var .

    TIMES           reduce using rule 145 (factor -> var .)
    DIVIDE          reduce using rule 145 (factor -> var .)
    COMMA           reduce using rule 145 (factor -> var .)
    RPAREN          reduce using rule 145 (factor -> var .)
    LESS            reduce using rule 145 (factor -> var .)
    LESSEQUAL       reduce using rule 145 (factor -> var .)
    GREATER         reduce using rule 145 (factor -> var .)
    GREATEREQUAL    reduce using rule 145 (factor -> var .)
    DEQUAL          reduce using rule 145 (factor -> var .)
    DISTINT         reduce using rule 145 (factor -> var .)
    ISEQUAL         reduce using rule 145 (factor -> var .)
    IS_IDENTICAL    reduce using rule 145 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 145 (factor -> var .)
    SR_EQUAL        reduce using rule 145 (factor -> var .)
    SL_EQUAL        reduce using rule 145 (factor -> var .)
    AND_EQUAL       reduce using rule 145 (factor -> var .)
    OR_EQUAL        reduce using rule 145 (factor -> var .)
    XOR_EQUAL       reduce using rule 145 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 145 (factor -> var .)
    PLUS            reduce using rule 145 (factor -> var .)
    MINUS           reduce using rule 145 (factor -> var .)
    SEMI            reduce using rule 145 (factor -> var .)
    RBRACKET        reduce using rule 145 (factor -> var .)
    AND             reduce using rule 145 (factor -> var .)
    OR              reduce using rule 145 (factor -> var .)
    MINUSMINUS      reduce using rule 145 (factor -> var .)
    PLUSPLUS        reduce using rule 145 (factor -> var .)
    DARROW          reduce using rule 145 (factor -> var .)


state 121

    (50) var_declaration -> AMPERSANT IDVAR SEMI . var_declaration
    (52) var_declaration -> AMPERSANT IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TIMESTIMES      reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    AMPERSANT       reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FUNCTION        reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRIVATE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PUBLIC          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PROTECTED       reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    REQUIRE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    INCLUDE         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLASS           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    IF              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SWITCH          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CASE            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DEFAULT         reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FOR             reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    WHILE           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DO              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ID              reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ECHO            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLOSETAG        reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LPAREN          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    NUM             reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    STRING          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TRUE            reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FALSE           reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RBLOCK          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LBLOCK          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RETURN          reduce using rule 52 (var_declaration -> AMPERSANT IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    var_declaration                shift and go to state 198
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 122

    (51) var_declaration -> AMPERSANT IDVAR IGUAL . IDVAR SEMI selection_stmt

    IDVAR           shift and go to state 199


state 123

    (70) fun_declaration -> FUNCTION ID LPAREN . params RPAREN
    (71) fun_declaration -> FUNCTION ID LPAREN . params RPAREN compount_stmt
    (74) params -> . param_list
    (75) params -> . empty
    (76) param_list -> . param
    (77) param_list -> . param COMMA param_list
    (161) empty -> .
    (78) param -> . IDVAR
    (79) param -> . IDVAR LBRACKET RBRACKET
    (80) param -> . term
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    RPAREN          reduce using rule 161 (empty -> .)
    IDVAR           shift and go to state 118
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    params                         shift and go to state 200
    param_list                     shift and go to state 115
    empty                          shift and go to state 116
    param                          shift and go to state 117
    term                           shift and go to state 119
    factor                         shift and go to state 93
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 124

    (157) typeclass -> ID IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 201


state 125

    (72) fun_call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 202


state 126

    (23) header_declaration -> REQUIRE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 203


state 127

    (24) header_declaration -> INCLUDE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 204


state 128

    (26) class_declaration -> CLASS ID LBLOCK . attributes RBLOCK
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attributes                     shift and go to state 205
    attribute                      shift and go to state 206
    area                           shift and go to state 207
    fun_declaration                shift and go to state 208

state 129

    (94) selection_stmt -> IF LPAREN expression . RPAREN statement
    (95) selection_stmt -> IF LPAREN expression . RPAREN statement selection
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RPAREN          shift and go to state 209
    AND             shift and go to state 184
    OR              shift and go to state 185


state 130

    (98) selection_stmt -> SWITCH LPAREN var . RPAREN statement

    RPAREN          shift and go to state 210


state 131

    (114) var -> IDVAR .
    (115) var -> IDVAR . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 114 (var -> IDVAR .)
    LBRACKET        shift and go to state 44


state 132

    (61) assing_var -> var ARROW ID .

    LPAREN          reduce using rule 61 (assing_var -> var ARROW ID .)
    EQUAL           reduce using rule 61 (assing_var -> var ARROW ID .)
    MUL_EQUAL       reduce using rule 61 (assing_var -> var ARROW ID .)
    DIV_EQUAL       reduce using rule 61 (assing_var -> var ARROW ID .)
    CONCAT_EQUAL    reduce using rule 61 (assing_var -> var ARROW ID .)
    MOD_EQUAL       reduce using rule 61 (assing_var -> var ARROW ID .)
    PLUS_EQUAL      reduce using rule 61 (assing_var -> var ARROW ID .)
    MINUS_EQUAL     reduce using rule 61 (assing_var -> var ARROW ID .)
    RBRACKET        reduce using rule 61 (assing_var -> var ARROW ID .)
    AND             reduce using rule 61 (assing_var -> var ARROW ID .)
    OR              reduce using rule 61 (assing_var -> var ARROW ID .)
    RPAREN          reduce using rule 61 (assing_var -> var ARROW ID .)
    SEMI            reduce using rule 61 (assing_var -> var ARROW ID .)
    COMMA           reduce using rule 61 (assing_var -> var ARROW ID .)


state 133

    (62) assing_var -> var DARROW ID .

    LPAREN          reduce using rule 62 (assing_var -> var DARROW ID .)
    EQUAL           reduce using rule 62 (assing_var -> var DARROW ID .)
    MUL_EQUAL       reduce using rule 62 (assing_var -> var DARROW ID .)
    DIV_EQUAL       reduce using rule 62 (assing_var -> var DARROW ID .)
    CONCAT_EQUAL    reduce using rule 62 (assing_var -> var DARROW ID .)
    MOD_EQUAL       reduce using rule 62 (assing_var -> var DARROW ID .)
    PLUS_EQUAL      reduce using rule 62 (assing_var -> var DARROW ID .)
    MINUS_EQUAL     reduce using rule 62 (assing_var -> var DARROW ID .)
    RBRACKET        reduce using rule 62 (assing_var -> var DARROW ID .)
    AND             reduce using rule 62 (assing_var -> var DARROW ID .)
    OR              reduce using rule 62 (assing_var -> var DARROW ID .)
    RPAREN          reduce using rule 62 (assing_var -> var DARROW ID .)
    SEMI            reduce using rule 62 (assing_var -> var DARROW ID .)
    COMMA           reduce using rule 62 (assing_var -> var DARROW ID .)


state 134

    (99) selection_stmt -> CASE NUM COLON . statement BREAK SEMI
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    statement                      shift and go to state 211
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 135

    (100) selection_stmt -> CASE STRING COLON . statement BREAK SEMI
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    statement                      shift and go to state 212
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 136

    (101) selection_stmt -> DEFAULT COLON statement . BREAK SEMI

    BREAK           shift and go to state 213


state 137

    (86) statement -> expression_stmt .

    BREAK           reduce using rule 86 (statement -> expression_stmt .)
    SEMI            reduce using rule 86 (statement -> expression_stmt .)
    ELSE            reduce using rule 86 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 86 (statement -> expression_stmt .)
    IDVAR           reduce using rule 86 (statement -> expression_stmt .)
    TIMESTIMES      reduce using rule 86 (statement -> expression_stmt .)
    AMPERSANT       reduce using rule 86 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 86 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 86 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 86 (statement -> expression_stmt .)
    PROTECTED       reduce using rule 86 (statement -> expression_stmt .)
    REQUIRE         reduce using rule 86 (statement -> expression_stmt .)
    INCLUDE         reduce using rule 86 (statement -> expression_stmt .)
    CLASS           reduce using rule 86 (statement -> expression_stmt .)
    IF              reduce using rule 86 (statement -> expression_stmt .)
    SWITCH          reduce using rule 86 (statement -> expression_stmt .)
    CASE            reduce using rule 86 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 86 (statement -> expression_stmt .)
    FOR             reduce using rule 86 (statement -> expression_stmt .)
    WHILE           reduce using rule 86 (statement -> expression_stmt .)
    DO              reduce using rule 86 (statement -> expression_stmt .)
    ID              reduce using rule 86 (statement -> expression_stmt .)
    ECHO            reduce using rule 86 (statement -> expression_stmt .)
    CLOSETAG        reduce using rule 86 (statement -> expression_stmt .)
    LPAREN          reduce using rule 86 (statement -> expression_stmt .)
    NUM             reduce using rule 86 (statement -> expression_stmt .)
    STRING          reduce using rule 86 (statement -> expression_stmt .)
    TRUE            reduce using rule 86 (statement -> expression_stmt .)
    FALSE           reduce using rule 86 (statement -> expression_stmt .)
    RBLOCK          reduce using rule 86 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 86 (statement -> expression_stmt .)
    RETURN          reduce using rule 86 (statement -> expression_stmt .)


state 138

    (87) statement -> compount_stmt .

    BREAK           reduce using rule 87 (statement -> compount_stmt .)
    SEMI            reduce using rule 87 (statement -> compount_stmt .)
    ELSE            reduce using rule 87 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 87 (statement -> compount_stmt .)
    IDVAR           reduce using rule 87 (statement -> compount_stmt .)
    TIMESTIMES      reduce using rule 87 (statement -> compount_stmt .)
    AMPERSANT       reduce using rule 87 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 87 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 87 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 87 (statement -> compount_stmt .)
    PROTECTED       reduce using rule 87 (statement -> compount_stmt .)
    REQUIRE         reduce using rule 87 (statement -> compount_stmt .)
    INCLUDE         reduce using rule 87 (statement -> compount_stmt .)
    CLASS           reduce using rule 87 (statement -> compount_stmt .)
    IF              reduce using rule 87 (statement -> compount_stmt .)
    SWITCH          reduce using rule 87 (statement -> compount_stmt .)
    CASE            reduce using rule 87 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 87 (statement -> compount_stmt .)
    FOR             reduce using rule 87 (statement -> compount_stmt .)
    WHILE           reduce using rule 87 (statement -> compount_stmt .)
    DO              reduce using rule 87 (statement -> compount_stmt .)
    ID              reduce using rule 87 (statement -> compount_stmt .)
    ECHO            reduce using rule 87 (statement -> compount_stmt .)
    CLOSETAG        reduce using rule 87 (statement -> compount_stmt .)
    LPAREN          reduce using rule 87 (statement -> compount_stmt .)
    NUM             reduce using rule 87 (statement -> compount_stmt .)
    STRING          reduce using rule 87 (statement -> compount_stmt .)
    TRUE            reduce using rule 87 (statement -> compount_stmt .)
    FALSE           reduce using rule 87 (statement -> compount_stmt .)
    RBLOCK          reduce using rule 87 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 87 (statement -> compount_stmt .)
    RETURN          reduce using rule 87 (statement -> compount_stmt .)


state 139

    (88) statement -> selection_stmt .

    BREAK           reduce using rule 88 (statement -> selection_stmt .)
    SEMI            reduce using rule 88 (statement -> selection_stmt .)
    ELSE            reduce using rule 88 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 88 (statement -> selection_stmt .)
    IDVAR           reduce using rule 88 (statement -> selection_stmt .)
    TIMESTIMES      reduce using rule 88 (statement -> selection_stmt .)
    AMPERSANT       reduce using rule 88 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 88 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 88 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 88 (statement -> selection_stmt .)
    PROTECTED       reduce using rule 88 (statement -> selection_stmt .)
    REQUIRE         reduce using rule 88 (statement -> selection_stmt .)
    INCLUDE         reduce using rule 88 (statement -> selection_stmt .)
    CLASS           reduce using rule 88 (statement -> selection_stmt .)
    IF              reduce using rule 88 (statement -> selection_stmt .)
    SWITCH          reduce using rule 88 (statement -> selection_stmt .)
    CASE            reduce using rule 88 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 88 (statement -> selection_stmt .)
    FOR             reduce using rule 88 (statement -> selection_stmt .)
    WHILE           reduce using rule 88 (statement -> selection_stmt .)
    DO              reduce using rule 88 (statement -> selection_stmt .)
    ID              reduce using rule 88 (statement -> selection_stmt .)
    ECHO            reduce using rule 88 (statement -> selection_stmt .)
    CLOSETAG        reduce using rule 88 (statement -> selection_stmt .)
    LPAREN          reduce using rule 88 (statement -> selection_stmt .)
    NUM             reduce using rule 88 (statement -> selection_stmt .)
    STRING          reduce using rule 88 (statement -> selection_stmt .)
    TRUE            reduce using rule 88 (statement -> selection_stmt .)
    FALSE           reduce using rule 88 (statement -> selection_stmt .)
    RBLOCK          reduce using rule 88 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 88 (statement -> selection_stmt .)
    RETURN          reduce using rule 88 (statement -> selection_stmt .)


state 140

    (89) statement -> iteration_stmt .

    BREAK           reduce using rule 89 (statement -> iteration_stmt .)
    SEMI            reduce using rule 89 (statement -> iteration_stmt .)
    ELSE            reduce using rule 89 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 89 (statement -> iteration_stmt .)
    IDVAR           reduce using rule 89 (statement -> iteration_stmt .)
    TIMESTIMES      reduce using rule 89 (statement -> iteration_stmt .)
    AMPERSANT       reduce using rule 89 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 89 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 89 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 89 (statement -> iteration_stmt .)
    PROTECTED       reduce using rule 89 (statement -> iteration_stmt .)
    REQUIRE         reduce using rule 89 (statement -> iteration_stmt .)
    INCLUDE         reduce using rule 89 (statement -> iteration_stmt .)
    CLASS           reduce using rule 89 (statement -> iteration_stmt .)
    IF              reduce using rule 89 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 89 (statement -> iteration_stmt .)
    CASE            reduce using rule 89 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 89 (statement -> iteration_stmt .)
    FOR             reduce using rule 89 (statement -> iteration_stmt .)
    WHILE           reduce using rule 89 (statement -> iteration_stmt .)
    DO              reduce using rule 89 (statement -> iteration_stmt .)
    ID              reduce using rule 89 (statement -> iteration_stmt .)
    ECHO            reduce using rule 89 (statement -> iteration_stmt .)
    CLOSETAG        reduce using rule 89 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 89 (statement -> iteration_stmt .)
    NUM             reduce using rule 89 (statement -> iteration_stmt .)
    STRING          reduce using rule 89 (statement -> iteration_stmt .)
    TRUE            reduce using rule 89 (statement -> iteration_stmt .)
    FALSE           reduce using rule 89 (statement -> iteration_stmt .)
    RBLOCK          reduce using rule 89 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 89 (statement -> iteration_stmt .)
    RETURN          reduce using rule 89 (statement -> iteration_stmt .)


state 141

    (90) statement -> return_stmt .

    BREAK           reduce using rule 90 (statement -> return_stmt .)
    SEMI            reduce using rule 90 (statement -> return_stmt .)
    ELSE            reduce using rule 90 (statement -> return_stmt .)
    ELSEIF          reduce using rule 90 (statement -> return_stmt .)
    IDVAR           reduce using rule 90 (statement -> return_stmt .)
    TIMESTIMES      reduce using rule 90 (statement -> return_stmt .)
    AMPERSANT       reduce using rule 90 (statement -> return_stmt .)
    FUNCTION        reduce using rule 90 (statement -> return_stmt .)
    PRIVATE         reduce using rule 90 (statement -> return_stmt .)
    PUBLIC          reduce using rule 90 (statement -> return_stmt .)
    PROTECTED       reduce using rule 90 (statement -> return_stmt .)
    REQUIRE         reduce using rule 90 (statement -> return_stmt .)
    INCLUDE         reduce using rule 90 (statement -> return_stmt .)
    CLASS           reduce using rule 90 (statement -> return_stmt .)
    IF              reduce using rule 90 (statement -> return_stmt .)
    SWITCH          reduce using rule 90 (statement -> return_stmt .)
    CASE            reduce using rule 90 (statement -> return_stmt .)
    DEFAULT         reduce using rule 90 (statement -> return_stmt .)
    FOR             reduce using rule 90 (statement -> return_stmt .)
    WHILE           reduce using rule 90 (statement -> return_stmt .)
    DO              reduce using rule 90 (statement -> return_stmt .)
    ID              reduce using rule 90 (statement -> return_stmt .)
    ECHO            reduce using rule 90 (statement -> return_stmt .)
    CLOSETAG        reduce using rule 90 (statement -> return_stmt .)
    LPAREN          reduce using rule 90 (statement -> return_stmt .)
    NUM             reduce using rule 90 (statement -> return_stmt .)
    STRING          reduce using rule 90 (statement -> return_stmt .)
    TRUE            reduce using rule 90 (statement -> return_stmt .)
    FALSE           reduce using rule 90 (statement -> return_stmt .)
    RBLOCK          reduce using rule 90 (statement -> return_stmt .)
    LBLOCK          reduce using rule 90 (statement -> return_stmt .)
    RETURN          reduce using rule 90 (statement -> return_stmt .)


state 142

    (91) statement -> class_declaration .

    BREAK           reduce using rule 91 (statement -> class_declaration .)
    SEMI            reduce using rule 91 (statement -> class_declaration .)
    ELSE            reduce using rule 91 (statement -> class_declaration .)
    ELSEIF          reduce using rule 91 (statement -> class_declaration .)
    IDVAR           reduce using rule 91 (statement -> class_declaration .)
    TIMESTIMES      reduce using rule 91 (statement -> class_declaration .)
    AMPERSANT       reduce using rule 91 (statement -> class_declaration .)
    FUNCTION        reduce using rule 91 (statement -> class_declaration .)
    PRIVATE         reduce using rule 91 (statement -> class_declaration .)
    PUBLIC          reduce using rule 91 (statement -> class_declaration .)
    PROTECTED       reduce using rule 91 (statement -> class_declaration .)
    REQUIRE         reduce using rule 91 (statement -> class_declaration .)
    INCLUDE         reduce using rule 91 (statement -> class_declaration .)
    CLASS           reduce using rule 91 (statement -> class_declaration .)
    IF              reduce using rule 91 (statement -> class_declaration .)
    SWITCH          reduce using rule 91 (statement -> class_declaration .)
    CASE            reduce using rule 91 (statement -> class_declaration .)
    DEFAULT         reduce using rule 91 (statement -> class_declaration .)
    FOR             reduce using rule 91 (statement -> class_declaration .)
    WHILE           reduce using rule 91 (statement -> class_declaration .)
    DO              reduce using rule 91 (statement -> class_declaration .)
    ID              reduce using rule 91 (statement -> class_declaration .)
    ECHO            reduce using rule 91 (statement -> class_declaration .)
    CLOSETAG        reduce using rule 91 (statement -> class_declaration .)
    LPAREN          reduce using rule 91 (statement -> class_declaration .)
    NUM             reduce using rule 91 (statement -> class_declaration .)
    STRING          reduce using rule 91 (statement -> class_declaration .)
    TRUE            reduce using rule 91 (statement -> class_declaration .)
    FALSE           reduce using rule 91 (statement -> class_declaration .)
    RBLOCK          reduce using rule 91 (statement -> class_declaration .)
    LBLOCK          reduce using rule 91 (statement -> class_declaration .)
    RETURN          reduce using rule 91 (statement -> class_declaration .)


state 143

    (92) statement -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    BREAK           reduce using rule 92 (statement -> echo_stmt .)
    SEMI            reduce using rule 92 (statement -> echo_stmt .)
    ELSE            reduce using rule 92 (statement -> echo_stmt .)
    ELSEIF          reduce using rule 92 (statement -> echo_stmt .)
    IDVAR           reduce using rule 92 (statement -> echo_stmt .)
    TIMESTIMES      reduce using rule 92 (statement -> echo_stmt .)
    AMPERSANT       reduce using rule 92 (statement -> echo_stmt .)
    FUNCTION        reduce using rule 92 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 92 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 92 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 92 (statement -> echo_stmt .)
    REQUIRE         reduce using rule 92 (statement -> echo_stmt .)
    INCLUDE         reduce using rule 92 (statement -> echo_stmt .)
    CLASS           reduce using rule 92 (statement -> echo_stmt .)
    IF              reduce using rule 92 (statement -> echo_stmt .)
    SWITCH          reduce using rule 92 (statement -> echo_stmt .)
    CASE            reduce using rule 92 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 92 (statement -> echo_stmt .)
    FOR             reduce using rule 92 (statement -> echo_stmt .)
    WHILE           reduce using rule 92 (statement -> echo_stmt .)
    DO              reduce using rule 92 (statement -> echo_stmt .)
    ID              reduce using rule 92 (statement -> echo_stmt .)
    CLOSETAG        reduce using rule 92 (statement -> echo_stmt .)
    LPAREN          reduce using rule 92 (statement -> echo_stmt .)
    NUM             reduce using rule 92 (statement -> echo_stmt .)
    STRING          reduce using rule 92 (statement -> echo_stmt .)
    TRUE            reduce using rule 92 (statement -> echo_stmt .)
    FALSE           reduce using rule 92 (statement -> echo_stmt .)
    RBLOCK          reduce using rule 92 (statement -> echo_stmt .)
    LBLOCK          reduce using rule 92 (statement -> echo_stmt .)
    RETURN          reduce using rule 92 (statement -> echo_stmt .)
    ECHO            shift and go to state 40

  ! ECHO            [ reduce using rule 92 (statement -> echo_stmt .) ]


state 144

    (93) expression_stmt -> expression . SEMI
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    SEMI            shift and go to state 214
    AND             shift and go to state 184
    OR              shift and go to state 185


state 145

    (81) compount_stmt -> LBLOCK . echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (161) empty -> .

    ECHO            reduce using rule 161 (empty -> .)
    IDVAR           reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    ID              reduce using rule 161 (empty -> .)
    LBLOCK          reduce using rule 161 (empty -> .)
    IF              reduce using rule 161 (empty -> .)
    SWITCH          reduce using rule 161 (empty -> .)
    CASE            reduce using rule 161 (empty -> .)
    DEFAULT         reduce using rule 161 (empty -> .)
    FOR             reduce using rule 161 (empty -> .)
    WHILE           reduce using rule 161 (empty -> .)
    DO              reduce using rule 161 (empty -> .)
    RETURN          reduce using rule 161 (empty -> .)
    CLASS           reduce using rule 161 (empty -> .)
    PRIVATE         reduce using rule 161 (empty -> .)
    PUBLIC          reduce using rule 161 (empty -> .)
    PROTECTED       reduce using rule 161 (empty -> .)
    LPAREN          reduce using rule 161 (empty -> .)
    NUM             reduce using rule 161 (empty -> .)
    STRING          reduce using rule 161 (empty -> .)
    TRUE            reduce using rule 161 (empty -> .)
    FALSE           reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)

    echo_stmt                      shift and go to state 215
    empty                          shift and go to state 27

state 146

    (105) return_stmt -> RETURN . SEMI
    (106) return_stmt -> RETURN . expression SEMI
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    SEMI            shift and go to state 216
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 217
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 147

    (25) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK

    CLASS           shift and go to state 39


state 148

    (102) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN statement
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 218
    additive_expression            shift and go to state 90
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 149

    (103) iteration_stmt -> WHILE LPAREN expression . RPAREN statement
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RPAREN          shift and go to state 219
    AND             shift and go to state 184
    OR              shift and go to state 185


state 150

    (104) iteration_stmt -> DO LBLOCK statement . SEMI RBLOCK WHILE LPAREN expression RPAREN

    SEMI            shift and go to state 220


state 151

    (25) class_declaration -> area CLASS ID LBLOCK . attributes RBLOCK
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    area                           shift and go to state 207
    attributes                     shift and go to state 221
    attribute                      shift and go to state 206
    fun_declaration                shift and go to state 208

state 152

    (13) echo_stmt -> echo_stmt ECHO echo_params SEMI .

    ECHO            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IDVAR           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TIMESTIMES      reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    AMPERSANT       reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FUNCTION        reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PRIVATE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PUBLIC          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PROTECTED       reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    REQUIRE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    INCLUDE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLASS           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IF              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SWITCH          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CASE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DEFAULT         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FOR             reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    WHILE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DO              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ID              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLOSETAG        reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    BREAK           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SEMI            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RETURN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LPAREN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    NUM             reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    STRING          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TRUE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FALSE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSEIF          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)


state 153

    (16) echo_params -> echo_param DOT . echo_params
    (15) echo_params -> . echo_param
    (16) echo_params -> . echo_param DOT echo_params
    (17) echo_param -> . STRING
    (18) echo_param -> . IDVAR
    (19) echo_param -> . NUM
    (20) echo_param -> . boolean
    (21) echo_param -> . fun_declaration
    (22) echo_param -> . fun_call
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 76
    IDVAR           shift and go to state 77
    NUM             shift and go to state 78
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    FUNCTION        shift and go to state 19
    ID              shift and go to state 84

    echo_param                     shift and go to state 75
    echo_params                    shift and go to state 222
    boolean                        shift and go to state 79
    fun_declaration                shift and go to state 80
    fun_call                       shift and go to state 81
    assing_var                     shift and go to state 85
    var                            shift and go to state 30

state 154

    (149) factor -> IDVAR LPAREN . args RPAREN
    (150) args -> . args_list
    (151) args -> . empty
    (152) args -> . VOID
    (153) args_list -> . args_list COMMA expression
    (154) args_list -> . expression
    (161) empty -> .
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    VOID            shift and go to state 226
    RPAREN          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    args                           shift and go to state 223
    args_list                      shift and go to state 224
    empty                          shift and go to state 225
    expression                     shift and go to state 227
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 155

    (54) var_declaration -> IDVAR IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    IF              reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CASE            reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FOR             reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DO              reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ID              reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    NUM             reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    STRING          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 54 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)


state 156

    (116) simple_expression -> additive_expression relop . additive_expression
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    additive_expression            shift and go to state 228
    term                           shift and go to state 91
    fun_call                       shift and go to state 92
    factor                         shift and go to state 93
    assing_var                     shift and go to state 85
    var                            shift and go to state 95
    boolean                        shift and go to state 98

state 157

    (133) additive_expression -> additive_expression addop . term
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    term                           shift and go to state 229
    factor                         shift and go to state 93
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 158

    (118) relop -> LESS .

    ID              reduce using rule 118 (relop -> LESS .)
    LPAREN          reduce using rule 118 (relop -> LESS .)
    NUM             reduce using rule 118 (relop -> LESS .)
    STRING          reduce using rule 118 (relop -> LESS .)
    IDVAR           reduce using rule 118 (relop -> LESS .)
    TRUE            reduce using rule 118 (relop -> LESS .)
    FALSE           reduce using rule 118 (relop -> LESS .)


state 159

    (119) relop -> LESSEQUAL .

    ID              reduce using rule 119 (relop -> LESSEQUAL .)
    LPAREN          reduce using rule 119 (relop -> LESSEQUAL .)
    NUM             reduce using rule 119 (relop -> LESSEQUAL .)
    STRING          reduce using rule 119 (relop -> LESSEQUAL .)
    IDVAR           reduce using rule 119 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 119 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 119 (relop -> LESSEQUAL .)


state 160

    (120) relop -> GREATER .

    ID              reduce using rule 120 (relop -> GREATER .)
    LPAREN          reduce using rule 120 (relop -> GREATER .)
    NUM             reduce using rule 120 (relop -> GREATER .)
    STRING          reduce using rule 120 (relop -> GREATER .)
    IDVAR           reduce using rule 120 (relop -> GREATER .)
    TRUE            reduce using rule 120 (relop -> GREATER .)
    FALSE           reduce using rule 120 (relop -> GREATER .)


state 161

    (121) relop -> GREATEREQUAL .

    ID              reduce using rule 121 (relop -> GREATEREQUAL .)
    LPAREN          reduce using rule 121 (relop -> GREATEREQUAL .)
    NUM             reduce using rule 121 (relop -> GREATEREQUAL .)
    STRING          reduce using rule 121 (relop -> GREATEREQUAL .)
    IDVAR           reduce using rule 121 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 121 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 121 (relop -> GREATEREQUAL .)


state 162

    (122) relop -> DEQUAL .

    ID              reduce using rule 122 (relop -> DEQUAL .)
    LPAREN          reduce using rule 122 (relop -> DEQUAL .)
    NUM             reduce using rule 122 (relop -> DEQUAL .)
    STRING          reduce using rule 122 (relop -> DEQUAL .)
    IDVAR           reduce using rule 122 (relop -> DEQUAL .)
    TRUE            reduce using rule 122 (relop -> DEQUAL .)
    FALSE           reduce using rule 122 (relop -> DEQUAL .)


state 163

    (123) relop -> DISTINT .

    ID              reduce using rule 123 (relop -> DISTINT .)
    LPAREN          reduce using rule 123 (relop -> DISTINT .)
    NUM             reduce using rule 123 (relop -> DISTINT .)
    STRING          reduce using rule 123 (relop -> DISTINT .)
    IDVAR           reduce using rule 123 (relop -> DISTINT .)
    TRUE            reduce using rule 123 (relop -> DISTINT .)
    FALSE           reduce using rule 123 (relop -> DISTINT .)


state 164

    (124) relop -> ISEQUAL .

    ID              reduce using rule 124 (relop -> ISEQUAL .)
    LPAREN          reduce using rule 124 (relop -> ISEQUAL .)
    NUM             reduce using rule 124 (relop -> ISEQUAL .)
    STRING          reduce using rule 124 (relop -> ISEQUAL .)
    IDVAR           reduce using rule 124 (relop -> ISEQUAL .)
    TRUE            reduce using rule 124 (relop -> ISEQUAL .)
    FALSE           reduce using rule 124 (relop -> ISEQUAL .)


state 165

    (125) relop -> IS_IDENTICAL .

    ID              reduce using rule 125 (relop -> IS_IDENTICAL .)
    LPAREN          reduce using rule 125 (relop -> IS_IDENTICAL .)
    NUM             reduce using rule 125 (relop -> IS_IDENTICAL .)
    STRING          reduce using rule 125 (relop -> IS_IDENTICAL .)
    IDVAR           reduce using rule 125 (relop -> IS_IDENTICAL .)
    TRUE            reduce using rule 125 (relop -> IS_IDENTICAL .)
    FALSE           reduce using rule 125 (relop -> IS_IDENTICAL .)


state 166

    (126) relop -> IS_NOT_IDENTICAL .

    ID              reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    STRING          reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    IDVAR           reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 126 (relop -> IS_NOT_IDENTICAL .)


state 167

    (127) relop -> SR_EQUAL .

    ID              reduce using rule 127 (relop -> SR_EQUAL .)
    LPAREN          reduce using rule 127 (relop -> SR_EQUAL .)
    NUM             reduce using rule 127 (relop -> SR_EQUAL .)
    STRING          reduce using rule 127 (relop -> SR_EQUAL .)
    IDVAR           reduce using rule 127 (relop -> SR_EQUAL .)
    TRUE            reduce using rule 127 (relop -> SR_EQUAL .)
    FALSE           reduce using rule 127 (relop -> SR_EQUAL .)


state 168

    (128) relop -> SL_EQUAL .

    ID              reduce using rule 128 (relop -> SL_EQUAL .)
    LPAREN          reduce using rule 128 (relop -> SL_EQUAL .)
    NUM             reduce using rule 128 (relop -> SL_EQUAL .)
    STRING          reduce using rule 128 (relop -> SL_EQUAL .)
    IDVAR           reduce using rule 128 (relop -> SL_EQUAL .)
    TRUE            reduce using rule 128 (relop -> SL_EQUAL .)
    FALSE           reduce using rule 128 (relop -> SL_EQUAL .)


state 169

    (129) relop -> AND_EQUAL .

    ID              reduce using rule 129 (relop -> AND_EQUAL .)
    LPAREN          reduce using rule 129 (relop -> AND_EQUAL .)
    NUM             reduce using rule 129 (relop -> AND_EQUAL .)
    STRING          reduce using rule 129 (relop -> AND_EQUAL .)
    IDVAR           reduce using rule 129 (relop -> AND_EQUAL .)
    TRUE            reduce using rule 129 (relop -> AND_EQUAL .)
    FALSE           reduce using rule 129 (relop -> AND_EQUAL .)


state 170

    (130) relop -> OR_EQUAL .

    ID              reduce using rule 130 (relop -> OR_EQUAL .)
    LPAREN          reduce using rule 130 (relop -> OR_EQUAL .)
    NUM             reduce using rule 130 (relop -> OR_EQUAL .)
    STRING          reduce using rule 130 (relop -> OR_EQUAL .)
    IDVAR           reduce using rule 130 (relop -> OR_EQUAL .)
    TRUE            reduce using rule 130 (relop -> OR_EQUAL .)
    FALSE           reduce using rule 130 (relop -> OR_EQUAL .)


state 171

    (131) relop -> XOR_EQUAL .

    ID              reduce using rule 131 (relop -> XOR_EQUAL .)
    LPAREN          reduce using rule 131 (relop -> XOR_EQUAL .)
    NUM             reduce using rule 131 (relop -> XOR_EQUAL .)
    STRING          reduce using rule 131 (relop -> XOR_EQUAL .)
    IDVAR           reduce using rule 131 (relop -> XOR_EQUAL .)
    TRUE            reduce using rule 131 (relop -> XOR_EQUAL .)
    FALSE           reduce using rule 131 (relop -> XOR_EQUAL .)


state 172

    (132) relop -> CONCAT_EQUAL .

    ID              reduce using rule 132 (relop -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 132 (relop -> CONCAT_EQUAL .)
    NUM             reduce using rule 132 (relop -> CONCAT_EQUAL .)
    STRING          reduce using rule 132 (relop -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 132 (relop -> CONCAT_EQUAL .)
    TRUE            reduce using rule 132 (relop -> CONCAT_EQUAL .)
    FALSE           reduce using rule 132 (relop -> CONCAT_EQUAL .)


state 173

    (138) addop -> PLUS .

    LPAREN          reduce using rule 138 (addop -> PLUS .)
    NUM             reduce using rule 138 (addop -> PLUS .)
    STRING          reduce using rule 138 (addop -> PLUS .)
    IDVAR           reduce using rule 138 (addop -> PLUS .)
    TRUE            reduce using rule 138 (addop -> PLUS .)
    FALSE           reduce using rule 138 (addop -> PLUS .)


state 174

    (139) addop -> MINUS .

    LPAREN          reduce using rule 139 (addop -> MINUS .)
    NUM             reduce using rule 139 (addop -> MINUS .)
    STRING          reduce using rule 139 (addop -> MINUS .)
    IDVAR           reduce using rule 139 (addop -> MINUS .)
    TRUE            reduce using rule 139 (addop -> MINUS .)
    FALSE           reduce using rule 139 (addop -> MINUS .)


state 175

    (135) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    DEQUAL          reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    DISTINT         reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    ISEQUAL         reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    IS_IDENTICAL    reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    IS_NOT_IDENTICAL reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    SR_EQUAL        reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    SL_EQUAL        reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    AND_EQUAL       reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    OR_EQUAL        reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    XOR_EQUAL       reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    CONCAT_EQUAL    reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    RBRACKET        reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    AND             reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    OR              reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 135 (additive_expression -> term MINUSMINUS .)
    COMMA           reduce using rule 135 (additive_expression -> term MINUSMINUS .)


state 176

    (136) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    DEQUAL          reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    DISTINT         reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    ISEQUAL         reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    IS_IDENTICAL    reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    IS_NOT_IDENTICAL reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    SR_EQUAL        reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    SL_EQUAL        reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    AND_EQUAL       reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    OR_EQUAL        reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    XOR_EQUAL       reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    CONCAT_EQUAL    reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    RBRACKET        reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    AND             reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    OR              reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 136 (additive_expression -> term PLUSPLUS .)
    COMMA           reduce using rule 136 (additive_expression -> term PLUSPLUS .)


state 177

    (140) term -> term mulop . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    factor                         shift and go to state 230
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 178

    (142) mulop -> TIMES .

    LPAREN          reduce using rule 142 (mulop -> TIMES .)
    NUM             reduce using rule 142 (mulop -> TIMES .)
    STRING          reduce using rule 142 (mulop -> TIMES .)
    IDVAR           reduce using rule 142 (mulop -> TIMES .)
    TRUE            reduce using rule 142 (mulop -> TIMES .)
    FALSE           reduce using rule 142 (mulop -> TIMES .)


state 179

    (143) mulop -> DIVIDE .

    LPAREN          reduce using rule 143 (mulop -> DIVIDE .)
    NUM             reduce using rule 143 (mulop -> DIVIDE .)
    STRING          reduce using rule 143 (mulop -> DIVIDE .)
    IDVAR           reduce using rule 143 (mulop -> DIVIDE .)
    TRUE            reduce using rule 143 (mulop -> DIVIDE .)
    FALSE           reduce using rule 143 (mulop -> DIVIDE .)


state 180

    (144) factor -> LPAREN expression . RPAREN
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RPAREN          shift and go to state 231
    AND             shift and go to state 184
    OR              shift and go to state 185


state 181

    (158) typeclass -> IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 232


state 182

    (159) constructor -> ID . LPAREN RPAREN
    (160) constructor -> ID . LPAREN args RPAREN

    LPAREN          shift and go to state 233


state 183

    (115) var -> IDVAR LBRACKET expression RBRACKET .

    ARROW           reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    DARROW          reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    MUL_EQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIV_EQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    CONCAT_EQUAL    reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    MOD_EQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS_EQUAL      reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS_EQUAL     reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESS            reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_IDENTICAL    reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    SR_EQUAL        reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    SL_EQUAL        reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND_EQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR_EQUAL        reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    XOR_EQUAL       reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND             reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR              reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 115 (var -> IDVAR LBRACKET expression RBRACKET .)


state 184

    (110) expression -> expression AND . expression
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 234
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 185

    (111) expression -> expression OR . expression
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 235
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 186

    (107) expression -> assing_var EQUAL . expression
    (109) expression -> assing_var EQUAL . AMPERSANT IDVAR
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    AMPERSANT       shift and go to state 237
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    assing_var                     shift and go to state 102
    expression                     shift and go to state 236
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 187

    (40) var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    IF              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CASE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FOR             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DO              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ID              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    NUM             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    STRING          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)


state 188

    (41) var_declaration -> assing_var IGUAL NUM SEMI . var_declaration
    (42) var_declaration -> assing_var IGUAL NUM SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TIMESTIMES      reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    AMPERSANT       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FUNCTION        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRIVATE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PUBLIC          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PROTECTED       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    REQUIRE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    INCLUDE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLASS           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    IF              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    SWITCH          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CASE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DEFAULT         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FOR             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    WHILE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DO              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ID              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ECHO            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLOSETAG        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LPAREN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    NUM             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    STRING          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TRUE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FALSE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RETURN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 238
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 189

    (43) var_declaration -> assing_var IGUAL STRING SEMI . var_declaration
    (44) var_declaration -> assing_var IGUAL STRING SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TIMESTIMES      reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    AMPERSANT       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FUNCTION        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRIVATE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PUBLIC          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PROTECTED       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    REQUIRE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    INCLUDE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLASS           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    IF              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    SWITCH          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CASE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DEFAULT         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FOR             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    WHILE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DO              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ID              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ECHO            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLOSETAG        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LPAREN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    NUM             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    STRING          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TRUE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FALSE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RETURN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 239
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 190

    (45) var_declaration -> assing_var IGUAL boolean SEMI . var_declaration
    (46) var_declaration -> assing_var IGUAL boolean SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TIMESTIMES      reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    AMPERSANT       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FUNCTION        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRIVATE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PUBLIC          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PROTECTED       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    REQUIRE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    INCLUDE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLASS           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    IF              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    SWITCH          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CASE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DEFAULT         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FOR             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    WHILE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DO              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ID              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ECHO            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLOSETAG        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LPAREN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    NUM             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    STRING          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TRUE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FALSE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RETURN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 240
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 191

    (47) var_declaration -> assing_var IGUAL IDVAR SEMI . var_declaration
    (48) var_declaration -> assing_var IGUAL IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TIMESTIMES      reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    AMPERSANT       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FUNCTION        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRIVATE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PUBLIC          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PROTECTED       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    REQUIRE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    INCLUDE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLASS           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    IF              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    SWITCH          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CASE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DEFAULT         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FOR             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    WHILE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DO              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ID              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ECHO            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLOSETAG        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LPAREN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    NUM             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    STRING          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TRUE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FALSE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RETURN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 86 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 84 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 241
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 192

    (49) var_declaration -> assing_var IGUAL array_declare SEMI .

    IDVAR           reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    TIMESTIMES      reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    AMPERSANT       reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    FUNCTION        reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    PRIVATE         reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    PUBLIC          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    PROTECTED       reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    REQUIRE         reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    INCLUDE         reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    CLASS           reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    IF              reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    SWITCH          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    CASE            reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    DEFAULT         reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    FOR             reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    WHILE           reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    DO              reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    ID              reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    ECHO            reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    CLOSETAG        reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    LPAREN          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    NUM             reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    STRING          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    TRUE            reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    FALSE           reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    RBLOCK          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    LBLOCK          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)
    RETURN          reduce using rule 49 (var_declaration -> assing_var IGUAL array_declare SEMI .)


state 193

    (53) var_declaration -> assing_var IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    IF              reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CASE            reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FOR             reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DO              reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ID              reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    NUM             reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    STRING          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 53 (var_declaration -> assing_var IGUAL simple_expression SEMI .)


state 194

    (56) array_declare -> ARRAY LPAREN . array_values RPAREN
    (57) array_values -> . array_value
    (58) array_values -> . array_value COMMA array_values
    (59) array_value -> . factor DARROW factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    array_values                   shift and go to state 242
    array_value                    shift and go to state 243
    factor                         shift and go to state 244
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 195

    (73) fun_call -> assing_var LPAREN params RPAREN .

    SEMI            reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    DOT             reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    LESS            reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATER         reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    DEQUAL          reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    DISTINT         reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    PLUS            reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    MINUS           reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    RBRACKET        reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    AND             reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    OR              reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    RPAREN          reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)
    COMMA           reduce using rule 73 (fun_call -> assing_var LPAREN params RPAREN .)


state 196

    (77) param_list -> param COMMA . param_list
    (76) param_list -> . param
    (77) param_list -> . param COMMA param_list
    (78) param -> . IDVAR
    (79) param -> . IDVAR LBRACKET RBRACKET
    (80) param -> . term
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    IDVAR           shift and go to state 118
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    param                          shift and go to state 117
    param_list                     shift and go to state 245
    term                           shift and go to state 119
    factor                         shift and go to state 93
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 197

    (79) param -> IDVAR LBRACKET . RBRACKET
    (115) var -> IDVAR LBRACKET . expression RBRACKET
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    RBRACKET        shift and go to state 246
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 101
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 198

    (50) var_declaration -> AMPERSANT IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    IF              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CASE            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FOR             reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DO              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ID              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    NUM             reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    STRING          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)


state 199

    (51) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR . SEMI selection_stmt

    SEMI            shift and go to state 247


state 200

    (70) fun_declaration -> FUNCTION ID LPAREN params . RPAREN
    (71) fun_declaration -> FUNCTION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 248


state 201

    (157) typeclass -> ID IDVAR EQUAL NEW . constructor SEMI
    (159) constructor -> . ID LPAREN RPAREN
    (160) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 182

    constructor                    shift and go to state 249

state 202

    (72) fun_call -> ID LPAREN params RPAREN .

    SEMI            reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    DOT             reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    LESS            reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    GREATER         reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    DEQUAL          reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    DISTINT         reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    RBRACKET        reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 72 (fun_call -> ID LPAREN params RPAREN .)


state 203

    (23) header_declaration -> REQUIRE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 250


state 204

    (24) header_declaration -> INCLUDE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 251


state 205

    (26) class_declaration -> CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 252


state 206

    (27) attributes -> attribute .
    (28) attributes -> attribute . attributes
    (29) attribute -> attribute . area var_declaration
    (31) attribute -> attribute . area fun_declaration
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    RBLOCK          reduce using rule 27 (attributes -> attribute .)
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attribute                      shift and go to state 206
    attributes                     shift and go to state 253
    area                           shift and go to state 254
    fun_declaration                shift and go to state 208

state 207

    (30) attribute -> area . var_declaration
    (32) attribute -> area . fun_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 86
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    ID              shift and go to state 84

    var_declaration                shift and go to state 255
    fun_declaration                shift and go to state 256
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 208

    (33) attribute -> fun_declaration .

    PRIVATE         reduce using rule 33 (attribute -> fun_declaration .)
    PUBLIC          reduce using rule 33 (attribute -> fun_declaration .)
    PROTECTED       reduce using rule 33 (attribute -> fun_declaration .)
    FUNCTION        reduce using rule 33 (attribute -> fun_declaration .)
    RBLOCK          reduce using rule 33 (attribute -> fun_declaration .)


state 209

    (94) selection_stmt -> IF LPAREN expression RPAREN . statement
    (95) selection_stmt -> IF LPAREN expression RPAREN . statement selection
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    FUNCTION        reduce using rule 161 (empty -> .)
    REQUIRE         reduce using rule 161 (empty -> .)
    INCLUDE         reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]

    expression                     shift and go to state 144
    statement                      shift and go to state 257
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 210

    (98) selection_stmt -> SWITCH LPAREN var RPAREN . statement
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    FUNCTION        reduce using rule 161 (empty -> .)
    REQUIRE         reduce using rule 161 (empty -> .)
    INCLUDE         reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]

    var                            shift and go to state 105
    statement                      shift and go to state 258
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 211

    (99) selection_stmt -> CASE NUM COLON statement . BREAK SEMI

    BREAK           shift and go to state 259


state 212

    (100) selection_stmt -> CASE STRING COLON statement . BREAK SEMI

    BREAK           shift and go to state 260


state 213

    (101) selection_stmt -> DEFAULT COLON statement BREAK . SEMI

    SEMI            shift and go to state 261


state 214

    (93) expression_stmt -> expression SEMI .

    BREAK           reduce using rule 93 (expression_stmt -> expression SEMI .)
    SEMI            reduce using rule 93 (expression_stmt -> expression SEMI .)
    ELSE            reduce using rule 93 (expression_stmt -> expression SEMI .)
    ELSEIF          reduce using rule 93 (expression_stmt -> expression SEMI .)
    IDVAR           reduce using rule 93 (expression_stmt -> expression SEMI .)
    TIMESTIMES      reduce using rule 93 (expression_stmt -> expression SEMI .)
    AMPERSANT       reduce using rule 93 (expression_stmt -> expression SEMI .)
    FUNCTION        reduce using rule 93 (expression_stmt -> expression SEMI .)
    PRIVATE         reduce using rule 93 (expression_stmt -> expression SEMI .)
    PUBLIC          reduce using rule 93 (expression_stmt -> expression SEMI .)
    PROTECTED       reduce using rule 93 (expression_stmt -> expression SEMI .)
    REQUIRE         reduce using rule 93 (expression_stmt -> expression SEMI .)
    INCLUDE         reduce using rule 93 (expression_stmt -> expression SEMI .)
    CLASS           reduce using rule 93 (expression_stmt -> expression SEMI .)
    IF              reduce using rule 93 (expression_stmt -> expression SEMI .)
    SWITCH          reduce using rule 93 (expression_stmt -> expression SEMI .)
    CASE            reduce using rule 93 (expression_stmt -> expression SEMI .)
    DEFAULT         reduce using rule 93 (expression_stmt -> expression SEMI .)
    FOR             reduce using rule 93 (expression_stmt -> expression SEMI .)
    WHILE           reduce using rule 93 (expression_stmt -> expression SEMI .)
    DO              reduce using rule 93 (expression_stmt -> expression SEMI .)
    ID              reduce using rule 93 (expression_stmt -> expression SEMI .)
    ECHO            reduce using rule 93 (expression_stmt -> expression SEMI .)
    CLOSETAG        reduce using rule 93 (expression_stmt -> expression SEMI .)
    LPAREN          reduce using rule 93 (expression_stmt -> expression SEMI .)
    NUM             reduce using rule 93 (expression_stmt -> expression SEMI .)
    STRING          reduce using rule 93 (expression_stmt -> expression SEMI .)
    TRUE            reduce using rule 93 (expression_stmt -> expression SEMI .)
    FALSE           reduce using rule 93 (expression_stmt -> expression SEMI .)
    RBLOCK          reduce using rule 93 (expression_stmt -> expression SEMI .)
    LBLOCK          reduce using rule 93 (expression_stmt -> expression SEMI .)
    RETURN          reduce using rule 93 (expression_stmt -> expression SEMI .)


state 215

    (81) compount_stmt -> LBLOCK echo_stmt . local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (82) local_declarations -> . local_declarations var_declaration
    (83) local_declarations -> . empty
    (161) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 40
    IDVAR           reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    ID              reduce using rule 161 (empty -> .)
    LBLOCK          reduce using rule 161 (empty -> .)
    IF              reduce using rule 161 (empty -> .)
    SWITCH          reduce using rule 161 (empty -> .)
    CASE            reduce using rule 161 (empty -> .)
    DEFAULT         reduce using rule 161 (empty -> .)
    FOR             reduce using rule 161 (empty -> .)
    WHILE           reduce using rule 161 (empty -> .)
    DO              reduce using rule 161 (empty -> .)
    RETURN          reduce using rule 161 (empty -> .)
    CLASS           reduce using rule 161 (empty -> .)
    PRIVATE         reduce using rule 161 (empty -> .)
    PUBLIC          reduce using rule 161 (empty -> .)
    PROTECTED       reduce using rule 161 (empty -> .)
    LPAREN          reduce using rule 161 (empty -> .)
    NUM             reduce using rule 161 (empty -> .)
    STRING          reduce using rule 161 (empty -> .)
    TRUE            reduce using rule 161 (empty -> .)
    FALSE           reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)

  ! ECHO            [ reduce using rule 161 (empty -> .) ]

    local_declarations             shift and go to state 262
    empty                          shift and go to state 263

state 216

    (105) return_stmt -> RETURN SEMI .

    BREAK           reduce using rule 105 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 105 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 105 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    IDVAR           reduce using rule 105 (return_stmt -> RETURN SEMI .)
    TIMESTIMES      reduce using rule 105 (return_stmt -> RETURN SEMI .)
    AMPERSANT       reduce using rule 105 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 105 (return_stmt -> RETURN SEMI .)
    PRIVATE         reduce using rule 105 (return_stmt -> RETURN SEMI .)
    PUBLIC          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    PROTECTED       reduce using rule 105 (return_stmt -> RETURN SEMI .)
    REQUIRE         reduce using rule 105 (return_stmt -> RETURN SEMI .)
    INCLUDE         reduce using rule 105 (return_stmt -> RETURN SEMI .)
    CLASS           reduce using rule 105 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 105 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 105 (return_stmt -> RETURN SEMI .)
    DEFAULT         reduce using rule 105 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 105 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 105 (return_stmt -> RETURN SEMI .)
    DO              reduce using rule 105 (return_stmt -> RETURN SEMI .)
    ID              reduce using rule 105 (return_stmt -> RETURN SEMI .)
    ECHO            reduce using rule 105 (return_stmt -> RETURN SEMI .)
    CLOSETAG        reduce using rule 105 (return_stmt -> RETURN SEMI .)
    LPAREN          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    NUM             reduce using rule 105 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    TRUE            reduce using rule 105 (return_stmt -> RETURN SEMI .)
    FALSE           reduce using rule 105 (return_stmt -> RETURN SEMI .)
    RBLOCK          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    LBLOCK          reduce using rule 105 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 105 (return_stmt -> RETURN SEMI .)


state 217

    (106) return_stmt -> RETURN expression . SEMI
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    SEMI            shift and go to state 264
    AND             shift and go to state 184
    OR              shift and go to state 185


state 218

    (102) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN statement
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    SEMI            shift and go to state 265
    AND             shift and go to state 184
    OR              shift and go to state 185


state 219

    (103) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    FUNCTION        reduce using rule 161 (empty -> .)
    REQUIRE         reduce using rule 161 (empty -> .)
    INCLUDE         reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]

    expression                     shift and go to state 144
    statement                      shift and go to state 266
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 220

    (104) iteration_stmt -> DO LBLOCK statement SEMI . RBLOCK WHILE LPAREN expression RPAREN

    RBLOCK          shift and go to state 267


state 221

    (25) class_declaration -> area CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 268


state 222

    (16) echo_params -> echo_param DOT echo_params .

    SEMI            reduce using rule 16 (echo_params -> echo_param DOT echo_params .)


state 223

    (149) factor -> IDVAR LPAREN args . RPAREN

    RPAREN          shift and go to state 269


state 224

    (150) args -> args_list .
    (153) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 150 (args -> args_list .)
    COMMA           shift and go to state 270


state 225

    (151) args -> empty .

    RPAREN          reduce using rule 151 (args -> empty .)


state 226

    (152) args -> VOID .

    RPAREN          reduce using rule 152 (args -> VOID .)


state 227

    (154) args_list -> expression .
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    COMMA           reduce using rule 154 (args_list -> expression .)
    RPAREN          reduce using rule 154 (args_list -> expression .)
    AND             shift and go to state 184
    OR              shift and go to state 185


state 228

    (116) simple_expression -> additive_expression relop additive_expression .
    (133) additive_expression -> additive_expression . addop term
    (138) addop -> . PLUS
    (139) addop -> . MINUS

    SEMI            reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    RBRACKET        reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    AND             reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 116 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174

    addop                          shift and go to state 157

state 229

    (133) additive_expression -> additive_expression addop term .
    (140) term -> term . mulop factor
    (142) mulop -> . TIMES
    (143) mulop -> . DIVIDE

    LESS            reduce using rule 133 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 133 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 133 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 133 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 133 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 133 (additive_expression -> additive_expression addop term .)
    ISEQUAL         reduce using rule 133 (additive_expression -> additive_expression addop term .)
    IS_IDENTICAL    reduce using rule 133 (additive_expression -> additive_expression addop term .)
    IS_NOT_IDENTICAL reduce using rule 133 (additive_expression -> additive_expression addop term .)
    SR_EQUAL        reduce using rule 133 (additive_expression -> additive_expression addop term .)
    SL_EQUAL        reduce using rule 133 (additive_expression -> additive_expression addop term .)
    AND_EQUAL       reduce using rule 133 (additive_expression -> additive_expression addop term .)
    OR_EQUAL        reduce using rule 133 (additive_expression -> additive_expression addop term .)
    XOR_EQUAL       reduce using rule 133 (additive_expression -> additive_expression addop term .)
    CONCAT_EQUAL    reduce using rule 133 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 133 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 133 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 133 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 133 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 133 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 133 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 133 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 133 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 178
    DIVIDE          shift and go to state 179

    mulop                          shift and go to state 177

state 230

    (140) term -> term mulop factor .

    MINUSMINUS      reduce using rule 140 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 140 (term -> term mulop factor .)
    TIMES           reduce using rule 140 (term -> term mulop factor .)
    DIVIDE          reduce using rule 140 (term -> term mulop factor .)
    LESS            reduce using rule 140 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 140 (term -> term mulop factor .)
    GREATER         reduce using rule 140 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 140 (term -> term mulop factor .)
    DEQUAL          reduce using rule 140 (term -> term mulop factor .)
    DISTINT         reduce using rule 140 (term -> term mulop factor .)
    ISEQUAL         reduce using rule 140 (term -> term mulop factor .)
    IS_IDENTICAL    reduce using rule 140 (term -> term mulop factor .)
    IS_NOT_IDENTICAL reduce using rule 140 (term -> term mulop factor .)
    SR_EQUAL        reduce using rule 140 (term -> term mulop factor .)
    SL_EQUAL        reduce using rule 140 (term -> term mulop factor .)
    AND_EQUAL       reduce using rule 140 (term -> term mulop factor .)
    OR_EQUAL        reduce using rule 140 (term -> term mulop factor .)
    XOR_EQUAL       reduce using rule 140 (term -> term mulop factor .)
    CONCAT_EQUAL    reduce using rule 140 (term -> term mulop factor .)
    PLUS            reduce using rule 140 (term -> term mulop factor .)
    MINUS           reduce using rule 140 (term -> term mulop factor .)
    SEMI            reduce using rule 140 (term -> term mulop factor .)
    RBRACKET        reduce using rule 140 (term -> term mulop factor .)
    AND             reduce using rule 140 (term -> term mulop factor .)
    OR              reduce using rule 140 (term -> term mulop factor .)
    COMMA           reduce using rule 140 (term -> term mulop factor .)
    RPAREN          reduce using rule 140 (term -> term mulop factor .)


state 231

    (144) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    SR_EQUAL        reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    SL_EQUAL        reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    AND_EQUAL       reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    OR_EQUAL        reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    XOR_EQUAL       reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    CONCAT_EQUAL    reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 144 (factor -> LPAREN expression RPAREN .)
    DARROW          reduce using rule 144 (factor -> LPAREN expression RPAREN .)


state 232

    (158) typeclass -> IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 158 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)


state 233

    (159) constructor -> ID LPAREN . RPAREN
    (160) constructor -> ID LPAREN . args RPAREN
    (150) args -> . args_list
    (151) args -> . empty
    (152) args -> . VOID
    (153) args_list -> . args_list COMMA expression
    (154) args_list -> . expression
    (161) empty -> .
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 271
    VOID            shift and go to state 226
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! RPAREN          [ reduce using rule 161 (empty -> .) ]

    args                           shift and go to state 272
    args_list                      shift and go to state 224
    empty                          shift and go to state 225
    expression                     shift and go to state 227
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 234

    (110) expression -> expression AND expression .
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RBRACKET        reduce using rule 110 (expression -> expression AND expression .)
    AND             reduce using rule 110 (expression -> expression AND expression .)
    OR              reduce using rule 110 (expression -> expression AND expression .)
    RPAREN          reduce using rule 110 (expression -> expression AND expression .)
    SEMI            reduce using rule 110 (expression -> expression AND expression .)
    COMMA           reduce using rule 110 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 184 ]
  ! OR              [ shift and go to state 185 ]


state 235

    (111) expression -> expression OR expression .
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RBRACKET        reduce using rule 111 (expression -> expression OR expression .)
    OR              reduce using rule 111 (expression -> expression OR expression .)
    RPAREN          reduce using rule 111 (expression -> expression OR expression .)
    SEMI            reduce using rule 111 (expression -> expression OR expression .)
    COMMA           reduce using rule 111 (expression -> expression OR expression .)
    AND             shift and go to state 184

  ! AND             [ reduce using rule 111 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 185 ]


state 236

    (107) expression -> assing_var EQUAL expression .
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RBRACKET        reduce using rule 107 (expression -> assing_var EQUAL expression .)
    RPAREN          reduce using rule 107 (expression -> assing_var EQUAL expression .)
    SEMI            reduce using rule 107 (expression -> assing_var EQUAL expression .)
    COMMA           reduce using rule 107 (expression -> assing_var EQUAL expression .)
    AND             shift and go to state 184
    OR              shift and go to state 185

  ! AND             [ reduce using rule 107 (expression -> assing_var EQUAL expression .) ]
  ! OR              [ reduce using rule 107 (expression -> assing_var EQUAL expression .) ]


state 237

    (109) expression -> assing_var EQUAL AMPERSANT . IDVAR

    IDVAR           shift and go to state 273


state 238

    (41) var_declaration -> assing_var IGUAL NUM SEMI var_declaration .

    IDVAR           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TIMESTIMES      reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    AMPERSANT       reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FUNCTION        reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRIVATE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PUBLIC          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PROTECTED       reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    REQUIRE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    INCLUDE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLASS           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    IF              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    SWITCH          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CASE            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DEFAULT         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FOR             reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    WHILE           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DO              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ID              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ECHO            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLOSETAG        reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LPAREN          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    NUM             reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    STRING          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TRUE            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FALSE           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RETURN          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)


state 239

    (43) var_declaration -> assing_var IGUAL STRING SEMI var_declaration .

    IDVAR           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TIMESTIMES      reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    AMPERSANT       reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FUNCTION        reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRIVATE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PUBLIC          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PROTECTED       reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    REQUIRE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    INCLUDE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLASS           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    IF              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    SWITCH          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CASE            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DEFAULT         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FOR             reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    WHILE           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DO              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ID              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ECHO            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLOSETAG        reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LPAREN          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    NUM             reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    STRING          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TRUE            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FALSE           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RETURN          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)


state 240

    (45) var_declaration -> assing_var IGUAL boolean SEMI var_declaration .

    IDVAR           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TIMESTIMES      reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    AMPERSANT       reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FUNCTION        reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRIVATE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PUBLIC          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PROTECTED       reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    REQUIRE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    INCLUDE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLASS           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    IF              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    SWITCH          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CASE            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DEFAULT         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FOR             reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    WHILE           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DO              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ID              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ECHO            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLOSETAG        reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LPAREN          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    NUM             reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    STRING          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TRUE            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FALSE           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RETURN          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)


state 241

    (47) var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    IF              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CASE            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FOR             reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DO              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ID              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    NUM             reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    STRING          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)


state 242

    (56) array_declare -> ARRAY LPAREN array_values . RPAREN

    RPAREN          shift and go to state 274


state 243

    (57) array_values -> array_value .
    (58) array_values -> array_value . COMMA array_values

    RPAREN          reduce using rule 57 (array_values -> array_value .)
    COMMA           shift and go to state 275


state 244

    (59) array_value -> factor . DARROW factor

    DARROW          shift and go to state 276


state 245

    (77) param_list -> param COMMA param_list .

    RPAREN          reduce using rule 77 (param_list -> param COMMA param_list .)


state 246

    (79) param -> IDVAR LBRACKET RBRACKET .

    COMMA           reduce using rule 79 (param -> IDVAR LBRACKET RBRACKET .)
    RPAREN          reduce using rule 79 (param -> IDVAR LBRACKET RBRACKET .)


state 247

    (51) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI . selection_stmt
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI

    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32

    selection_stmt                 shift and go to state 277

state 248

    (70) fun_declaration -> FUNCTION ID LPAREN params RPAREN .
    (71) fun_declaration -> FUNCTION ID LPAREN params RPAREN . compount_stmt
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

    IDVAR           reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    TIMESTIMES      reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    AMPERSANT       reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FUNCTION        reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRIVATE         reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PUBLIC          reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PROTECTED       reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    REQUIRE         reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    INCLUDE         reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLASS           reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    IF              reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SWITCH          reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CASE            reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DEFAULT         reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FOR             reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    WHILE           reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DO              reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ID              reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ECHO            reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLOSETAG        reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DOT             reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SEMI            reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 70 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 145

    compount_stmt                  shift and go to state 278

state 249

    (157) typeclass -> ID IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 279


state 250

    (23) header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)


state 251

    (24) header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)


state 252

    (26) class_declaration -> CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)


state 253

    (28) attributes -> attribute attributes .

    RBLOCK          reduce using rule 28 (attributes -> attribute attributes .)


state 254

    (29) attribute -> attribute area . var_declaration
    (31) attribute -> attribute area . fun_declaration
    (30) attribute -> area . var_declaration
    (32) attribute -> area . fun_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (70) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (71) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 86
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    ID              shift and go to state 84

    var_declaration                shift and go to state 280
    fun_declaration                shift and go to state 281
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 255

    (30) attribute -> area var_declaration .

    PRIVATE         reduce using rule 30 (attribute -> area var_declaration .)
    PUBLIC          reduce using rule 30 (attribute -> area var_declaration .)
    PROTECTED       reduce using rule 30 (attribute -> area var_declaration .)
    FUNCTION        reduce using rule 30 (attribute -> area var_declaration .)
    RBLOCK          reduce using rule 30 (attribute -> area var_declaration .)


state 256

    (32) attribute -> area fun_declaration .

    PRIVATE         reduce using rule 32 (attribute -> area fun_declaration .)
    PUBLIC          reduce using rule 32 (attribute -> area fun_declaration .)
    PROTECTED       reduce using rule 32 (attribute -> area fun_declaration .)
    FUNCTION        reduce using rule 32 (attribute -> area fun_declaration .)
    RBLOCK          reduce using rule 32 (attribute -> area fun_declaration .)


state 257

    (94) selection_stmt -> IF LPAREN expression RPAREN statement .
    (95) selection_stmt -> IF LPAREN expression RPAREN statement . selection
    (96) selection -> . ELSE statement
    (97) selection -> . ELSEIF statement selection

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    IDVAR           reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUM             reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 283
    ELSEIF          shift and go to state 284

  ! ELSE            [ reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 94 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]

    selection                      shift and go to state 282

state 258

    (98) selection_stmt -> SWITCH LPAREN var RPAREN statement .

    IDVAR           reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TIMESTIMES      reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    AMPERSANT       reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FUNCTION        reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRIVATE         reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PUBLIC          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PROTECTED       reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    REQUIRE         reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    INCLUDE         reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLASS           reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    IF              reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SWITCH          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CASE            reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DEFAULT         reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FOR             reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    WHILE           reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DO              reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ID              reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ECHO            reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLOSETAG        reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    BREAK           reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SEMI            reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSE            reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSEIF          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LPAREN          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    NUM             reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    STRING          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TRUE            reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FALSE           reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RBLOCK          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LBLOCK          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RETURN          reduce using rule 98 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)


state 259

    (99) selection_stmt -> CASE NUM COLON statement BREAK . SEMI

    SEMI            shift and go to state 285


state 260

    (100) selection_stmt -> CASE STRING COLON statement BREAK . SEMI

    SEMI            shift and go to state 286


state 261

    (101) selection_stmt -> DEFAULT COLON statement BREAK SEMI .

    IDVAR           reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLASS           reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    IF              reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CASE            reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FOR             reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    WHILE           reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DO              reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ID              reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ECHO            reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    BREAK           reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SEMI            reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSE            reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    NUM             reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    STRING          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TRUE            reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FALSE           reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RETURN          reduce using rule 101 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)


state 262

    (81) compount_stmt -> LBLOCK echo_stmt local_declarations . echo_stmt statement_list echo_stmt RBLOCK
    (82) local_declarations -> local_declarations . var_declaration
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . assing_var IGUAL array_declare SEMI
    (50) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (51) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (52) var_declaration -> . AMPERSANT IDVAR SEMI
    (53) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (54) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (55) var_declaration -> . fun_call SEMI
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 86
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    ECHO            reduce using rule 161 (empty -> .)
    LBLOCK          reduce using rule 161 (empty -> .)
    IF              reduce using rule 161 (empty -> .)
    SWITCH          reduce using rule 161 (empty -> .)
    CASE            reduce using rule 161 (empty -> .)
    DEFAULT         reduce using rule 161 (empty -> .)
    FOR             reduce using rule 161 (empty -> .)
    WHILE           reduce using rule 161 (empty -> .)
    DO              reduce using rule 161 (empty -> .)
    RETURN          reduce using rule 161 (empty -> .)
    CLASS           reduce using rule 161 (empty -> .)
    PRIVATE         reduce using rule 161 (empty -> .)
    PUBLIC          reduce using rule 161 (empty -> .)
    PROTECTED       reduce using rule 161 (empty -> .)
    LPAREN          reduce using rule 161 (empty -> .)
    NUM             reduce using rule 161 (empty -> .)
    STRING          reduce using rule 161 (empty -> .)
    TRUE            reduce using rule 161 (empty -> .)
    FALSE           reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84

  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! IDVAR           [ reduce using rule 161 (empty -> .) ]

    echo_stmt                      shift and go to state 287
    var_declaration                shift and go to state 288
    empty                          shift and go to state 27
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 263

    (83) local_declarations -> empty .

    IDVAR           reduce using rule 83 (local_declarations -> empty .)
    TIMESTIMES      reduce using rule 83 (local_declarations -> empty .)
    AMPERSANT       reduce using rule 83 (local_declarations -> empty .)
    ID              reduce using rule 83 (local_declarations -> empty .)
    ECHO            reduce using rule 83 (local_declarations -> empty .)
    LBLOCK          reduce using rule 83 (local_declarations -> empty .)
    IF              reduce using rule 83 (local_declarations -> empty .)
    SWITCH          reduce using rule 83 (local_declarations -> empty .)
    CASE            reduce using rule 83 (local_declarations -> empty .)
    DEFAULT         reduce using rule 83 (local_declarations -> empty .)
    FOR             reduce using rule 83 (local_declarations -> empty .)
    WHILE           reduce using rule 83 (local_declarations -> empty .)
    DO              reduce using rule 83 (local_declarations -> empty .)
    RETURN          reduce using rule 83 (local_declarations -> empty .)
    CLASS           reduce using rule 83 (local_declarations -> empty .)
    PRIVATE         reduce using rule 83 (local_declarations -> empty .)
    PUBLIC          reduce using rule 83 (local_declarations -> empty .)
    PROTECTED       reduce using rule 83 (local_declarations -> empty .)
    LPAREN          reduce using rule 83 (local_declarations -> empty .)
    NUM             reduce using rule 83 (local_declarations -> empty .)
    STRING          reduce using rule 83 (local_declarations -> empty .)
    TRUE            reduce using rule 83 (local_declarations -> empty .)
    FALSE           reduce using rule 83 (local_declarations -> empty .)
    RBLOCK          reduce using rule 83 (local_declarations -> empty .)


state 264

    (106) return_stmt -> RETURN expression SEMI .

    BREAK           reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    SEMI            reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    ELSE            reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    ELSEIF          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    IDVAR           reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    TIMESTIMES      reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    AMPERSANT       reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    PRIVATE         reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    PUBLIC          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    PROTECTED       reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    REQUIRE         reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    INCLUDE         reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    CLASS           reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    IF              reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    SWITCH          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    CASE            reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    FOR             reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    WHILE           reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    DO              reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    ID              reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    ECHO            reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    CLOSETAG        reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    LPAREN          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    NUM             reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    STRING          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    TRUE            reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    FALSE           reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    RBLOCK          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    LBLOCK          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)
    RETURN          reduce using rule 106 (return_stmt -> RETURN expression SEMI .)


state 265

    (102) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN statement
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    additive_expression            shift and go to state 289
    term                           shift and go to state 91
    fun_call                       shift and go to state 92
    factor                         shift and go to state 93
    assing_var                     shift and go to state 85
    var                            shift and go to state 95
    boolean                        shift and go to state 98

state 266

    (103) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    IDVAR           reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 103 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 267

    (104) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 290


state 268

    (25) class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)


state 269

    (149) factor -> IDVAR LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    TIMES           reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    DIVIDE          reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    LESS            reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    GREATER         reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    DEQUAL          reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    DISTINT         reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    ISEQUAL         reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    IS_IDENTICAL    reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    SR_EQUAL        reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    SL_EQUAL        reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    AND_EQUAL       reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    OR_EQUAL        reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    XOR_EQUAL       reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    CONCAT_EQUAL    reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    PLUS            reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    MINUS           reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    SEMI            reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    RBRACKET        reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    AND             reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    OR              reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    COMMA           reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    RPAREN          reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)
    DARROW          reduce using rule 149 (factor -> IDVAR LPAREN args RPAREN .)


state 270

    (153) args_list -> args_list COMMA . expression
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 291
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 271

    (159) constructor -> ID LPAREN RPAREN .

    SEMI            reduce using rule 159 (constructor -> ID LPAREN RPAREN .)


state 272

    (160) constructor -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 292


state 273

    (109) expression -> assing_var EQUAL AMPERSANT IDVAR .

    RBRACKET        reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    AND             reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    OR              reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    RPAREN          reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    SEMI            reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    COMMA           reduce using rule 109 (expression -> assing_var EQUAL AMPERSANT IDVAR .)


state 274

    (56) array_declare -> ARRAY LPAREN array_values RPAREN .

    SEMI            reduce using rule 56 (array_declare -> ARRAY LPAREN array_values RPAREN .)


state 275

    (58) array_values -> array_value COMMA . array_values
    (57) array_values -> . array_value
    (58) array_values -> . array_value COMMA array_values
    (59) array_value -> . factor DARROW factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    array_value                    shift and go to state 243
    array_values                   shift and go to state 293
    factor                         shift and go to state 244
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 276

    (59) array_value -> factor DARROW . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    IDVAR           shift and go to state 88
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    factor                         shift and go to state 294
    var                            shift and go to state 120
    boolean                        shift and go to state 98

state 277

    (51) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .

    IDVAR           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TIMESTIMES      reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    AMPERSANT       reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FUNCTION        reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRIVATE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PUBLIC          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PROTECTED       reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    REQUIRE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    INCLUDE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLASS           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    IF              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SWITCH          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CASE            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DEFAULT         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FOR             reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    WHILE           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DO              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ID              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ECHO            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLOSETAG        reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LPAREN          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    NUM             reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    STRING          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TRUE            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FALSE           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RBLOCK          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LBLOCK          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RETURN          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)


state 278

    (71) fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .

    IDVAR           reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    TIMESTIMES      reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    AMPERSANT       reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FUNCTION        reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRIVATE         reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PUBLIC          reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PROTECTED       reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    REQUIRE         reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    INCLUDE         reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLASS           reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    IF              reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SWITCH          reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CASE            reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DEFAULT         reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FOR             reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    WHILE           reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DO              reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ECHO            reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLOSETAG        reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DOT             reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SEMI            reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RBLOCK          reduce using rule 71 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)


state 279

    (157) typeclass -> ID IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 157 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)


state 280

    (29) attribute -> attribute area var_declaration .
    (30) attribute -> area var_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 29 (attribute -> attribute area var_declaration .)
    PRIVATE         reduce using rule 29 (attribute -> attribute area var_declaration .)
    PUBLIC          reduce using rule 29 (attribute -> attribute area var_declaration .)
    PROTECTED       reduce using rule 29 (attribute -> attribute area var_declaration .)
    FUNCTION        reduce using rule 29 (attribute -> attribute area var_declaration .)
    RBLOCK          reduce using rule 29 (attribute -> attribute area var_declaration .)

  ! PRIVATE         [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! PUBLIC          [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! PROTECTED       [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! FUNCTION        [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! RBLOCK          [ reduce using rule 30 (attribute -> area var_declaration .) ]


state 281

    (31) attribute -> attribute area fun_declaration .
    (32) attribute -> area fun_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 31 (attribute -> attribute area fun_declaration .)
    PRIVATE         reduce using rule 31 (attribute -> attribute area fun_declaration .)
    PUBLIC          reduce using rule 31 (attribute -> attribute area fun_declaration .)
    PROTECTED       reduce using rule 31 (attribute -> attribute area fun_declaration .)
    FUNCTION        reduce using rule 31 (attribute -> attribute area fun_declaration .)
    RBLOCK          reduce using rule 31 (attribute -> attribute area fun_declaration .)

  ! PRIVATE         [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! PUBLIC          [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! PROTECTED       [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! FUNCTION        [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! RBLOCK          [ reduce using rule 32 (attribute -> area fun_declaration .) ]


state 282

    (95) selection_stmt -> IF LPAREN expression RPAREN statement selection .

    IDVAR           reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TIMESTIMES      reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    AMPERSANT       reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FUNCTION        reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRIVATE         reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PUBLIC          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PROTECTED       reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    REQUIRE         reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    INCLUDE         reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLASS           reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    IF              reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SWITCH          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CASE            reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DEFAULT         reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FOR             reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    WHILE           reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DO              reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ID              reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ECHO            reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLOSETAG        reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    BREAK           reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SEMI            reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSE            reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSEIF          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LPAREN          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    NUM             reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    STRING          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TRUE            reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FALSE           reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RBLOCK          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LBLOCK          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RETURN          reduce using rule 95 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)


state 283

    (96) selection -> ELSE . statement
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    FUNCTION        reduce using rule 161 (empty -> .)
    REQUIRE         reduce using rule 161 (empty -> .)
    INCLUDE         reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]

    statement                      shift and go to state 295
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 284

    (97) selection -> ELSEIF . statement selection
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    statement                      shift and go to state 296
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 285

    (99) selection_stmt -> CASE NUM COLON statement BREAK SEMI .

    IDVAR           reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLASS           reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    IF              reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CASE            reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FOR             reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    WHILE           reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DO              reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ID              reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ECHO            reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    BREAK           reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SEMI            reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSE            reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    NUM             reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    STRING          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TRUE            reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FALSE           reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RETURN          reduce using rule 99 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)


state 286

    (100) selection_stmt -> CASE STRING COLON statement BREAK SEMI .

    IDVAR           reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLASS           reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    IF              reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CASE            reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FOR             reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    WHILE           reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DO              reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ID              reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ECHO            reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    BREAK           reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SEMI            reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSE            reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    NUM             reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    STRING          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TRUE            reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FALSE           reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RETURN          reduce using rule 100 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)


state 287

    (81) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt . statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (84) statement_list -> . statement_list statement
    (85) statement_list -> . empty
    (161) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 40
    LBLOCK          reduce using rule 161 (empty -> .)
    IF              reduce using rule 161 (empty -> .)
    SWITCH          reduce using rule 161 (empty -> .)
    CASE            reduce using rule 161 (empty -> .)
    DEFAULT         reduce using rule 161 (empty -> .)
    FOR             reduce using rule 161 (empty -> .)
    WHILE           reduce using rule 161 (empty -> .)
    DO              reduce using rule 161 (empty -> .)
    RETURN          reduce using rule 161 (empty -> .)
    CLASS           reduce using rule 161 (empty -> .)
    PRIVATE         reduce using rule 161 (empty -> .)
    PUBLIC          reduce using rule 161 (empty -> .)
    PROTECTED       reduce using rule 161 (empty -> .)
    ID              reduce using rule 161 (empty -> .)
    IDVAR           reduce using rule 161 (empty -> .)
    LPAREN          reduce using rule 161 (empty -> .)
    NUM             reduce using rule 161 (empty -> .)
    STRING          reduce using rule 161 (empty -> .)
    TRUE            reduce using rule 161 (empty -> .)
    FALSE           reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)

  ! ECHO            [ reduce using rule 161 (empty -> .) ]

    statement_list                 shift and go to state 297
    empty                          shift and go to state 298

state 288

    (82) local_declarations -> local_declarations var_declaration .

    IDVAR           reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    TIMESTIMES      reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    AMPERSANT       reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    CLASS           reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    PUBLIC          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    PROTECTED       reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 82 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 82 (local_declarations -> local_declarations var_declaration .)


state 289

    (102) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN statement
    (133) additive_expression -> additive_expression . addop term
    (138) addop -> . PLUS
    (139) addop -> . MINUS

    RPAREN          shift and go to state 299
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174

    addop                          shift and go to state 157

state 290

    (104) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 300


state 291

    (153) args_list -> args_list COMMA expression .
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    COMMA           reduce using rule 153 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 153 (args_list -> args_list COMMA expression .)
    AND             shift and go to state 184
    OR              shift and go to state 185


state 292

    (160) constructor -> ID LPAREN args RPAREN .

    SEMI            reduce using rule 160 (constructor -> ID LPAREN args RPAREN .)


state 293

    (58) array_values -> array_value COMMA array_values .

    RPAREN          reduce using rule 58 (array_values -> array_value COMMA array_values .)


state 294

    (59) array_value -> factor DARROW factor .

    COMMA           reduce using rule 59 (array_value -> factor DARROW factor .)
    RPAREN          reduce using rule 59 (array_value -> factor DARROW factor .)


state 295

    (96) selection -> ELSE statement .

    ELSE            reduce using rule 96 (selection -> ELSE statement .)
    ELSEIF          reduce using rule 96 (selection -> ELSE statement .)
    IDVAR           reduce using rule 96 (selection -> ELSE statement .)
    TIMESTIMES      reduce using rule 96 (selection -> ELSE statement .)
    AMPERSANT       reduce using rule 96 (selection -> ELSE statement .)
    FUNCTION        reduce using rule 96 (selection -> ELSE statement .)
    PRIVATE         reduce using rule 96 (selection -> ELSE statement .)
    PUBLIC          reduce using rule 96 (selection -> ELSE statement .)
    PROTECTED       reduce using rule 96 (selection -> ELSE statement .)
    REQUIRE         reduce using rule 96 (selection -> ELSE statement .)
    INCLUDE         reduce using rule 96 (selection -> ELSE statement .)
    CLASS           reduce using rule 96 (selection -> ELSE statement .)
    IF              reduce using rule 96 (selection -> ELSE statement .)
    SWITCH          reduce using rule 96 (selection -> ELSE statement .)
    CASE            reduce using rule 96 (selection -> ELSE statement .)
    DEFAULT         reduce using rule 96 (selection -> ELSE statement .)
    FOR             reduce using rule 96 (selection -> ELSE statement .)
    WHILE           reduce using rule 96 (selection -> ELSE statement .)
    DO              reduce using rule 96 (selection -> ELSE statement .)
    ID              reduce using rule 96 (selection -> ELSE statement .)
    ECHO            reduce using rule 96 (selection -> ELSE statement .)
    CLOSETAG        reduce using rule 96 (selection -> ELSE statement .)
    BREAK           reduce using rule 96 (selection -> ELSE statement .)
    SEMI            reduce using rule 96 (selection -> ELSE statement .)
    LPAREN          reduce using rule 96 (selection -> ELSE statement .)
    NUM             reduce using rule 96 (selection -> ELSE statement .)
    STRING          reduce using rule 96 (selection -> ELSE statement .)
    TRUE            reduce using rule 96 (selection -> ELSE statement .)
    FALSE           reduce using rule 96 (selection -> ELSE statement .)
    RBLOCK          reduce using rule 96 (selection -> ELSE statement .)
    LBLOCK          reduce using rule 96 (selection -> ELSE statement .)
    RETURN          reduce using rule 96 (selection -> ELSE statement .)


state 296

    (97) selection -> ELSEIF statement . selection
    (96) selection -> . ELSE statement
    (97) selection -> . ELSEIF statement selection

    ELSE            shift and go to state 283
    ELSEIF          shift and go to state 284

    selection                      shift and go to state 301

state 297

    (81) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list . echo_stmt RBLOCK
    (84) statement_list -> statement_list . statement
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (161) empty -> .
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBLOCK          reduce using rule 161 (empty -> .)
    ECHO            reduce using rule 161 (empty -> .)
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]

    echo_stmt                      shift and go to state 302
    statement                      shift and go to state 303
    empty                          shift and go to state 27
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    expression                     shift and go to state 144
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    area                           shift and go to state 147
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 298

    (85) statement_list -> empty .

    LBLOCK          reduce using rule 85 (statement_list -> empty .)
    IF              reduce using rule 85 (statement_list -> empty .)
    SWITCH          reduce using rule 85 (statement_list -> empty .)
    CASE            reduce using rule 85 (statement_list -> empty .)
    DEFAULT         reduce using rule 85 (statement_list -> empty .)
    FOR             reduce using rule 85 (statement_list -> empty .)
    WHILE           reduce using rule 85 (statement_list -> empty .)
    DO              reduce using rule 85 (statement_list -> empty .)
    RETURN          reduce using rule 85 (statement_list -> empty .)
    CLASS           reduce using rule 85 (statement_list -> empty .)
    PRIVATE         reduce using rule 85 (statement_list -> empty .)
    PUBLIC          reduce using rule 85 (statement_list -> empty .)
    PROTECTED       reduce using rule 85 (statement_list -> empty .)
    ID              reduce using rule 85 (statement_list -> empty .)
    IDVAR           reduce using rule 85 (statement_list -> empty .)
    LPAREN          reduce using rule 85 (statement_list -> empty .)
    NUM             reduce using rule 85 (statement_list -> empty .)
    STRING          reduce using rule 85 (statement_list -> empty .)
    TRUE            reduce using rule 85 (statement_list -> empty .)
    FALSE           reduce using rule 85 (statement_list -> empty .)
    RBLOCK          reduce using rule 85 (statement_list -> empty .)
    ECHO            reduce using rule 85 (statement_list -> empty .)


state 299

    (102) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . statement
    (86) statement -> . expression_stmt
    (87) statement -> . compount_stmt
    (88) statement -> . selection_stmt
    (89) statement -> . iteration_stmt
    (90) statement -> . return_stmt
    (91) statement -> . class_declaration
    (92) statement -> . echo_stmt
    (93) expression_stmt -> . expression SEMI
    (81) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (94) selection_stmt -> . IF LPAREN expression RPAREN statement
    (95) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (98) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (99) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (100) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (101) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (102) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (103) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (104) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (105) return_stmt -> . RETURN SEMI
    (106) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (161) empty -> .
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 145
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 146
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 161 (empty -> .)
    ELSE            reduce using rule 161 (empty -> .)
    ELSEIF          reduce using rule 161 (empty -> .)
    TIMESTIMES      reduce using rule 161 (empty -> .)
    AMPERSANT       reduce using rule 161 (empty -> .)
    FUNCTION        reduce using rule 161 (empty -> .)
    REQUIRE         reduce using rule 161 (empty -> .)
    INCLUDE         reduce using rule 161 (empty -> .)
    CLOSETAG        reduce using rule 161 (empty -> .)
    BREAK           reduce using rule 161 (empty -> .)
    SEMI            reduce using rule 161 (empty -> .)
    RBLOCK          reduce using rule 161 (empty -> .)
    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

  ! IDVAR           [ reduce using rule 161 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 161 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 161 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 161 (empty -> .) ]
  ! CLASS           [ reduce using rule 161 (empty -> .) ]
  ! IF              [ reduce using rule 161 (empty -> .) ]
  ! SWITCH          [ reduce using rule 161 (empty -> .) ]
  ! CASE            [ reduce using rule 161 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 161 (empty -> .) ]
  ! FOR             [ reduce using rule 161 (empty -> .) ]
  ! WHILE           [ reduce using rule 161 (empty -> .) ]
  ! DO              [ reduce using rule 161 (empty -> .) ]
  ! ID              [ reduce using rule 161 (empty -> .) ]
  ! LPAREN          [ reduce using rule 161 (empty -> .) ]
  ! NUM             [ reduce using rule 161 (empty -> .) ]
  ! STRING          [ reduce using rule 161 (empty -> .) ]
  ! TRUE            [ reduce using rule 161 (empty -> .) ]
  ! FALSE           [ reduce using rule 161 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 161 (empty -> .) ]
  ! RETURN          [ reduce using rule 161 (empty -> .) ]

    expression                     shift and go to state 144
    additive_expression            shift and go to state 90
    statement                      shift and go to state 304
    expression_stmt                shift and go to state 137
    compount_stmt                  shift and go to state 138
    selection_stmt                 shift and go to state 139
    iteration_stmt                 shift and go to state 140
    return_stmt                    shift and go to state 141
    class_declaration              shift and go to state 142
    echo_stmt                      shift and go to state 143
    var                            shift and go to state 105
    area                           shift and go to state 147
    empty                          shift and go to state 27
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 300

    (104) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN . expression RPAREN
    (107) expression -> . assing_var EQUAL expression
    (108) expression -> . simple_expression
    (109) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (110) expression -> . expression AND expression
    (111) expression -> . expression OR expression
    (112) expression -> . assing_var
    (113) expression -> . fun_call
    (60) assing_var -> . var
    (61) assing_var -> . var ARROW ID
    (62) assing_var -> . var DARROW ID
    (116) simple_expression -> . additive_expression relop additive_expression
    (117) simple_expression -> . additive_expression
    (72) fun_call -> . ID LPAREN params RPAREN
    (73) fun_call -> . assing_var LPAREN params RPAREN
    (114) var -> . IDVAR
    (115) var -> . IDVAR LBRACKET expression RBRACKET
    (133) additive_expression -> . additive_expression addop term
    (134) additive_expression -> . term
    (135) additive_expression -> . term MINUSMINUS
    (136) additive_expression -> . term PLUSPLUS
    (137) additive_expression -> . fun_call
    (140) term -> . term mulop factor
    (141) term -> . factor
    (144) factor -> . LPAREN expression RPAREN
    (145) factor -> . var
    (146) factor -> . NUM
    (147) factor -> . STRING
    (148) factor -> . boolean
    (149) factor -> . IDVAR LPAREN args RPAREN
    (155) boolean -> . TRUE
    (156) boolean -> . FALSE

    ID              shift and go to state 84
    IDVAR           shift and go to state 100
    LPAREN          shift and go to state 94
    NUM             shift and go to state 96
    STRING          shift and go to state 97
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expression                     shift and go to state 305
    assing_var                     shift and go to state 102
    simple_expression              shift and go to state 103
    fun_call                       shift and go to state 104
    var                            shift and go to state 105
    additive_expression            shift and go to state 90
    term                           shift and go to state 91
    factor                         shift and go to state 93
    boolean                        shift and go to state 98

state 301

    (97) selection -> ELSEIF statement selection .

    ELSE            reduce using rule 97 (selection -> ELSEIF statement selection .)
    ELSEIF          reduce using rule 97 (selection -> ELSEIF statement selection .)
    IDVAR           reduce using rule 97 (selection -> ELSEIF statement selection .)
    TIMESTIMES      reduce using rule 97 (selection -> ELSEIF statement selection .)
    AMPERSANT       reduce using rule 97 (selection -> ELSEIF statement selection .)
    FUNCTION        reduce using rule 97 (selection -> ELSEIF statement selection .)
    PRIVATE         reduce using rule 97 (selection -> ELSEIF statement selection .)
    PUBLIC          reduce using rule 97 (selection -> ELSEIF statement selection .)
    PROTECTED       reduce using rule 97 (selection -> ELSEIF statement selection .)
    REQUIRE         reduce using rule 97 (selection -> ELSEIF statement selection .)
    INCLUDE         reduce using rule 97 (selection -> ELSEIF statement selection .)
    CLASS           reduce using rule 97 (selection -> ELSEIF statement selection .)
    IF              reduce using rule 97 (selection -> ELSEIF statement selection .)
    SWITCH          reduce using rule 97 (selection -> ELSEIF statement selection .)
    CASE            reduce using rule 97 (selection -> ELSEIF statement selection .)
    DEFAULT         reduce using rule 97 (selection -> ELSEIF statement selection .)
    FOR             reduce using rule 97 (selection -> ELSEIF statement selection .)
    WHILE           reduce using rule 97 (selection -> ELSEIF statement selection .)
    DO              reduce using rule 97 (selection -> ELSEIF statement selection .)
    ID              reduce using rule 97 (selection -> ELSEIF statement selection .)
    ECHO            reduce using rule 97 (selection -> ELSEIF statement selection .)
    CLOSETAG        reduce using rule 97 (selection -> ELSEIF statement selection .)
    BREAK           reduce using rule 97 (selection -> ELSEIF statement selection .)
    SEMI            reduce using rule 97 (selection -> ELSEIF statement selection .)
    LPAREN          reduce using rule 97 (selection -> ELSEIF statement selection .)
    NUM             reduce using rule 97 (selection -> ELSEIF statement selection .)
    STRING          reduce using rule 97 (selection -> ELSEIF statement selection .)
    TRUE            reduce using rule 97 (selection -> ELSEIF statement selection .)
    FALSE           reduce using rule 97 (selection -> ELSEIF statement selection .)
    RBLOCK          reduce using rule 97 (selection -> ELSEIF statement selection .)
    LBLOCK          reduce using rule 97 (selection -> ELSEIF statement selection .)
    RETURN          reduce using rule 97 (selection -> ELSEIF statement selection .)


state 302

    (81) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt . RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (92) statement -> echo_stmt .

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
    RBLOCK          shift and go to state 306
    ECHO            shift and go to state 40
    LBLOCK          reduce using rule 92 (statement -> echo_stmt .)
    IF              reduce using rule 92 (statement -> echo_stmt .)
    SWITCH          reduce using rule 92 (statement -> echo_stmt .)
    CASE            reduce using rule 92 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 92 (statement -> echo_stmt .)
    FOR             reduce using rule 92 (statement -> echo_stmt .)
    WHILE           reduce using rule 92 (statement -> echo_stmt .)
    DO              reduce using rule 92 (statement -> echo_stmt .)
    RETURN          reduce using rule 92 (statement -> echo_stmt .)
    CLASS           reduce using rule 92 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 92 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 92 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 92 (statement -> echo_stmt .)
    ID              reduce using rule 92 (statement -> echo_stmt .)
    IDVAR           reduce using rule 92 (statement -> echo_stmt .)
    LPAREN          reduce using rule 92 (statement -> echo_stmt .)
    NUM             reduce using rule 92 (statement -> echo_stmt .)
    STRING          reduce using rule 92 (statement -> echo_stmt .)
    TRUE            reduce using rule 92 (statement -> echo_stmt .)
    FALSE           reduce using rule 92 (statement -> echo_stmt .)

  ! RBLOCK          [ reduce using rule 92 (statement -> echo_stmt .) ]
  ! ECHO            [ reduce using rule 92 (statement -> echo_stmt .) ]


state 303

    (84) statement_list -> statement_list statement .

    LBLOCK          reduce using rule 84 (statement_list -> statement_list statement .)
    IF              reduce using rule 84 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 84 (statement_list -> statement_list statement .)
    CASE            reduce using rule 84 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 84 (statement_list -> statement_list statement .)
    FOR             reduce using rule 84 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 84 (statement_list -> statement_list statement .)
    DO              reduce using rule 84 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 84 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 84 (statement_list -> statement_list statement .)
    PRIVATE         reduce using rule 84 (statement_list -> statement_list statement .)
    PUBLIC          reduce using rule 84 (statement_list -> statement_list statement .)
    PROTECTED       reduce using rule 84 (statement_list -> statement_list statement .)
    ID              reduce using rule 84 (statement_list -> statement_list statement .)
    IDVAR           reduce using rule 84 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 84 (statement_list -> statement_list statement .)
    NUM             reduce using rule 84 (statement_list -> statement_list statement .)
    STRING          reduce using rule 84 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 84 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 84 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 84 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 84 (statement_list -> statement_list statement .)


state 304

    (102) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .

    IDVAR           reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TIMESTIMES      reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    AMPERSANT       reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PRIVATE         reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PUBLIC          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PROTECTED       reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    REQUIRE         reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    INCLUDE         reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLASS           reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    IF              reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SWITCH          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CASE            reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FOR             reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    WHILE           reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DO              reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ID              reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ECHO            reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLOSETAG        reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    BREAK           reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SEMI            reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSE            reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LPAREN          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    NUM             reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    STRING          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TRUE            reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FALSE           reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RBLOCK          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LBLOCK          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RETURN          reduce using rule 102 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)


state 305

    (104) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression . RPAREN
    (110) expression -> expression . AND expression
    (111) expression -> expression . OR expression

    RPAREN          shift and go to state 307
    AND             shift and go to state 184
    OR              shift and go to state 185


state 306

    (81) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .

    BREAK           reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SEMI            reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSE            reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSEIF          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IDVAR           reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TIMESTIMES      reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    AMPERSANT       reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FUNCTION        reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRIVATE         reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PUBLIC          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PROTECTED       reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    REQUIRE         reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    INCLUDE         reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLASS           reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IF              reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SWITCH          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CASE            reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DEFAULT         reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FOR             reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    WHILE           reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DO              reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ID              reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ECHO            reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLOSETAG        reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LPAREN          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    NUM             reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    STRING          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TRUE            reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FALSE           reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RBLOCK          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LBLOCK          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RETURN          reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DOT             reduce using rule 81 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)


state 307

    (104) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .

    IDVAR           reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TIMESTIMES      reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRIVATE         reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PUBLIC          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PROTECTED       reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    REQUIRE         reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    INCLUDE         reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLASS           reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SWITCH          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CASE            reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DEFAULT         reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ID              reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ECHO            reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLOSETAG        reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SEMI            reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSEIF          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    NUM             reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LBLOCK          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 104 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDVAR in state 2 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 2 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 2 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 4 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 4 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 4 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 4 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 4 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 4 resolved as shift
WARNING: shift/reduce conflict for CASE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 10 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MUL_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for DIV_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for CONCAT_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MOD_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for PLUS_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS_EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for MUL_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for CONCAT_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for MOD_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS_EQUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 88 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 100 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 107 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 108 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 109 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 110 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 110 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 143 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 209 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 209 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 209 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 209 resolved as shift
WARNING: shift/reduce conflict for CASE in state 209 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 209 resolved as shift
WARNING: shift/reduce conflict for FOR in state 209 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 209 resolved as shift
WARNING: shift/reduce conflict for DO in state 209 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 209 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 209 resolved as shift
WARNING: shift/reduce conflict for ID in state 209 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 209 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 209 resolved as shift
WARNING: shift/reduce conflict for NUM in state 209 resolved as shift
WARNING: shift/reduce conflict for STRING in state 209 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 209 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 209 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 210 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 210 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 210 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 210 resolved as shift
WARNING: shift/reduce conflict for IF in state 210 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 210 resolved as shift
WARNING: shift/reduce conflict for CASE in state 210 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 210 resolved as shift
WARNING: shift/reduce conflict for FOR in state 210 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 210 resolved as shift
WARNING: shift/reduce conflict for DO in state 210 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 210 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 210 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 210 resolved as shift
WARNING: shift/reduce conflict for NUM in state 210 resolved as shift
WARNING: shift/reduce conflict for STRING in state 210 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 210 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 210 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 215 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 219 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 219 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 219 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 219 resolved as shift
WARNING: shift/reduce conflict for IF in state 219 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 219 resolved as shift
WARNING: shift/reduce conflict for CASE in state 219 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 219 resolved as shift
WARNING: shift/reduce conflict for FOR in state 219 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 219 resolved as shift
WARNING: shift/reduce conflict for DO in state 219 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 219 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 219 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 219 resolved as shift
WARNING: shift/reduce conflict for NUM in state 219 resolved as shift
WARNING: shift/reduce conflict for STRING in state 219 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 219 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 219 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 233 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 257 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 257 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 262 resolved as shift
WARNING: shift/reduce conflict for ID in state 262 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 283 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 283 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 283 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 283 resolved as shift
WARNING: shift/reduce conflict for IF in state 283 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 283 resolved as shift
WARNING: shift/reduce conflict for CASE in state 283 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 283 resolved as shift
WARNING: shift/reduce conflict for FOR in state 283 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 283 resolved as shift
WARNING: shift/reduce conflict for DO in state 283 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 283 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 283 resolved as shift
WARNING: shift/reduce conflict for ID in state 283 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 283 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 283 resolved as shift
WARNING: shift/reduce conflict for NUM in state 283 resolved as shift
WARNING: shift/reduce conflict for STRING in state 283 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 283 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 283 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 287 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 297 resolved as shift
WARNING: shift/reduce conflict for IF in state 297 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 297 resolved as shift
WARNING: shift/reduce conflict for CASE in state 297 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 297 resolved as shift
WARNING: shift/reduce conflict for FOR in state 297 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 297 resolved as shift
WARNING: shift/reduce conflict for DO in state 297 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 297 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 297 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 297 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 297 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 297 resolved as shift
WARNING: shift/reduce conflict for ID in state 297 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 297 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 297 resolved as shift
WARNING: shift/reduce conflict for NUM in state 297 resolved as shift
WARNING: shift/reduce conflict for STRING in state 297 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 297 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 297 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 299 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 299 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 299 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 299 resolved as shift
WARNING: shift/reduce conflict for IF in state 299 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 299 resolved as shift
WARNING: shift/reduce conflict for CASE in state 299 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 299 resolved as shift
WARNING: shift/reduce conflict for FOR in state 299 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 299 resolved as shift
WARNING: shift/reduce conflict for DO in state 299 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 299 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 299 resolved as shift
WARNING: shift/reduce conflict for ID in state 299 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 299 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 299 resolved as shift
WARNING: shift/reduce conflict for NUM in state 299 resolved as shift
WARNING: shift/reduce conflict for STRING in state 299 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 299 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 299 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 302 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 302 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (declaration_list -> declaration)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 104 resolved using rule (expression -> fun_call)
WARNING: rejected rule (additive_expression -> fun_call) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (assing_var -> var)
WARNING: rejected rule (factor -> var) in state 105
WARNING: reduce/reduce conflict in state 118 resolved using rule (param -> IDVAR)
WARNING: rejected rule (var -> IDVAR) in state 118
WARNING: reduce/reduce conflict in state 280 resolved using rule (attribute -> attribute area var_declaration)
WARNING: rejected rule (attribute -> area var_declaration) in state 280
WARNING: reduce/reduce conflict in state 281 resolved using rule (attribute -> attribute area fun_declaration)
WARNING: rejected rule (attribute -> area fun_declaration) in state 281
