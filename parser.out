Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    ARRAY
    ARROW
    AS
    CALLABLE
    CATCH
    CLONE
    CLOSETAGAL
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DECLARE
    DIE
    DOT
    DOT_DOT
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    PLUSEQUAL
    PRINT
    QUOTES
    REQUIRE_ONCE
    STATIC
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    XOR
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENTAG declaration_list CLOSETAG
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> area fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     declaration -> echo_stmt
Rule 10    declaration -> selection_stmt
Rule 11    declaration -> iteration_stmt
Rule 12    declaration -> typeclass
Rule 13    echo_stmt -> echo_stmt ECHO STRING SEMI
Rule 14    echo_stmt -> echo_stmt ECHO IDVAR SEMI
Rule 15    echo_stmt -> empty
Rule 16    echo_stmt -> echo_stmt ECHO NUM SEMI
Rule 17    echo_stmt -> echo_stmt ECHO boolean SEMI
Rule 18    echo_stmt -> echo_stmt ECHO fun_declaration SEMI
Rule 19    header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI
Rule 20    header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI
Rule 21    class_declaration -> area CLASS ID LBLOCK attribute RBLOCK
Rule 22    class_declaration -> CLASS ID LBLOCK attribute RBLOCK
Rule 23    attribute -> attribute area var_declaration
Rule 24    attribute -> area var_declaration
Rule 25    attribute -> attribute area fun_declaration
Rule 26    attribute -> area fun_declaration
Rule 27    area -> PRIVATE
Rule 28    area -> PUBLIC
Rule 29    area -> PROTECTED
Rule 30    var_declaration -> IDVAR SEMI var_declaration
Rule 31    var_declaration -> IDVAR SEMI
Rule 32    var_declaration -> TIMESTIMES IDVAR SEMI
Rule 33    var_declaration -> TIMESTIMES IDVAR SEMI var_declaration
Rule 34    var_declaration -> IDVAR IGUAL NUM SEMI var_declaration
Rule 35    var_declaration -> IDVAR IGUAL NUM SEMI
Rule 36    var_declaration -> IDVAR IGUAL STRING SEMI var_declaration
Rule 37    var_declaration -> IDVAR IGUAL STRING SEMI
Rule 38    var_declaration -> IDVAR IGUAL boolean SEMI var_declaration
Rule 39    var_declaration -> IDVAR IGUAL boolean SEMI
Rule 40    var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration
Rule 41    var_declaration -> IDVAR IGUAL IDVAR SEMI
Rule 42    var_declaration -> AMPERSANT IDVAR SEMI var_declaration
Rule 43    var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
Rule 44    var_declaration -> AMPERSANT IDVAR SEMI
Rule 45    var_declaration -> IDVAR IGUAL simple_expression SEMI
Rule 46    IGUAL -> EQUAL
Rule 47    IGUAL -> MUL_EQUAL
Rule 48    IGUAL -> DIV_EQUAL
Rule 49    IGUAL -> CONCAT_EQUAL
Rule 50    IGUAL -> MOD_EQUAL
Rule 51    IGUAL -> PLUS_EQUAL
Rule 52    IGUAL -> MINUS_EQUAL
Rule 53    fun_declaration -> FUNCTION ID LPAREN params RPAREN
Rule 54    fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt
Rule 55    params -> param_list
Rule 56    params -> empty
Rule 57    param_list -> param_list COMMA param_list
Rule 58    param_list -> param
Rule 59    param -> IDVAR
Rule 60    param -> IDVAR LBRACKET RBRACKET
Rule 61    compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
Rule 62    local_declarations -> local_declarations var_declaration
Rule 63    local_declarations -> empty
Rule 64    statement_list -> statement_list statement
Rule 65    statement_list -> empty
Rule 66    statement -> expression_stmt
Rule 67    statement -> compount_stmt
Rule 68    statement -> selection_stmt
Rule 69    statement -> iteration_stmt
Rule 70    statement -> return_stmt
Rule 71    statement -> class_declaration
Rule 72    statement -> echo_stmt
Rule 73    expression_stmt -> expression SEMI
Rule 74    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 75    selection_stmt -> IF LPAREN expression RPAREN statement selection
Rule 76    selection -> ELSE statement
Rule 77    selection -> ELSEIF statement selection
Rule 78    selection_stmt -> SWITCH LPAREN var RPAREN statement
Rule 79    selection_stmt -> CASE NUM COLON statement BREAK SEMI
Rule 80    selection_stmt -> CASE STRING COLON statement BREAK SEMI
Rule 81    selection_stmt -> DEFAULT COLON statement BREAK SEMI
Rule 82    iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
Rule 83    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 84    iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
Rule 85    return_stmt -> RETURN SEMI
Rule 86    return_stmt -> RETURN expression SEMI
Rule 87    expression -> var EQUAL expression
Rule 88    expression -> simple_expression
Rule 89    expression -> var EQUAL AMPERSANT IDVAR
Rule 90    expression -> expression AND expression
Rule 91    expression -> expression OR expression
Rule 92    var -> IDVAR
Rule 93    var -> IDVAR LBRACKET expression RBRACKET
Rule 94    simple_expression -> additive_expression relop additive_expression
Rule 95    simple_expression -> additive_expression
Rule 96    relop -> LESS
Rule 97    relop -> LESSEQUAL
Rule 98    relop -> GREATER
Rule 99    relop -> GREATEREQUAL
Rule 100   relop -> DEQUAL
Rule 101   relop -> DISTINT
Rule 102   relop -> ISEQUAL
Rule 103   relop -> IS_IDENTICAL
Rule 104   relop -> IS_NOT_IDENTICAL
Rule 105   relop -> SR_EQUAL
Rule 106   relop -> SL_EQUAL
Rule 107   relop -> AND_EQUAL
Rule 108   relop -> OR_EQUAL
Rule 109   relop -> XOR_EQUAL
Rule 110   relop -> CONCAT_EQUAL
Rule 111   additive_expression -> additive_expression addop term
Rule 112   additive_expression -> term
Rule 113   additive_expression -> term MINUSMINUS
Rule 114   additive_expression -> term PLUSPLUS
Rule 115   addop -> PLUS
Rule 116   addop -> MINUS
Rule 117   term -> term mulop factor
Rule 118   term -> factor
Rule 119   mulop -> TIMES
Rule 120   mulop -> DIVIDE
Rule 121   factor -> LPAREN expression RPAREN
Rule 122   factor -> var
Rule 123   factor -> NUM
Rule 124   factor -> STRING
Rule 125   factor -> boolean
Rule 126   factor -> IDVAR LPAREN args RPAREN
Rule 127   args -> args_list
Rule 128   args -> empty
Rule 129   args -> VOID
Rule 130   args_list -> args_list COMMA expression
Rule 131   args_list -> expression
Rule 132   boolean -> TRUE
Rule 133   boolean -> FALSE
Rule 134   typeclass -> ID IDVAR EQUAL NEW constructor SEMI
Rule 135   constructor -> ID LPAREN RPAREN
Rule 136   constructor -> ID LPAREN args RPAREN
Rule 137   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 42 43 44 89
AND                  : 90
AND_EQUAL            : 107
APOSTROPHE           : 
ARRAY                : 
ARROW                : 
AS                   : 
BREAK                : 79 80 81
CALLABLE             : 
CASE                 : 79 80
CATCH                : 
CLASS                : 21 22
CLONE                : 
CLOSETAG             : 1
CLOSETAGAL           : 
COLON                : 79 80 81
COMMA                : 57 130
COMMENTS             : 
COMMENTS_C99         : 
CONCAT_EQUAL         : 49 110
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 81
DEQUAL               : 100
DIE                  : 
DISTINT              : 101
DIVIDE               : 120
DIV_EQUAL            : 48
DO                   : 84
DOT                  : 
DOT_DOT              : 
ECHO                 : 13 14 16 17 18
ELSE                 : 76
ELSEIF               : 77
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 46 87 89 134
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 133
FINALLY              : 
FOR                  : 82
FOREACH              : 
FUNCTION             : 53 54
GLOBAL               : 
GOTO                 : 
GREATER              : 98
GREATEREQUAL         : 99
HASHTAG              : 
ID                   : 21 22 53 54 134 135 136
IDVAR                : 14 30 31 32 33 34 35 36 37 38 39 40 40 41 41 42 43 43 44 45 59 60 89 92 93 126 134
IF                   : 74 75
IMPLEMENTS           : 
INCLUDE              : 20
INCLUDE_ONCE         : 
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
ISEQUAL              : 102
ISSET                : 
IS_IDENTICAL         : 103
IS_NOT_IDENTICAL     : 104
LBLOCK               : 21 22 61 84
LBRACKET             : 60 93
LESS                 : 96
LESSEQUAL            : 97
LIST                 : 
LPAREN               : 19 20 53 54 74 75 78 82 83 84 121 126 135 136
MINUS                : 116
MINUSEQUAL           : 
MINUSMINUS           : 113
MINUS_EQUAL          : 52
MOD_EQUAL            : 50
MUL_EQUAL            : 47
NAMESPACE            : 
NEW                  : 134
NUM                  : 16 34 35 79 123
OPENTAG              : 1
OR                   : 91
OR_EQUAL             : 108
PLUS                 : 115
PLUSEQUAL            : 
PLUSPLUS             : 114
PLUS_EQUAL           : 51
PRINT                : 
PRIVATE              : 27
PROTECTED            : 29
PUBLIC               : 28
QUOTES               : 
RBLOCK               : 21 22 61 84
RBRACKET             : 60 93
REQUIRE              : 19
REQUIRE_ONCE         : 
RETURN               : 85 86
RPAREN               : 19 20 53 54 74 75 78 82 83 84 121 126 135 136
SEMI                 : 13 14 16 17 18 19 20 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 73 79 80 81 82 82 84 85 86 134
SL_EQUAL             : 106
SR_EQUAL             : 105
STATIC               : 
STRING               : 13 19 20 36 37 80 124
SWITCH               : 78
THROW                : 
TIMES                : 119
TIMESTIMES           : 32 33
TRAIT                : 
TRUE                 : 132
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VOID                 : 129
WHILE                : 83 84
XOR                  : 
XOR_EQUAL            : 109
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

IGUAL                : 34 35 36 37 38 39 40 41 43 45
additive_expression  : 82 94 94 95 111
addop                : 111
area                 : 6 21 23 24 25 26
args                 : 126 136
args_list            : 127 130
attribute            : 21 22 23 25
boolean              : 17 38 39 125
class_declaration    : 8 71
compount_stmt        : 54 67
constructor          : 134
declaration          : 2 3
declaration_list     : 1 3
echo_stmt            : 9 13 14 16 17 18 61 61 61 72
empty                : 15 56 63 65 128
expression           : 73 74 75 82 83 84 86 87 90 90 91 91 93 121 130 131
expression_stmt      : 66
factor               : 117 118
fun_declaration      : 5 6 18 25 26
header_declaration   : 7
iteration_stmt       : 11 69
local_declarations   : 61 62
mulop                : 117
param                : 58
param_list           : 55 57 57
params               : 53 54
program              : 0
relop                : 94
return_stmt          : 70
selection            : 75 77
selection_stmt       : 10 43 68
simple_expression    : 45 88
statement            : 64 74 75 76 77 78 79 80 81 82 83 84
statement_list       : 61 64
term                 : 111 112 113 114 117
typeclass            : 12
var                  : 78 87 89 122
var_declaration      : 4 23 24 30 33 34 36 38 40 42 62 82

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENTAG declaration_list CLOSETAG

    OPENTAG         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENTAG . declaration_list CLOSETAG
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (19) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (20) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (134) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (137) empty -> .

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16
    FUNCTION        shift and go to state 17
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    REQUIRE         shift and go to state 22
    INCLUDE         shift and go to state 23
    CLASS           shift and go to state 24
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    ID              shift and go to state 18
    ECHO            reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 137 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 137 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 137 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! ID              [ reduce using rule 137 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    empty                          shift and go to state 25

state 3

    (1) program -> OPENTAG declaration_list . CLOSETAG

    CLOSETAG        shift and go to state 33


state 4

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (19) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (20) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (134) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (137) empty -> .

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for CLOSETAG resolved using rule 2 (declaration_list -> declaration .)
    CLOSETAG        reduce using rule 2 (declaration_list -> declaration .)
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16
    FUNCTION        shift and go to state 17
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    REQUIRE         shift and go to state 22
    INCLUDE         shift and go to state 23
    CLASS           shift and go to state 24
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    ID              shift and go to state 18
    ECHO            reduce using rule 137 (empty -> .)

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 137 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 137 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 137 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! ID              [ reduce using rule 137 (empty -> .) ]
  ! CLOSETAG        [ reduce using rule 137 (empty -> .) ]

    declaration                    shift and go to state 4
    declaration_list               shift and go to state 34
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    empty                          shift and go to state 25

state 5

    (4) declaration -> var_declaration .

    IDVAR           reduce using rule 4 (declaration -> var_declaration .)
    TIMESTIMES      reduce using rule 4 (declaration -> var_declaration .)
    AMPERSANT       reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PROTECTED       reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    ID              reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    CLOSETAG        reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    IDVAR           reduce using rule 5 (declaration -> fun_declaration .)
    TIMESTIMES      reduce using rule 5 (declaration -> fun_declaration .)
    AMPERSANT       reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> fun_declaration .)
    PROTECTED       reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    CLASS           reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    DO              reduce using rule 5 (declaration -> fun_declaration .)
    ID              reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    CLOSETAG        reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> area . fun_declaration
    (21) class_declaration -> area . CLASS ID LBLOCK attribute RBLOCK
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    CLASS           shift and go to state 36
    FUNCTION        shift and go to state 17

    fun_declaration                shift and go to state 35

state 8

    (7) declaration -> header_declaration .

    IDVAR           reduce using rule 7 (declaration -> header_declaration .)
    TIMESTIMES      reduce using rule 7 (declaration -> header_declaration .)
    AMPERSANT       reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PROTECTED       reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    ID              reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    CLOSETAG        reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> class_declaration .

    IDVAR           reduce using rule 8 (declaration -> class_declaration .)
    TIMESTIMES      reduce using rule 8 (declaration -> class_declaration .)
    AMPERSANT       reduce using rule 8 (declaration -> class_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PROTECTED       reduce using rule 8 (declaration -> class_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> class_declaration .)
    INCLUDE         reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    ID              reduce using rule 8 (declaration -> class_declaration .)
    ECHO            reduce using rule 8 (declaration -> class_declaration .)
    CLOSETAG        reduce using rule 8 (declaration -> class_declaration .)


state 10

    (9) declaration -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    IDVAR           reduce using rule 9 (declaration -> echo_stmt .)
    TIMESTIMES      reduce using rule 9 (declaration -> echo_stmt .)
    AMPERSANT       reduce using rule 9 (declaration -> echo_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> echo_stmt .)
    PRIVATE         reduce using rule 9 (declaration -> echo_stmt .)
    PUBLIC          reduce using rule 9 (declaration -> echo_stmt .)
    PROTECTED       reduce using rule 9 (declaration -> echo_stmt .)
    REQUIRE         reduce using rule 9 (declaration -> echo_stmt .)
    INCLUDE         reduce using rule 9 (declaration -> echo_stmt .)
    CLASS           reduce using rule 9 (declaration -> echo_stmt .)
    IF              reduce using rule 9 (declaration -> echo_stmt .)
    SWITCH          reduce using rule 9 (declaration -> echo_stmt .)
    CASE            reduce using rule 9 (declaration -> echo_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> echo_stmt .)
    FOR             reduce using rule 9 (declaration -> echo_stmt .)
    WHILE           reduce using rule 9 (declaration -> echo_stmt .)
    DO              reduce using rule 9 (declaration -> echo_stmt .)
    ID              reduce using rule 9 (declaration -> echo_stmt .)
    CLOSETAG        reduce using rule 9 (declaration -> echo_stmt .)
    ECHO            shift and go to state 37

  ! ECHO            [ reduce using rule 9 (declaration -> echo_stmt .) ]


state 11

    (10) declaration -> selection_stmt .

    IDVAR           reduce using rule 10 (declaration -> selection_stmt .)
    TIMESTIMES      reduce using rule 10 (declaration -> selection_stmt .)
    AMPERSANT       reduce using rule 10 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 10 (declaration -> selection_stmt .)
    PRIVATE         reduce using rule 10 (declaration -> selection_stmt .)
    PUBLIC          reduce using rule 10 (declaration -> selection_stmt .)
    PROTECTED       reduce using rule 10 (declaration -> selection_stmt .)
    REQUIRE         reduce using rule 10 (declaration -> selection_stmt .)
    INCLUDE         reduce using rule 10 (declaration -> selection_stmt .)
    CLASS           reduce using rule 10 (declaration -> selection_stmt .)
    IF              reduce using rule 10 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 10 (declaration -> selection_stmt .)
    CASE            reduce using rule 10 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 10 (declaration -> selection_stmt .)
    FOR             reduce using rule 10 (declaration -> selection_stmt .)
    WHILE           reduce using rule 10 (declaration -> selection_stmt .)
    DO              reduce using rule 10 (declaration -> selection_stmt .)
    ID              reduce using rule 10 (declaration -> selection_stmt .)
    ECHO            reduce using rule 10 (declaration -> selection_stmt .)
    CLOSETAG        reduce using rule 10 (declaration -> selection_stmt .)


state 12

    (11) declaration -> iteration_stmt .

    IDVAR           reduce using rule 11 (declaration -> iteration_stmt .)
    TIMESTIMES      reduce using rule 11 (declaration -> iteration_stmt .)
    AMPERSANT       reduce using rule 11 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 11 (declaration -> iteration_stmt .)
    PRIVATE         reduce using rule 11 (declaration -> iteration_stmt .)
    PUBLIC          reduce using rule 11 (declaration -> iteration_stmt .)
    PROTECTED       reduce using rule 11 (declaration -> iteration_stmt .)
    REQUIRE         reduce using rule 11 (declaration -> iteration_stmt .)
    INCLUDE         reduce using rule 11 (declaration -> iteration_stmt .)
    CLASS           reduce using rule 11 (declaration -> iteration_stmt .)
    IF              reduce using rule 11 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 11 (declaration -> iteration_stmt .)
    CASE            reduce using rule 11 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 11 (declaration -> iteration_stmt .)
    FOR             reduce using rule 11 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 11 (declaration -> iteration_stmt .)
    DO              reduce using rule 11 (declaration -> iteration_stmt .)
    ID              reduce using rule 11 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 11 (declaration -> iteration_stmt .)
    CLOSETAG        reduce using rule 11 (declaration -> iteration_stmt .)


state 13

    (12) declaration -> typeclass .

    IDVAR           reduce using rule 12 (declaration -> typeclass .)
    TIMESTIMES      reduce using rule 12 (declaration -> typeclass .)
    AMPERSANT       reduce using rule 12 (declaration -> typeclass .)
    FUNCTION        reduce using rule 12 (declaration -> typeclass .)
    PRIVATE         reduce using rule 12 (declaration -> typeclass .)
    PUBLIC          reduce using rule 12 (declaration -> typeclass .)
    PROTECTED       reduce using rule 12 (declaration -> typeclass .)
    REQUIRE         reduce using rule 12 (declaration -> typeclass .)
    INCLUDE         reduce using rule 12 (declaration -> typeclass .)
    CLASS           reduce using rule 12 (declaration -> typeclass .)
    IF              reduce using rule 12 (declaration -> typeclass .)
    SWITCH          reduce using rule 12 (declaration -> typeclass .)
    CASE            reduce using rule 12 (declaration -> typeclass .)
    DEFAULT         reduce using rule 12 (declaration -> typeclass .)
    FOR             reduce using rule 12 (declaration -> typeclass .)
    WHILE           reduce using rule 12 (declaration -> typeclass .)
    DO              reduce using rule 12 (declaration -> typeclass .)
    ID              reduce using rule 12 (declaration -> typeclass .)
    ECHO            reduce using rule 12 (declaration -> typeclass .)
    CLOSETAG        reduce using rule 12 (declaration -> typeclass .)


state 14

    (30) var_declaration -> IDVAR . SEMI var_declaration
    (31) var_declaration -> IDVAR . SEMI
    (34) var_declaration -> IDVAR . IGUAL NUM SEMI var_declaration
    (35) var_declaration -> IDVAR . IGUAL NUM SEMI
    (36) var_declaration -> IDVAR . IGUAL STRING SEMI var_declaration
    (37) var_declaration -> IDVAR . IGUAL STRING SEMI
    (38) var_declaration -> IDVAR . IGUAL boolean SEMI var_declaration
    (39) var_declaration -> IDVAR . IGUAL boolean SEMI
    (40) var_declaration -> IDVAR . IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> IDVAR . IGUAL IDVAR SEMI
    (45) var_declaration -> IDVAR . IGUAL simple_expression SEMI
    (46) IGUAL -> . EQUAL
    (47) IGUAL -> . MUL_EQUAL
    (48) IGUAL -> . DIV_EQUAL
    (49) IGUAL -> . CONCAT_EQUAL
    (50) IGUAL -> . MOD_EQUAL
    (51) IGUAL -> . PLUS_EQUAL
    (52) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 38
    EQUAL           shift and go to state 40
    MUL_EQUAL       shift and go to state 41
    DIV_EQUAL       shift and go to state 42
    CONCAT_EQUAL    shift and go to state 43
    MOD_EQUAL       shift and go to state 44
    PLUS_EQUAL      shift and go to state 45
    MINUS_EQUAL     shift and go to state 46

    IGUAL                          shift and go to state 39

state 15

    (32) var_declaration -> TIMESTIMES . IDVAR SEMI
    (33) var_declaration -> TIMESTIMES . IDVAR SEMI var_declaration

    IDVAR           shift and go to state 47


state 16

    (42) var_declaration -> AMPERSANT . IDVAR SEMI var_declaration
    (43) var_declaration -> AMPERSANT . IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> AMPERSANT . IDVAR SEMI

    IDVAR           shift and go to state 48


state 17

    (53) fun_declaration -> FUNCTION . ID LPAREN params RPAREN
    (54) fun_declaration -> FUNCTION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 49


state 18

    (134) typeclass -> ID . IDVAR EQUAL NEW constructor SEMI

    IDVAR           shift and go to state 50


state 19

    (27) area -> PRIVATE .

    CLASS           reduce using rule 27 (area -> PRIVATE .)
    FUNCTION        reduce using rule 27 (area -> PRIVATE .)
    IDVAR           reduce using rule 27 (area -> PRIVATE .)
    TIMESTIMES      reduce using rule 27 (area -> PRIVATE .)
    AMPERSANT       reduce using rule 27 (area -> PRIVATE .)


state 20

    (28) area -> PUBLIC .

    CLASS           reduce using rule 28 (area -> PUBLIC .)
    FUNCTION        reduce using rule 28 (area -> PUBLIC .)
    IDVAR           reduce using rule 28 (area -> PUBLIC .)
    TIMESTIMES      reduce using rule 28 (area -> PUBLIC .)
    AMPERSANT       reduce using rule 28 (area -> PUBLIC .)


state 21

    (29) area -> PROTECTED .

    CLASS           reduce using rule 29 (area -> PROTECTED .)
    FUNCTION        reduce using rule 29 (area -> PROTECTED .)
    IDVAR           reduce using rule 29 (area -> PROTECTED .)
    TIMESTIMES      reduce using rule 29 (area -> PROTECTED .)
    AMPERSANT       reduce using rule 29 (area -> PROTECTED .)


state 22

    (19) header_declaration -> REQUIRE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 51


state 23

    (20) header_declaration -> INCLUDE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 52


state 24

    (22) class_declaration -> CLASS . ID LBLOCK attribute RBLOCK

    ID              shift and go to state 53


state 25

    (15) echo_stmt -> empty .

    ECHO            reduce using rule 15 (echo_stmt -> empty .)
    IDVAR           reduce using rule 15 (echo_stmt -> empty .)
    TIMESTIMES      reduce using rule 15 (echo_stmt -> empty .)
    AMPERSANT       reduce using rule 15 (echo_stmt -> empty .)
    FUNCTION        reduce using rule 15 (echo_stmt -> empty .)
    PRIVATE         reduce using rule 15 (echo_stmt -> empty .)
    PUBLIC          reduce using rule 15 (echo_stmt -> empty .)
    PROTECTED       reduce using rule 15 (echo_stmt -> empty .)
    REQUIRE         reduce using rule 15 (echo_stmt -> empty .)
    INCLUDE         reduce using rule 15 (echo_stmt -> empty .)
    CLASS           reduce using rule 15 (echo_stmt -> empty .)
    IF              reduce using rule 15 (echo_stmt -> empty .)
    SWITCH          reduce using rule 15 (echo_stmt -> empty .)
    CASE            reduce using rule 15 (echo_stmt -> empty .)
    DEFAULT         reduce using rule 15 (echo_stmt -> empty .)
    FOR             reduce using rule 15 (echo_stmt -> empty .)
    WHILE           reduce using rule 15 (echo_stmt -> empty .)
    DO              reduce using rule 15 (echo_stmt -> empty .)
    ID              reduce using rule 15 (echo_stmt -> empty .)
    CLOSETAG        reduce using rule 15 (echo_stmt -> empty .)
    BREAK           reduce using rule 15 (echo_stmt -> empty .)
    SEMI            reduce using rule 15 (echo_stmt -> empty .)
    LBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    RETURN          reduce using rule 15 (echo_stmt -> empty .)
    LPAREN          reduce using rule 15 (echo_stmt -> empty .)
    NUM             reduce using rule 15 (echo_stmt -> empty .)
    STRING          reduce using rule 15 (echo_stmt -> empty .)
    TRUE            reduce using rule 15 (echo_stmt -> empty .)
    FALSE           reduce using rule 15 (echo_stmt -> empty .)
    RBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    ELSE            reduce using rule 15 (echo_stmt -> empty .)
    ELSEIF          reduce using rule 15 (echo_stmt -> empty .)


state 26

    (74) selection_stmt -> IF . LPAREN expression RPAREN statement
    (75) selection_stmt -> IF . LPAREN expression RPAREN statement selection

    LPAREN          shift and go to state 54


state 27

    (78) selection_stmt -> SWITCH . LPAREN var RPAREN statement

    LPAREN          shift and go to state 55


state 28

    (79) selection_stmt -> CASE . NUM COLON statement BREAK SEMI
    (80) selection_stmt -> CASE . STRING COLON statement BREAK SEMI

    NUM             shift and go to state 56
    STRING          shift and go to state 57


state 29

    (81) selection_stmt -> DEFAULT . COLON statement BREAK SEMI

    COLON           shift and go to state 58


state 30

    (82) iteration_stmt -> FOR . LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement

    LPAREN          shift and go to state 59


state 31

    (83) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 60


state 32

    (84) iteration_stmt -> DO . LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN

    LBLOCK          shift and go to state 61


state 33

    (1) program -> OPENTAG declaration_list CLOSETAG .

    $end            reduce using rule 1 (program -> OPENTAG declaration_list CLOSETAG .)


state 34

    (3) declaration_list -> declaration declaration_list .

    CLOSETAG        reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 35

    (6) declaration -> area fun_declaration .

    IDVAR           reduce using rule 6 (declaration -> area fun_declaration .)
    TIMESTIMES      reduce using rule 6 (declaration -> area fun_declaration .)
    AMPERSANT       reduce using rule 6 (declaration -> area fun_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> area fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> area fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> area fun_declaration .)
    PROTECTED       reduce using rule 6 (declaration -> area fun_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> area fun_declaration .)
    INCLUDE         reduce using rule 6 (declaration -> area fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> area fun_declaration .)
    IF              reduce using rule 6 (declaration -> area fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> area fun_declaration .)
    CASE            reduce using rule 6 (declaration -> area fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> area fun_declaration .)
    FOR             reduce using rule 6 (declaration -> area fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> area fun_declaration .)
    DO              reduce using rule 6 (declaration -> area fun_declaration .)
    ID              reduce using rule 6 (declaration -> area fun_declaration .)
    ECHO            reduce using rule 6 (declaration -> area fun_declaration .)
    CLOSETAG        reduce using rule 6 (declaration -> area fun_declaration .)


state 36

    (21) class_declaration -> area CLASS . ID LBLOCK attribute RBLOCK

    ID              shift and go to state 62


state 37

    (13) echo_stmt -> echo_stmt ECHO . STRING SEMI
    (14) echo_stmt -> echo_stmt ECHO . IDVAR SEMI
    (16) echo_stmt -> echo_stmt ECHO . NUM SEMI
    (17) echo_stmt -> echo_stmt ECHO . boolean SEMI
    (18) echo_stmt -> echo_stmt ECHO . fun_declaration SEMI
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    STRING          shift and go to state 63
    IDVAR           shift and go to state 64
    NUM             shift and go to state 65
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    FUNCTION        shift and go to state 17

    boolean                        shift and go to state 66
    fun_declaration                shift and go to state 67

state 38

    (30) var_declaration -> IDVAR SEMI . var_declaration
    (31) var_declaration -> IDVAR SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    TIMESTIMES      reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    AMPERSANT       reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    FUNCTION        reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    PRIVATE         reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    PUBLIC          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    PROTECTED       reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    REQUIRE         reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    INCLUDE         reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    CLASS           reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    IF              reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    SWITCH          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    CASE            reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    DEFAULT         reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    FOR             reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    WHILE           reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    DO              reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    ID              reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    ECHO            reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    CLOSETAG        reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    SEMI            reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    RBLOCK          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    LBLOCK          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    RETURN          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    LPAREN          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    NUM             reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    STRING          reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    TRUE            reduce using rule 31 (var_declaration -> IDVAR SEMI .)
    FALSE           reduce using rule 31 (var_declaration -> IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 70

state 39

    (34) var_declaration -> IDVAR IGUAL . NUM SEMI var_declaration
    (35) var_declaration -> IDVAR IGUAL . NUM SEMI
    (36) var_declaration -> IDVAR IGUAL . STRING SEMI var_declaration
    (37) var_declaration -> IDVAR IGUAL . STRING SEMI
    (38) var_declaration -> IDVAR IGUAL . boolean SEMI var_declaration
    (39) var_declaration -> IDVAR IGUAL . boolean SEMI
    (40) var_declaration -> IDVAR IGUAL . IDVAR SEMI var_declaration
    (41) var_declaration -> IDVAR IGUAL . IDVAR SEMI
    (45) var_declaration -> IDVAR IGUAL . simple_expression SEMI
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET

    NUM             shift and go to state 72
    STRING          shift and go to state 73
    IDVAR           shift and go to state 71
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    LPAREN          shift and go to state 79

    boolean                        shift and go to state 74
    simple_expression              shift and go to state 75
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    var                            shift and go to state 80

state 40

    (46) IGUAL -> EQUAL .

    NUM             reduce using rule 46 (IGUAL -> EQUAL .)
    STRING          reduce using rule 46 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 46 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 46 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 46 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 46 (IGUAL -> EQUAL .)


state 41

    (47) IGUAL -> MUL_EQUAL .

    NUM             reduce using rule 47 (IGUAL -> MUL_EQUAL .)
    STRING          reduce using rule 47 (IGUAL -> MUL_EQUAL .)
    IDVAR           reduce using rule 47 (IGUAL -> MUL_EQUAL .)
    TRUE            reduce using rule 47 (IGUAL -> MUL_EQUAL .)
    FALSE           reduce using rule 47 (IGUAL -> MUL_EQUAL .)
    LPAREN          reduce using rule 47 (IGUAL -> MUL_EQUAL .)


state 42

    (48) IGUAL -> DIV_EQUAL .

    NUM             reduce using rule 48 (IGUAL -> DIV_EQUAL .)
    STRING          reduce using rule 48 (IGUAL -> DIV_EQUAL .)
    IDVAR           reduce using rule 48 (IGUAL -> DIV_EQUAL .)
    TRUE            reduce using rule 48 (IGUAL -> DIV_EQUAL .)
    FALSE           reduce using rule 48 (IGUAL -> DIV_EQUAL .)
    LPAREN          reduce using rule 48 (IGUAL -> DIV_EQUAL .)


state 43

    (49) IGUAL -> CONCAT_EQUAL .

    NUM             reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)
    STRING          reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)
    TRUE            reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)
    FALSE           reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 49 (IGUAL -> CONCAT_EQUAL .)


state 44

    (50) IGUAL -> MOD_EQUAL .

    NUM             reduce using rule 50 (IGUAL -> MOD_EQUAL .)
    STRING          reduce using rule 50 (IGUAL -> MOD_EQUAL .)
    IDVAR           reduce using rule 50 (IGUAL -> MOD_EQUAL .)
    TRUE            reduce using rule 50 (IGUAL -> MOD_EQUAL .)
    FALSE           reduce using rule 50 (IGUAL -> MOD_EQUAL .)
    LPAREN          reduce using rule 50 (IGUAL -> MOD_EQUAL .)


state 45

    (51) IGUAL -> PLUS_EQUAL .

    NUM             reduce using rule 51 (IGUAL -> PLUS_EQUAL .)
    STRING          reduce using rule 51 (IGUAL -> PLUS_EQUAL .)
    IDVAR           reduce using rule 51 (IGUAL -> PLUS_EQUAL .)
    TRUE            reduce using rule 51 (IGUAL -> PLUS_EQUAL .)
    FALSE           reduce using rule 51 (IGUAL -> PLUS_EQUAL .)
    LPAREN          reduce using rule 51 (IGUAL -> PLUS_EQUAL .)


state 46

    (52) IGUAL -> MINUS_EQUAL .

    NUM             reduce using rule 52 (IGUAL -> MINUS_EQUAL .)
    STRING          reduce using rule 52 (IGUAL -> MINUS_EQUAL .)
    IDVAR           reduce using rule 52 (IGUAL -> MINUS_EQUAL .)
    TRUE            reduce using rule 52 (IGUAL -> MINUS_EQUAL .)
    FALSE           reduce using rule 52 (IGUAL -> MINUS_EQUAL .)
    LPAREN          reduce using rule 52 (IGUAL -> MINUS_EQUAL .)


state 47

    (32) var_declaration -> TIMESTIMES IDVAR . SEMI
    (33) var_declaration -> TIMESTIMES IDVAR . SEMI var_declaration

    SEMI            shift and go to state 81


state 48

    (42) var_declaration -> AMPERSANT IDVAR . SEMI var_declaration
    (43) var_declaration -> AMPERSANT IDVAR . IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> AMPERSANT IDVAR . SEMI
    (46) IGUAL -> . EQUAL
    (47) IGUAL -> . MUL_EQUAL
    (48) IGUAL -> . DIV_EQUAL
    (49) IGUAL -> . CONCAT_EQUAL
    (50) IGUAL -> . MOD_EQUAL
    (51) IGUAL -> . PLUS_EQUAL
    (52) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 82
    EQUAL           shift and go to state 40
    MUL_EQUAL       shift and go to state 41
    DIV_EQUAL       shift and go to state 42
    CONCAT_EQUAL    shift and go to state 43
    MOD_EQUAL       shift and go to state 44
    PLUS_EQUAL      shift and go to state 45
    MINUS_EQUAL     shift and go to state 46

    IGUAL                          shift and go to state 83

state 49

    (53) fun_declaration -> FUNCTION ID . LPAREN params RPAREN
    (54) fun_declaration -> FUNCTION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 84


state 50

    (134) typeclass -> ID IDVAR . EQUAL NEW constructor SEMI

    EQUAL           shift and go to state 85


state 51

    (19) header_declaration -> REQUIRE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 86


state 52

    (20) header_declaration -> INCLUDE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 87


state 53

    (22) class_declaration -> CLASS ID . LBLOCK attribute RBLOCK

    LBLOCK          shift and go to state 88


state 54

    (74) selection_stmt -> IF LPAREN . expression RPAREN statement
    (75) selection_stmt -> IF LPAREN . expression RPAREN statement selection
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 89
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 55

    (78) selection_stmt -> SWITCH LPAREN . var RPAREN statement
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 97

    var                            shift and go to state 96

state 56

    (79) selection_stmt -> CASE NUM . COLON statement BREAK SEMI

    COLON           shift and go to state 98


state 57

    (80) selection_stmt -> CASE STRING . COLON statement BREAK SEMI

    COLON           shift and go to state 99


state 58

    (81) selection_stmt -> DEFAULT COLON . statement BREAK SEMI
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    statement                      shift and go to state 100
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 59

    (82) iteration_stmt -> FOR LPAREN . var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16

    var_declaration                shift and go to state 112

state 60

    (83) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 113
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 61

    (84) iteration_stmt -> DO LBLOCK . statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    statement                      shift and go to state 114
    expression                     shift and go to state 108
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 62

    (21) class_declaration -> area CLASS ID . LBLOCK attribute RBLOCK

    LBLOCK          shift and go to state 115


state 63

    (13) echo_stmt -> echo_stmt ECHO STRING . SEMI

    SEMI            shift and go to state 116


state 64

    (14) echo_stmt -> echo_stmt ECHO IDVAR . SEMI

    SEMI            shift and go to state 117


state 65

    (16) echo_stmt -> echo_stmt ECHO NUM . SEMI

    SEMI            shift and go to state 118


state 66

    (17) echo_stmt -> echo_stmt ECHO boolean . SEMI

    SEMI            shift and go to state 119


state 67

    (18) echo_stmt -> echo_stmt ECHO fun_declaration . SEMI

    SEMI            shift and go to state 120


state 68

    (132) boolean -> TRUE .

    SEMI            reduce using rule 132 (boolean -> TRUE .)
    MINUSMINUS      reduce using rule 132 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 132 (boolean -> TRUE .)
    TIMES           reduce using rule 132 (boolean -> TRUE .)
    DIVIDE          reduce using rule 132 (boolean -> TRUE .)
    LESS            reduce using rule 132 (boolean -> TRUE .)
    LESSEQUAL       reduce using rule 132 (boolean -> TRUE .)
    GREATER         reduce using rule 132 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 132 (boolean -> TRUE .)
    DEQUAL          reduce using rule 132 (boolean -> TRUE .)
    DISTINT         reduce using rule 132 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 132 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 132 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 132 (boolean -> TRUE .)
    SR_EQUAL        reduce using rule 132 (boolean -> TRUE .)
    SL_EQUAL        reduce using rule 132 (boolean -> TRUE .)
    AND_EQUAL       reduce using rule 132 (boolean -> TRUE .)
    OR_EQUAL        reduce using rule 132 (boolean -> TRUE .)
    XOR_EQUAL       reduce using rule 132 (boolean -> TRUE .)
    CONCAT_EQUAL    reduce using rule 132 (boolean -> TRUE .)
    PLUS            reduce using rule 132 (boolean -> TRUE .)
    MINUS           reduce using rule 132 (boolean -> TRUE .)
    RPAREN          reduce using rule 132 (boolean -> TRUE .)
    AND             reduce using rule 132 (boolean -> TRUE .)
    OR              reduce using rule 132 (boolean -> TRUE .)
    COMMA           reduce using rule 132 (boolean -> TRUE .)
    RBRACKET        reduce using rule 132 (boolean -> TRUE .)


state 69

    (133) boolean -> FALSE .

    SEMI            reduce using rule 133 (boolean -> FALSE .)
    MINUSMINUS      reduce using rule 133 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 133 (boolean -> FALSE .)
    TIMES           reduce using rule 133 (boolean -> FALSE .)
    DIVIDE          reduce using rule 133 (boolean -> FALSE .)
    LESS            reduce using rule 133 (boolean -> FALSE .)
    LESSEQUAL       reduce using rule 133 (boolean -> FALSE .)
    GREATER         reduce using rule 133 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 133 (boolean -> FALSE .)
    DEQUAL          reduce using rule 133 (boolean -> FALSE .)
    DISTINT         reduce using rule 133 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 133 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 133 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 133 (boolean -> FALSE .)
    SR_EQUAL        reduce using rule 133 (boolean -> FALSE .)
    SL_EQUAL        reduce using rule 133 (boolean -> FALSE .)
    AND_EQUAL       reduce using rule 133 (boolean -> FALSE .)
    OR_EQUAL        reduce using rule 133 (boolean -> FALSE .)
    XOR_EQUAL       reduce using rule 133 (boolean -> FALSE .)
    CONCAT_EQUAL    reduce using rule 133 (boolean -> FALSE .)
    PLUS            reduce using rule 133 (boolean -> FALSE .)
    MINUS           reduce using rule 133 (boolean -> FALSE .)
    RPAREN          reduce using rule 133 (boolean -> FALSE .)
    AND             reduce using rule 133 (boolean -> FALSE .)
    OR              reduce using rule 133 (boolean -> FALSE .)
    COMMA           reduce using rule 133 (boolean -> FALSE .)
    RBRACKET        reduce using rule 133 (boolean -> FALSE .)


state 70

    (30) var_declaration -> IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    IF              reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    CASE            reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    FOR             reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    DO              reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    ID              reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    NUM             reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    STRING          reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 30 (var_declaration -> IDVAR SEMI var_declaration .)


state 71

    (40) var_declaration -> IDVAR IGUAL IDVAR . SEMI var_declaration
    (41) var_declaration -> IDVAR IGUAL IDVAR . SEMI
    (126) factor -> IDVAR . LPAREN args RPAREN
    (92) var -> IDVAR .
    (93) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 121
    LPAREN          shift and go to state 122
    MINUSMINUS      reduce using rule 92 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 92 (var -> IDVAR .)
    TIMES           reduce using rule 92 (var -> IDVAR .)
    DIVIDE          reduce using rule 92 (var -> IDVAR .)
    LESS            reduce using rule 92 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 92 (var -> IDVAR .)
    GREATER         reduce using rule 92 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 92 (var -> IDVAR .)
    DEQUAL          reduce using rule 92 (var -> IDVAR .)
    DISTINT         reduce using rule 92 (var -> IDVAR .)
    ISEQUAL         reduce using rule 92 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 92 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 92 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 92 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 92 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 92 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 92 (var -> IDVAR .)
    PLUS            reduce using rule 92 (var -> IDVAR .)
    MINUS           reduce using rule 92 (var -> IDVAR .)
    LBRACKET        shift and go to state 123

  ! SEMI            [ reduce using rule 92 (var -> IDVAR .) ]


state 72

    (34) var_declaration -> IDVAR IGUAL NUM . SEMI var_declaration
    (35) var_declaration -> IDVAR IGUAL NUM . SEMI
    (123) factor -> NUM .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 124
    MINUSMINUS      reduce using rule 123 (factor -> NUM .)
    PLUSPLUS        reduce using rule 123 (factor -> NUM .)
    TIMES           reduce using rule 123 (factor -> NUM .)
    DIVIDE          reduce using rule 123 (factor -> NUM .)
    LESS            reduce using rule 123 (factor -> NUM .)
    LESSEQUAL       reduce using rule 123 (factor -> NUM .)
    GREATER         reduce using rule 123 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 123 (factor -> NUM .)
    DEQUAL          reduce using rule 123 (factor -> NUM .)
    DISTINT         reduce using rule 123 (factor -> NUM .)
    ISEQUAL         reduce using rule 123 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 123 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 123 (factor -> NUM .)
    SR_EQUAL        reduce using rule 123 (factor -> NUM .)
    SL_EQUAL        reduce using rule 123 (factor -> NUM .)
    AND_EQUAL       reduce using rule 123 (factor -> NUM .)
    OR_EQUAL        reduce using rule 123 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 123 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 123 (factor -> NUM .)
    PLUS            reduce using rule 123 (factor -> NUM .)
    MINUS           reduce using rule 123 (factor -> NUM .)

  ! SEMI            [ reduce using rule 123 (factor -> NUM .) ]


state 73

    (36) var_declaration -> IDVAR IGUAL STRING . SEMI var_declaration
    (37) var_declaration -> IDVAR IGUAL STRING . SEMI
    (124) factor -> STRING .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 125
    MINUSMINUS      reduce using rule 124 (factor -> STRING .)
    PLUSPLUS        reduce using rule 124 (factor -> STRING .)
    TIMES           reduce using rule 124 (factor -> STRING .)
    DIVIDE          reduce using rule 124 (factor -> STRING .)
    LESS            reduce using rule 124 (factor -> STRING .)
    LESSEQUAL       reduce using rule 124 (factor -> STRING .)
    GREATER         reduce using rule 124 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 124 (factor -> STRING .)
    DEQUAL          reduce using rule 124 (factor -> STRING .)
    DISTINT         reduce using rule 124 (factor -> STRING .)
    ISEQUAL         reduce using rule 124 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 124 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 124 (factor -> STRING .)
    SR_EQUAL        reduce using rule 124 (factor -> STRING .)
    SL_EQUAL        reduce using rule 124 (factor -> STRING .)
    AND_EQUAL       reduce using rule 124 (factor -> STRING .)
    OR_EQUAL        reduce using rule 124 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 124 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 124 (factor -> STRING .)
    PLUS            reduce using rule 124 (factor -> STRING .)
    MINUS           reduce using rule 124 (factor -> STRING .)

  ! SEMI            [ reduce using rule 124 (factor -> STRING .) ]


state 74

    (38) var_declaration -> IDVAR IGUAL boolean . SEMI var_declaration
    (39) var_declaration -> IDVAR IGUAL boolean . SEMI
    (125) factor -> boolean .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 126
    MINUSMINUS      reduce using rule 125 (factor -> boolean .)
    PLUSPLUS        reduce using rule 125 (factor -> boolean .)
    TIMES           reduce using rule 125 (factor -> boolean .)
    DIVIDE          reduce using rule 125 (factor -> boolean .)
    LESS            reduce using rule 125 (factor -> boolean .)
    LESSEQUAL       reduce using rule 125 (factor -> boolean .)
    GREATER         reduce using rule 125 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 125 (factor -> boolean .)
    DEQUAL          reduce using rule 125 (factor -> boolean .)
    DISTINT         reduce using rule 125 (factor -> boolean .)
    ISEQUAL         reduce using rule 125 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 125 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 125 (factor -> boolean .)
    SR_EQUAL        reduce using rule 125 (factor -> boolean .)
    SL_EQUAL        reduce using rule 125 (factor -> boolean .)
    AND_EQUAL       reduce using rule 125 (factor -> boolean .)
    OR_EQUAL        reduce using rule 125 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 125 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 125 (factor -> boolean .)
    PLUS            reduce using rule 125 (factor -> boolean .)
    MINUS           reduce using rule 125 (factor -> boolean .)

  ! SEMI            [ reduce using rule 125 (factor -> boolean .) ]


state 75

    (45) var_declaration -> IDVAR IGUAL simple_expression . SEMI

    SEMI            shift and go to state 127


state 76

    (94) simple_expression -> additive_expression . relop additive_expression
    (95) simple_expression -> additive_expression .
    (111) additive_expression -> additive_expression . addop term
    (96) relop -> . LESS
    (97) relop -> . LESSEQUAL
    (98) relop -> . GREATER
    (99) relop -> . GREATEREQUAL
    (100) relop -> . DEQUAL
    (101) relop -> . DISTINT
    (102) relop -> . ISEQUAL
    (103) relop -> . IS_IDENTICAL
    (104) relop -> . IS_NOT_IDENTICAL
    (105) relop -> . SR_EQUAL
    (106) relop -> . SL_EQUAL
    (107) relop -> . AND_EQUAL
    (108) relop -> . OR_EQUAL
    (109) relop -> . XOR_EQUAL
    (110) relop -> . CONCAT_EQUAL
    (115) addop -> . PLUS
    (116) addop -> . MINUS

    SEMI            reduce using rule 95 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 95 (simple_expression -> additive_expression .)
    AND             reduce using rule 95 (simple_expression -> additive_expression .)
    OR              reduce using rule 95 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 95 (simple_expression -> additive_expression .)
    RBRACKET        reduce using rule 95 (simple_expression -> additive_expression .)
    LESS            shift and go to state 130
    LESSEQUAL       shift and go to state 131
    GREATER         shift and go to state 132
    GREATEREQUAL    shift and go to state 133
    DEQUAL          shift and go to state 134
    DISTINT         shift and go to state 135
    ISEQUAL         shift and go to state 136
    IS_IDENTICAL    shift and go to state 137
    IS_NOT_IDENTICAL shift and go to state 138
    SR_EQUAL        shift and go to state 139
    SL_EQUAL        shift and go to state 140
    AND_EQUAL       shift and go to state 141
    OR_EQUAL        shift and go to state 142
    XOR_EQUAL       shift and go to state 143
    CONCAT_EQUAL    shift and go to state 144
    PLUS            shift and go to state 145
    MINUS           shift and go to state 146

    relop                          shift and go to state 128
    addop                          shift and go to state 129

state 77

    (112) additive_expression -> term .
    (113) additive_expression -> term . MINUSMINUS
    (114) additive_expression -> term . PLUSPLUS
    (117) term -> term . mulop factor
    (119) mulop -> . TIMES
    (120) mulop -> . DIVIDE

    LESS            reduce using rule 112 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 112 (additive_expression -> term .)
    GREATER         reduce using rule 112 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 112 (additive_expression -> term .)
    DEQUAL          reduce using rule 112 (additive_expression -> term .)
    DISTINT         reduce using rule 112 (additive_expression -> term .)
    ISEQUAL         reduce using rule 112 (additive_expression -> term .)
    IS_IDENTICAL    reduce using rule 112 (additive_expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 112 (additive_expression -> term .)
    SR_EQUAL        reduce using rule 112 (additive_expression -> term .)
    SL_EQUAL        reduce using rule 112 (additive_expression -> term .)
    AND_EQUAL       reduce using rule 112 (additive_expression -> term .)
    OR_EQUAL        reduce using rule 112 (additive_expression -> term .)
    XOR_EQUAL       reduce using rule 112 (additive_expression -> term .)
    CONCAT_EQUAL    reduce using rule 112 (additive_expression -> term .)
    PLUS            reduce using rule 112 (additive_expression -> term .)
    MINUS           reduce using rule 112 (additive_expression -> term .)
    SEMI            reduce using rule 112 (additive_expression -> term .)
    RPAREN          reduce using rule 112 (additive_expression -> term .)
    AND             reduce using rule 112 (additive_expression -> term .)
    OR              reduce using rule 112 (additive_expression -> term .)
    COMMA           reduce using rule 112 (additive_expression -> term .)
    RBRACKET        reduce using rule 112 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 147
    PLUSPLUS        shift and go to state 148
    TIMES           shift and go to state 150
    DIVIDE          shift and go to state 151

    mulop                          shift and go to state 149

state 78

    (118) term -> factor .

    MINUSMINUS      reduce using rule 118 (term -> factor .)
    PLUSPLUS        reduce using rule 118 (term -> factor .)
    TIMES           reduce using rule 118 (term -> factor .)
    DIVIDE          reduce using rule 118 (term -> factor .)
    LESS            reduce using rule 118 (term -> factor .)
    LESSEQUAL       reduce using rule 118 (term -> factor .)
    GREATER         reduce using rule 118 (term -> factor .)
    GREATEREQUAL    reduce using rule 118 (term -> factor .)
    DEQUAL          reduce using rule 118 (term -> factor .)
    DISTINT         reduce using rule 118 (term -> factor .)
    ISEQUAL         reduce using rule 118 (term -> factor .)
    IS_IDENTICAL    reduce using rule 118 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 118 (term -> factor .)
    SR_EQUAL        reduce using rule 118 (term -> factor .)
    SL_EQUAL        reduce using rule 118 (term -> factor .)
    AND_EQUAL       reduce using rule 118 (term -> factor .)
    OR_EQUAL        reduce using rule 118 (term -> factor .)
    XOR_EQUAL       reduce using rule 118 (term -> factor .)
    CONCAT_EQUAL    reduce using rule 118 (term -> factor .)
    PLUS            reduce using rule 118 (term -> factor .)
    MINUS           reduce using rule 118 (term -> factor .)
    SEMI            reduce using rule 118 (term -> factor .)
    RPAREN          reduce using rule 118 (term -> factor .)
    AND             reduce using rule 118 (term -> factor .)
    OR              reduce using rule 118 (term -> factor .)
    COMMA           reduce using rule 118 (term -> factor .)
    RBRACKET        reduce using rule 118 (term -> factor .)


state 79

    (121) factor -> LPAREN . expression RPAREN
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 152
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 80

    (122) factor -> var .

    MINUSMINUS      reduce using rule 122 (factor -> var .)
    PLUSPLUS        reduce using rule 122 (factor -> var .)
    TIMES           reduce using rule 122 (factor -> var .)
    DIVIDE          reduce using rule 122 (factor -> var .)
    LESS            reduce using rule 122 (factor -> var .)
    LESSEQUAL       reduce using rule 122 (factor -> var .)
    GREATER         reduce using rule 122 (factor -> var .)
    GREATEREQUAL    reduce using rule 122 (factor -> var .)
    DEQUAL          reduce using rule 122 (factor -> var .)
    DISTINT         reduce using rule 122 (factor -> var .)
    ISEQUAL         reduce using rule 122 (factor -> var .)
    IS_IDENTICAL    reduce using rule 122 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 122 (factor -> var .)
    SR_EQUAL        reduce using rule 122 (factor -> var .)
    SL_EQUAL        reduce using rule 122 (factor -> var .)
    AND_EQUAL       reduce using rule 122 (factor -> var .)
    OR_EQUAL        reduce using rule 122 (factor -> var .)
    XOR_EQUAL       reduce using rule 122 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 122 (factor -> var .)
    PLUS            reduce using rule 122 (factor -> var .)
    MINUS           reduce using rule 122 (factor -> var .)
    SEMI            reduce using rule 122 (factor -> var .)
    RPAREN          reduce using rule 122 (factor -> var .)
    AND             reduce using rule 122 (factor -> var .)
    OR              reduce using rule 122 (factor -> var .)
    COMMA           reduce using rule 122 (factor -> var .)
    RBRACKET        reduce using rule 122 (factor -> var .)


state 81

    (32) var_declaration -> TIMESTIMES IDVAR SEMI .
    (33) var_declaration -> TIMESTIMES IDVAR SEMI . var_declaration
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TIMESTIMES      reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    AMPERSANT       reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FUNCTION        reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRIVATE         reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PUBLIC          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PROTECTED       reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    REQUIRE         reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    INCLUDE         reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLASS           reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    IF              reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SWITCH          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CASE            reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DEFAULT         reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FOR             reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    WHILE           reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DO              reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ID              reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ECHO            reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLOSETAG        reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SEMI            reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RBLOCK          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LBLOCK          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RETURN          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LPAREN          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    NUM             reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    STRING          reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TRUE            reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FALSE           reduce using rule 32 (var_declaration -> TIMESTIMES IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 153

state 82

    (42) var_declaration -> AMPERSANT IDVAR SEMI . var_declaration
    (44) var_declaration -> AMPERSANT IDVAR SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TIMESTIMES      reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    AMPERSANT       reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FUNCTION        reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRIVATE         reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PUBLIC          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PROTECTED       reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    REQUIRE         reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    INCLUDE         reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLASS           reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    IF              reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SWITCH          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CASE            reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DEFAULT         reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FOR             reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    WHILE           reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DO              reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ID              reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ECHO            reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLOSETAG        reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SEMI            reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RBLOCK          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LBLOCK          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RETURN          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LPAREN          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    NUM             reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    STRING          reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TRUE            reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FALSE           reduce using rule 44 (var_declaration -> AMPERSANT IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 154

state 83

    (43) var_declaration -> AMPERSANT IDVAR IGUAL . IDVAR SEMI selection_stmt

    IDVAR           shift and go to state 155


state 84

    (53) fun_declaration -> FUNCTION ID LPAREN . params RPAREN
    (54) fun_declaration -> FUNCTION ID LPAREN . params RPAREN compount_stmt
    (55) params -> . param_list
    (56) params -> . empty
    (57) param_list -> . param_list COMMA param_list
    (58) param_list -> . param
    (137) empty -> .
    (59) param -> . IDVAR
    (60) param -> . IDVAR LBRACKET RBRACKET

    RPAREN          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 160

    params                         shift and go to state 156
    param_list                     shift and go to state 157
    empty                          shift and go to state 158
    param                          shift and go to state 159

state 85

    (134) typeclass -> ID IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 161


state 86

    (19) header_declaration -> REQUIRE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 162


state 87

    (20) header_declaration -> INCLUDE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 163


state 88

    (22) class_declaration -> CLASS ID LBLOCK . attribute RBLOCK
    (23) attribute -> . attribute area var_declaration
    (24) attribute -> . area var_declaration
    (25) attribute -> . attribute area fun_declaration
    (26) attribute -> . area fun_declaration
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED

    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21

    attribute                      shift and go to state 164
    area                           shift and go to state 165

state 89

    (74) selection_stmt -> IF LPAREN expression . RPAREN statement
    (75) selection_stmt -> IF LPAREN expression . RPAREN statement selection
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          shift and go to state 166
    AND             shift and go to state 167
    OR              shift and go to state 168


state 90

    (87) expression -> var . EQUAL expression
    (89) expression -> var . EQUAL AMPERSANT IDVAR
    (122) factor -> var .

    EQUAL           shift and go to state 169
    MINUSMINUS      reduce using rule 122 (factor -> var .)
    PLUSPLUS        reduce using rule 122 (factor -> var .)
    TIMES           reduce using rule 122 (factor -> var .)
    DIVIDE          reduce using rule 122 (factor -> var .)
    LESS            reduce using rule 122 (factor -> var .)
    LESSEQUAL       reduce using rule 122 (factor -> var .)
    GREATER         reduce using rule 122 (factor -> var .)
    GREATEREQUAL    reduce using rule 122 (factor -> var .)
    DEQUAL          reduce using rule 122 (factor -> var .)
    DISTINT         reduce using rule 122 (factor -> var .)
    ISEQUAL         reduce using rule 122 (factor -> var .)
    IS_IDENTICAL    reduce using rule 122 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 122 (factor -> var .)
    SR_EQUAL        reduce using rule 122 (factor -> var .)
    SL_EQUAL        reduce using rule 122 (factor -> var .)
    AND_EQUAL       reduce using rule 122 (factor -> var .)
    OR_EQUAL        reduce using rule 122 (factor -> var .)
    XOR_EQUAL       reduce using rule 122 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 122 (factor -> var .)
    PLUS            reduce using rule 122 (factor -> var .)
    MINUS           reduce using rule 122 (factor -> var .)
    RPAREN          reduce using rule 122 (factor -> var .)
    AND             reduce using rule 122 (factor -> var .)
    OR              reduce using rule 122 (factor -> var .)
    SEMI            reduce using rule 122 (factor -> var .)
    COMMA           reduce using rule 122 (factor -> var .)
    RBRACKET        reduce using rule 122 (factor -> var .)


state 91

    (88) expression -> simple_expression .

    RPAREN          reduce using rule 88 (expression -> simple_expression .)
    AND             reduce using rule 88 (expression -> simple_expression .)
    OR              reduce using rule 88 (expression -> simple_expression .)
    SEMI            reduce using rule 88 (expression -> simple_expression .)
    COMMA           reduce using rule 88 (expression -> simple_expression .)
    RBRACKET        reduce using rule 88 (expression -> simple_expression .)


state 92

    (92) var -> IDVAR .
    (93) var -> IDVAR . LBRACKET expression RBRACKET
    (126) factor -> IDVAR . LPAREN args RPAREN

    EQUAL           reduce using rule 92 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 92 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 92 (var -> IDVAR .)
    TIMES           reduce using rule 92 (var -> IDVAR .)
    DIVIDE          reduce using rule 92 (var -> IDVAR .)
    LESS            reduce using rule 92 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 92 (var -> IDVAR .)
    GREATER         reduce using rule 92 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 92 (var -> IDVAR .)
    DEQUAL          reduce using rule 92 (var -> IDVAR .)
    DISTINT         reduce using rule 92 (var -> IDVAR .)
    ISEQUAL         reduce using rule 92 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 92 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 92 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 92 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 92 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 92 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 92 (var -> IDVAR .)
    PLUS            reduce using rule 92 (var -> IDVAR .)
    MINUS           reduce using rule 92 (var -> IDVAR .)
    RPAREN          reduce using rule 92 (var -> IDVAR .)
    AND             reduce using rule 92 (var -> IDVAR .)
    OR              reduce using rule 92 (var -> IDVAR .)
    SEMI            reduce using rule 92 (var -> IDVAR .)
    COMMA           reduce using rule 92 (var -> IDVAR .)
    RBRACKET        reduce using rule 92 (var -> IDVAR .)
    LBRACKET        shift and go to state 123
    LPAREN          shift and go to state 122


state 93

    (123) factor -> NUM .

    MINUSMINUS      reduce using rule 123 (factor -> NUM .)
    PLUSPLUS        reduce using rule 123 (factor -> NUM .)
    TIMES           reduce using rule 123 (factor -> NUM .)
    DIVIDE          reduce using rule 123 (factor -> NUM .)
    LESS            reduce using rule 123 (factor -> NUM .)
    LESSEQUAL       reduce using rule 123 (factor -> NUM .)
    GREATER         reduce using rule 123 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 123 (factor -> NUM .)
    DEQUAL          reduce using rule 123 (factor -> NUM .)
    DISTINT         reduce using rule 123 (factor -> NUM .)
    ISEQUAL         reduce using rule 123 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 123 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 123 (factor -> NUM .)
    SR_EQUAL        reduce using rule 123 (factor -> NUM .)
    SL_EQUAL        reduce using rule 123 (factor -> NUM .)
    AND_EQUAL       reduce using rule 123 (factor -> NUM .)
    OR_EQUAL        reduce using rule 123 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 123 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 123 (factor -> NUM .)
    PLUS            reduce using rule 123 (factor -> NUM .)
    MINUS           reduce using rule 123 (factor -> NUM .)
    RPAREN          reduce using rule 123 (factor -> NUM .)
    AND             reduce using rule 123 (factor -> NUM .)
    OR              reduce using rule 123 (factor -> NUM .)
    SEMI            reduce using rule 123 (factor -> NUM .)
    COMMA           reduce using rule 123 (factor -> NUM .)
    RBRACKET        reduce using rule 123 (factor -> NUM .)


state 94

    (124) factor -> STRING .

    MINUSMINUS      reduce using rule 124 (factor -> STRING .)
    PLUSPLUS        reduce using rule 124 (factor -> STRING .)
    TIMES           reduce using rule 124 (factor -> STRING .)
    DIVIDE          reduce using rule 124 (factor -> STRING .)
    LESS            reduce using rule 124 (factor -> STRING .)
    LESSEQUAL       reduce using rule 124 (factor -> STRING .)
    GREATER         reduce using rule 124 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 124 (factor -> STRING .)
    DEQUAL          reduce using rule 124 (factor -> STRING .)
    DISTINT         reduce using rule 124 (factor -> STRING .)
    ISEQUAL         reduce using rule 124 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 124 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 124 (factor -> STRING .)
    SR_EQUAL        reduce using rule 124 (factor -> STRING .)
    SL_EQUAL        reduce using rule 124 (factor -> STRING .)
    AND_EQUAL       reduce using rule 124 (factor -> STRING .)
    OR_EQUAL        reduce using rule 124 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 124 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 124 (factor -> STRING .)
    PLUS            reduce using rule 124 (factor -> STRING .)
    MINUS           reduce using rule 124 (factor -> STRING .)
    RPAREN          reduce using rule 124 (factor -> STRING .)
    AND             reduce using rule 124 (factor -> STRING .)
    OR              reduce using rule 124 (factor -> STRING .)
    SEMI            reduce using rule 124 (factor -> STRING .)
    COMMA           reduce using rule 124 (factor -> STRING .)
    RBRACKET        reduce using rule 124 (factor -> STRING .)


state 95

    (125) factor -> boolean .

    MINUSMINUS      reduce using rule 125 (factor -> boolean .)
    PLUSPLUS        reduce using rule 125 (factor -> boolean .)
    TIMES           reduce using rule 125 (factor -> boolean .)
    DIVIDE          reduce using rule 125 (factor -> boolean .)
    LESS            reduce using rule 125 (factor -> boolean .)
    LESSEQUAL       reduce using rule 125 (factor -> boolean .)
    GREATER         reduce using rule 125 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 125 (factor -> boolean .)
    DEQUAL          reduce using rule 125 (factor -> boolean .)
    DISTINT         reduce using rule 125 (factor -> boolean .)
    ISEQUAL         reduce using rule 125 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 125 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 125 (factor -> boolean .)
    SR_EQUAL        reduce using rule 125 (factor -> boolean .)
    SL_EQUAL        reduce using rule 125 (factor -> boolean .)
    AND_EQUAL       reduce using rule 125 (factor -> boolean .)
    OR_EQUAL        reduce using rule 125 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 125 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 125 (factor -> boolean .)
    PLUS            reduce using rule 125 (factor -> boolean .)
    MINUS           reduce using rule 125 (factor -> boolean .)
    RPAREN          reduce using rule 125 (factor -> boolean .)
    AND             reduce using rule 125 (factor -> boolean .)
    OR              reduce using rule 125 (factor -> boolean .)
    SEMI            reduce using rule 125 (factor -> boolean .)
    COMMA           reduce using rule 125 (factor -> boolean .)
    RBRACKET        reduce using rule 125 (factor -> boolean .)


state 96

    (78) selection_stmt -> SWITCH LPAREN var . RPAREN statement

    RPAREN          shift and go to state 170


state 97

    (92) var -> IDVAR .
    (93) var -> IDVAR . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 92 (var -> IDVAR .)
    LBRACKET        shift and go to state 123


state 98

    (79) selection_stmt -> CASE NUM COLON . statement BREAK SEMI
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    statement                      shift and go to state 171
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 99

    (80) selection_stmt -> CASE STRING COLON . statement BREAK SEMI
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    statement                      shift and go to state 172
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 100

    (81) selection_stmt -> DEFAULT COLON statement . BREAK SEMI

    BREAK           shift and go to state 173


state 101

    (66) statement -> expression_stmt .

    BREAK           reduce using rule 66 (statement -> expression_stmt .)
    SEMI            reduce using rule 66 (statement -> expression_stmt .)
    ELSE            reduce using rule 66 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 66 (statement -> expression_stmt .)
    IDVAR           reduce using rule 66 (statement -> expression_stmt .)
    TIMESTIMES      reduce using rule 66 (statement -> expression_stmt .)
    AMPERSANT       reduce using rule 66 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 66 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 66 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 66 (statement -> expression_stmt .)
    PROTECTED       reduce using rule 66 (statement -> expression_stmt .)
    REQUIRE         reduce using rule 66 (statement -> expression_stmt .)
    INCLUDE         reduce using rule 66 (statement -> expression_stmt .)
    CLASS           reduce using rule 66 (statement -> expression_stmt .)
    IF              reduce using rule 66 (statement -> expression_stmt .)
    SWITCH          reduce using rule 66 (statement -> expression_stmt .)
    CASE            reduce using rule 66 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 66 (statement -> expression_stmt .)
    FOR             reduce using rule 66 (statement -> expression_stmt .)
    WHILE           reduce using rule 66 (statement -> expression_stmt .)
    DO              reduce using rule 66 (statement -> expression_stmt .)
    ID              reduce using rule 66 (statement -> expression_stmt .)
    ECHO            reduce using rule 66 (statement -> expression_stmt .)
    CLOSETAG        reduce using rule 66 (statement -> expression_stmt .)
    RBLOCK          reduce using rule 66 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 66 (statement -> expression_stmt .)
    RETURN          reduce using rule 66 (statement -> expression_stmt .)
    LPAREN          reduce using rule 66 (statement -> expression_stmt .)
    NUM             reduce using rule 66 (statement -> expression_stmt .)
    STRING          reduce using rule 66 (statement -> expression_stmt .)
    TRUE            reduce using rule 66 (statement -> expression_stmt .)
    FALSE           reduce using rule 66 (statement -> expression_stmt .)


state 102

    (67) statement -> compount_stmt .

    BREAK           reduce using rule 67 (statement -> compount_stmt .)
    SEMI            reduce using rule 67 (statement -> compount_stmt .)
    ELSE            reduce using rule 67 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 67 (statement -> compount_stmt .)
    IDVAR           reduce using rule 67 (statement -> compount_stmt .)
    TIMESTIMES      reduce using rule 67 (statement -> compount_stmt .)
    AMPERSANT       reduce using rule 67 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 67 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 67 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 67 (statement -> compount_stmt .)
    PROTECTED       reduce using rule 67 (statement -> compount_stmt .)
    REQUIRE         reduce using rule 67 (statement -> compount_stmt .)
    INCLUDE         reduce using rule 67 (statement -> compount_stmt .)
    CLASS           reduce using rule 67 (statement -> compount_stmt .)
    IF              reduce using rule 67 (statement -> compount_stmt .)
    SWITCH          reduce using rule 67 (statement -> compount_stmt .)
    CASE            reduce using rule 67 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 67 (statement -> compount_stmt .)
    FOR             reduce using rule 67 (statement -> compount_stmt .)
    WHILE           reduce using rule 67 (statement -> compount_stmt .)
    DO              reduce using rule 67 (statement -> compount_stmt .)
    ID              reduce using rule 67 (statement -> compount_stmt .)
    ECHO            reduce using rule 67 (statement -> compount_stmt .)
    CLOSETAG        reduce using rule 67 (statement -> compount_stmt .)
    RBLOCK          reduce using rule 67 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 67 (statement -> compount_stmt .)
    RETURN          reduce using rule 67 (statement -> compount_stmt .)
    LPAREN          reduce using rule 67 (statement -> compount_stmt .)
    NUM             reduce using rule 67 (statement -> compount_stmt .)
    STRING          reduce using rule 67 (statement -> compount_stmt .)
    TRUE            reduce using rule 67 (statement -> compount_stmt .)
    FALSE           reduce using rule 67 (statement -> compount_stmt .)


state 103

    (68) statement -> selection_stmt .

    BREAK           reduce using rule 68 (statement -> selection_stmt .)
    SEMI            reduce using rule 68 (statement -> selection_stmt .)
    ELSE            reduce using rule 68 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 68 (statement -> selection_stmt .)
    IDVAR           reduce using rule 68 (statement -> selection_stmt .)
    TIMESTIMES      reduce using rule 68 (statement -> selection_stmt .)
    AMPERSANT       reduce using rule 68 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 68 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 68 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 68 (statement -> selection_stmt .)
    PROTECTED       reduce using rule 68 (statement -> selection_stmt .)
    REQUIRE         reduce using rule 68 (statement -> selection_stmt .)
    INCLUDE         reduce using rule 68 (statement -> selection_stmt .)
    CLASS           reduce using rule 68 (statement -> selection_stmt .)
    IF              reduce using rule 68 (statement -> selection_stmt .)
    SWITCH          reduce using rule 68 (statement -> selection_stmt .)
    CASE            reduce using rule 68 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 68 (statement -> selection_stmt .)
    FOR             reduce using rule 68 (statement -> selection_stmt .)
    WHILE           reduce using rule 68 (statement -> selection_stmt .)
    DO              reduce using rule 68 (statement -> selection_stmt .)
    ID              reduce using rule 68 (statement -> selection_stmt .)
    ECHO            reduce using rule 68 (statement -> selection_stmt .)
    CLOSETAG        reduce using rule 68 (statement -> selection_stmt .)
    RBLOCK          reduce using rule 68 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 68 (statement -> selection_stmt .)
    RETURN          reduce using rule 68 (statement -> selection_stmt .)
    LPAREN          reduce using rule 68 (statement -> selection_stmt .)
    NUM             reduce using rule 68 (statement -> selection_stmt .)
    STRING          reduce using rule 68 (statement -> selection_stmt .)
    TRUE            reduce using rule 68 (statement -> selection_stmt .)
    FALSE           reduce using rule 68 (statement -> selection_stmt .)


state 104

    (69) statement -> iteration_stmt .

    BREAK           reduce using rule 69 (statement -> iteration_stmt .)
    SEMI            reduce using rule 69 (statement -> iteration_stmt .)
    ELSE            reduce using rule 69 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 69 (statement -> iteration_stmt .)
    IDVAR           reduce using rule 69 (statement -> iteration_stmt .)
    TIMESTIMES      reduce using rule 69 (statement -> iteration_stmt .)
    AMPERSANT       reduce using rule 69 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 69 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 69 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 69 (statement -> iteration_stmt .)
    PROTECTED       reduce using rule 69 (statement -> iteration_stmt .)
    REQUIRE         reduce using rule 69 (statement -> iteration_stmt .)
    INCLUDE         reduce using rule 69 (statement -> iteration_stmt .)
    CLASS           reduce using rule 69 (statement -> iteration_stmt .)
    IF              reduce using rule 69 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 69 (statement -> iteration_stmt .)
    CASE            reduce using rule 69 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 69 (statement -> iteration_stmt .)
    FOR             reduce using rule 69 (statement -> iteration_stmt .)
    WHILE           reduce using rule 69 (statement -> iteration_stmt .)
    DO              reduce using rule 69 (statement -> iteration_stmt .)
    ID              reduce using rule 69 (statement -> iteration_stmt .)
    ECHO            reduce using rule 69 (statement -> iteration_stmt .)
    CLOSETAG        reduce using rule 69 (statement -> iteration_stmt .)
    RBLOCK          reduce using rule 69 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 69 (statement -> iteration_stmt .)
    RETURN          reduce using rule 69 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 69 (statement -> iteration_stmt .)
    NUM             reduce using rule 69 (statement -> iteration_stmt .)
    STRING          reduce using rule 69 (statement -> iteration_stmt .)
    TRUE            reduce using rule 69 (statement -> iteration_stmt .)
    FALSE           reduce using rule 69 (statement -> iteration_stmt .)


state 105

    (70) statement -> return_stmt .

    BREAK           reduce using rule 70 (statement -> return_stmt .)
    SEMI            reduce using rule 70 (statement -> return_stmt .)
    ELSE            reduce using rule 70 (statement -> return_stmt .)
    ELSEIF          reduce using rule 70 (statement -> return_stmt .)
    IDVAR           reduce using rule 70 (statement -> return_stmt .)
    TIMESTIMES      reduce using rule 70 (statement -> return_stmt .)
    AMPERSANT       reduce using rule 70 (statement -> return_stmt .)
    FUNCTION        reduce using rule 70 (statement -> return_stmt .)
    PRIVATE         reduce using rule 70 (statement -> return_stmt .)
    PUBLIC          reduce using rule 70 (statement -> return_stmt .)
    PROTECTED       reduce using rule 70 (statement -> return_stmt .)
    REQUIRE         reduce using rule 70 (statement -> return_stmt .)
    INCLUDE         reduce using rule 70 (statement -> return_stmt .)
    CLASS           reduce using rule 70 (statement -> return_stmt .)
    IF              reduce using rule 70 (statement -> return_stmt .)
    SWITCH          reduce using rule 70 (statement -> return_stmt .)
    CASE            reduce using rule 70 (statement -> return_stmt .)
    DEFAULT         reduce using rule 70 (statement -> return_stmt .)
    FOR             reduce using rule 70 (statement -> return_stmt .)
    WHILE           reduce using rule 70 (statement -> return_stmt .)
    DO              reduce using rule 70 (statement -> return_stmt .)
    ID              reduce using rule 70 (statement -> return_stmt .)
    ECHO            reduce using rule 70 (statement -> return_stmt .)
    CLOSETAG        reduce using rule 70 (statement -> return_stmt .)
    RBLOCK          reduce using rule 70 (statement -> return_stmt .)
    LBLOCK          reduce using rule 70 (statement -> return_stmt .)
    RETURN          reduce using rule 70 (statement -> return_stmt .)
    LPAREN          reduce using rule 70 (statement -> return_stmt .)
    NUM             reduce using rule 70 (statement -> return_stmt .)
    STRING          reduce using rule 70 (statement -> return_stmt .)
    TRUE            reduce using rule 70 (statement -> return_stmt .)
    FALSE           reduce using rule 70 (statement -> return_stmt .)


state 106

    (71) statement -> class_declaration .

    BREAK           reduce using rule 71 (statement -> class_declaration .)
    SEMI            reduce using rule 71 (statement -> class_declaration .)
    ELSE            reduce using rule 71 (statement -> class_declaration .)
    ELSEIF          reduce using rule 71 (statement -> class_declaration .)
    IDVAR           reduce using rule 71 (statement -> class_declaration .)
    TIMESTIMES      reduce using rule 71 (statement -> class_declaration .)
    AMPERSANT       reduce using rule 71 (statement -> class_declaration .)
    FUNCTION        reduce using rule 71 (statement -> class_declaration .)
    PRIVATE         reduce using rule 71 (statement -> class_declaration .)
    PUBLIC          reduce using rule 71 (statement -> class_declaration .)
    PROTECTED       reduce using rule 71 (statement -> class_declaration .)
    REQUIRE         reduce using rule 71 (statement -> class_declaration .)
    INCLUDE         reduce using rule 71 (statement -> class_declaration .)
    CLASS           reduce using rule 71 (statement -> class_declaration .)
    IF              reduce using rule 71 (statement -> class_declaration .)
    SWITCH          reduce using rule 71 (statement -> class_declaration .)
    CASE            reduce using rule 71 (statement -> class_declaration .)
    DEFAULT         reduce using rule 71 (statement -> class_declaration .)
    FOR             reduce using rule 71 (statement -> class_declaration .)
    WHILE           reduce using rule 71 (statement -> class_declaration .)
    DO              reduce using rule 71 (statement -> class_declaration .)
    ID              reduce using rule 71 (statement -> class_declaration .)
    ECHO            reduce using rule 71 (statement -> class_declaration .)
    CLOSETAG        reduce using rule 71 (statement -> class_declaration .)
    RBLOCK          reduce using rule 71 (statement -> class_declaration .)
    LBLOCK          reduce using rule 71 (statement -> class_declaration .)
    RETURN          reduce using rule 71 (statement -> class_declaration .)
    LPAREN          reduce using rule 71 (statement -> class_declaration .)
    NUM             reduce using rule 71 (statement -> class_declaration .)
    STRING          reduce using rule 71 (statement -> class_declaration .)
    TRUE            reduce using rule 71 (statement -> class_declaration .)
    FALSE           reduce using rule 71 (statement -> class_declaration .)


state 107

    (72) statement -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    BREAK           reduce using rule 72 (statement -> echo_stmt .)
    SEMI            reduce using rule 72 (statement -> echo_stmt .)
    ELSE            reduce using rule 72 (statement -> echo_stmt .)
    ELSEIF          reduce using rule 72 (statement -> echo_stmt .)
    IDVAR           reduce using rule 72 (statement -> echo_stmt .)
    TIMESTIMES      reduce using rule 72 (statement -> echo_stmt .)
    AMPERSANT       reduce using rule 72 (statement -> echo_stmt .)
    FUNCTION        reduce using rule 72 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 72 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 72 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 72 (statement -> echo_stmt .)
    REQUIRE         reduce using rule 72 (statement -> echo_stmt .)
    INCLUDE         reduce using rule 72 (statement -> echo_stmt .)
    CLASS           reduce using rule 72 (statement -> echo_stmt .)
    IF              reduce using rule 72 (statement -> echo_stmt .)
    SWITCH          reduce using rule 72 (statement -> echo_stmt .)
    CASE            reduce using rule 72 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 72 (statement -> echo_stmt .)
    FOR             reduce using rule 72 (statement -> echo_stmt .)
    WHILE           reduce using rule 72 (statement -> echo_stmt .)
    DO              reduce using rule 72 (statement -> echo_stmt .)
    ID              reduce using rule 72 (statement -> echo_stmt .)
    CLOSETAG        reduce using rule 72 (statement -> echo_stmt .)
    RBLOCK          reduce using rule 72 (statement -> echo_stmt .)
    LBLOCK          reduce using rule 72 (statement -> echo_stmt .)
    RETURN          reduce using rule 72 (statement -> echo_stmt .)
    LPAREN          reduce using rule 72 (statement -> echo_stmt .)
    NUM             reduce using rule 72 (statement -> echo_stmt .)
    STRING          reduce using rule 72 (statement -> echo_stmt .)
    TRUE            reduce using rule 72 (statement -> echo_stmt .)
    FALSE           reduce using rule 72 (statement -> echo_stmt .)
    ECHO            shift and go to state 37

  ! ECHO            [ reduce using rule 72 (statement -> echo_stmt .) ]


state 108

    (73) expression_stmt -> expression . SEMI
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    SEMI            shift and go to state 174
    AND             shift and go to state 167
    OR              shift and go to state 168


state 109

    (61) compount_stmt -> LBLOCK . echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (137) empty -> .

    ECHO            reduce using rule 137 (empty -> .)
    IDVAR           reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    LBLOCK          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    SWITCH          reduce using rule 137 (empty -> .)
    CASE            reduce using rule 137 (empty -> .)
    DEFAULT         reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    CLASS           reduce using rule 137 (empty -> .)
    PRIVATE         reduce using rule 137 (empty -> .)
    PUBLIC          reduce using rule 137 (empty -> .)
    PROTECTED       reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    NUM             reduce using rule 137 (empty -> .)
    STRING          reduce using rule 137 (empty -> .)
    TRUE            reduce using rule 137 (empty -> .)
    FALSE           reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)

    echo_stmt                      shift and go to state 175
    empty                          shift and go to state 25

state 110

    (85) return_stmt -> RETURN . SEMI
    (86) return_stmt -> RETURN . expression SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    SEMI            shift and go to state 176
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 177
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 111

    (21) class_declaration -> area . CLASS ID LBLOCK attribute RBLOCK

    CLASS           shift and go to state 36


state 112

    (82) iteration_stmt -> FOR LPAREN var_declaration . SEMI expression SEMI additive_expression RPAREN statement

    SEMI            shift and go to state 178


state 113

    (83) iteration_stmt -> WHILE LPAREN expression . RPAREN statement
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          shift and go to state 179
    AND             shift and go to state 167
    OR              shift and go to state 168


state 114

    (84) iteration_stmt -> DO LBLOCK statement . SEMI RBLOCK WHILE LPAREN expression RPAREN

    SEMI            shift and go to state 180


state 115

    (21) class_declaration -> area CLASS ID LBLOCK . attribute RBLOCK
    (23) attribute -> . attribute area var_declaration
    (24) attribute -> . area var_declaration
    (25) attribute -> . attribute area fun_declaration
    (26) attribute -> . area fun_declaration
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED

    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21

    area                           shift and go to state 165
    attribute                      shift and go to state 181

state 116

    (13) echo_stmt -> echo_stmt ECHO STRING SEMI .

    ECHO            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    IDVAR           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    TIMESTIMES      reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    AMPERSANT       reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FUNCTION        reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PRIVATE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PUBLIC          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PROTECTED       reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    REQUIRE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    INCLUDE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CLASS           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    IF              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    SWITCH          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CASE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    DEFAULT         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FOR             reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    WHILE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    DO              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ID              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CLOSETAG        reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    BREAK           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    SEMI            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    LBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    RETURN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    LPAREN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    NUM             reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    STRING          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    TRUE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FALSE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    RBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ELSE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ELSEIF          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)


state 117

    (14) echo_stmt -> echo_stmt ECHO IDVAR SEMI .

    ECHO            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    IDVAR           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    TIMESTIMES      reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    AMPERSANT       reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FUNCTION        reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PRIVATE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PUBLIC          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PROTECTED       reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    REQUIRE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    INCLUDE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CLASS           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    IF              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    SWITCH          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CASE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    DEFAULT         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FOR             reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    WHILE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    DO              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ID              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CLOSETAG        reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    BREAK           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    SEMI            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    LBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    RETURN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    LPAREN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    NUM             reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    STRING          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    TRUE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FALSE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    RBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ELSE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ELSEIF          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)


state 118

    (16) echo_stmt -> echo_stmt ECHO NUM SEMI .

    ECHO            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    IDVAR           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    TIMESTIMES      reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    AMPERSANT       reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FUNCTION        reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PRIVATE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PUBLIC          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PROTECTED       reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    REQUIRE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    INCLUDE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CLASS           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    IF              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    SWITCH          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CASE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    DEFAULT         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FOR             reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    WHILE           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    DO              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ID              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CLOSETAG        reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    BREAK           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    SEMI            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    LBLOCK          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    RETURN          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    LPAREN          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    NUM             reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    STRING          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    TRUE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FALSE           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    RBLOCK          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ELSE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ELSEIF          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)


state 119

    (17) echo_stmt -> echo_stmt ECHO boolean SEMI .

    ECHO            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    IDVAR           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    TIMESTIMES      reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    AMPERSANT       reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FUNCTION        reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PRIVATE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PUBLIC          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PROTECTED       reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    REQUIRE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    INCLUDE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CLASS           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    IF              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    SWITCH          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CASE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    DEFAULT         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FOR             reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    WHILE           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    DO              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ID              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CLOSETAG        reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    BREAK           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    SEMI            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    LBLOCK          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    RETURN          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    LPAREN          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    NUM             reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    STRING          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    TRUE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FALSE           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    RBLOCK          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ELSE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ELSEIF          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)


state 120

    (18) echo_stmt -> echo_stmt ECHO fun_declaration SEMI .

    ECHO            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    IDVAR           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    TIMESTIMES      reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    AMPERSANT       reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FUNCTION        reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PRIVATE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PUBLIC          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PROTECTED       reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    REQUIRE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    INCLUDE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CLASS           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    IF              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    SWITCH          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CASE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    DEFAULT         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FOR             reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    WHILE           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    DO              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ID              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CLOSETAG        reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    BREAK           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    SEMI            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    LBLOCK          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    RETURN          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    LPAREN          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    NUM             reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    STRING          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    TRUE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FALSE           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    RBLOCK          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ELSE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ELSEIF          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)


state 121

    (40) var_declaration -> IDVAR IGUAL IDVAR SEMI . var_declaration
    (41) var_declaration -> IDVAR IGUAL IDVAR SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    TIMESTIMES      reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    AMPERSANT       reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    FUNCTION        reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    PRIVATE         reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    PUBLIC          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    PROTECTED       reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    REQUIRE         reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    INCLUDE         reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    CLASS           reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    IF              reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    SWITCH          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    CASE            reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    DEFAULT         reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    FOR             reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    WHILE           reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    DO              reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    ID              reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    ECHO            reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    CLOSETAG        reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    SEMI            reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    RBLOCK          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    LBLOCK          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    RETURN          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    LPAREN          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    NUM             reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    STRING          reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    TRUE            reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)
    FALSE           reduce using rule 41 (var_declaration -> IDVAR IGUAL IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 182

state 122

    (126) factor -> IDVAR LPAREN . args RPAREN
    (127) args -> . args_list
    (128) args -> . empty
    (129) args -> . VOID
    (130) args_list -> . args_list COMMA expression
    (131) args_list -> . expression
    (137) empty -> .
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    VOID            shift and go to state 186
    RPAREN          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    args                           shift and go to state 183
    args_list                      shift and go to state 184
    empty                          shift and go to state 185
    expression                     shift and go to state 187
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 123

    (93) var -> IDVAR LBRACKET . expression RBRACKET
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 188
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 124

    (34) var_declaration -> IDVAR IGUAL NUM SEMI . var_declaration
    (35) var_declaration -> IDVAR IGUAL NUM SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    TIMESTIMES      reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    AMPERSANT       reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    FUNCTION        reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    PRIVATE         reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    PUBLIC          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    PROTECTED       reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    REQUIRE         reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    INCLUDE         reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    CLASS           reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    IF              reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    SWITCH          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    CASE            reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    DEFAULT         reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    FOR             reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    WHILE           reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    DO              reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    ID              reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    ECHO            reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    CLOSETAG        reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    SEMI            reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    RBLOCK          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    LBLOCK          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    RETURN          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    LPAREN          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    NUM             reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    STRING          reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    TRUE            reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)
    FALSE           reduce using rule 35 (var_declaration -> IDVAR IGUAL NUM SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 189

state 125

    (36) var_declaration -> IDVAR IGUAL STRING SEMI . var_declaration
    (37) var_declaration -> IDVAR IGUAL STRING SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    TIMESTIMES      reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    AMPERSANT       reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    FUNCTION        reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    PRIVATE         reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    PUBLIC          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    PROTECTED       reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    REQUIRE         reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    INCLUDE         reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    CLASS           reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    IF              reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    SWITCH          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    CASE            reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    DEFAULT         reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    FOR             reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    WHILE           reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    DO              reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    ID              reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    ECHO            reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    CLOSETAG        reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    SEMI            reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    RBLOCK          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    LBLOCK          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    RETURN          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    LPAREN          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    NUM             reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    STRING          reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    TRUE            reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)
    FALSE           reduce using rule 37 (var_declaration -> IDVAR IGUAL STRING SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 190

state 126

    (38) var_declaration -> IDVAR IGUAL boolean SEMI . var_declaration
    (39) var_declaration -> IDVAR IGUAL boolean SEMI .
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI

    IDVAR           reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    TIMESTIMES      reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    AMPERSANT       reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    FUNCTION        reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    PRIVATE         reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    PUBLIC          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    PROTECTED       reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    REQUIRE         reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    INCLUDE         reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    CLASS           reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    IF              reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    SWITCH          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    CASE            reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    DEFAULT         reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    FOR             reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    WHILE           reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    DO              reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    ID              reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    ECHO            reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    CLOSETAG        reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    SEMI            reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    RBLOCK          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    LBLOCK          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    RETURN          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    LPAREN          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    NUM             reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    STRING          reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    TRUE            reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)
    FALSE           reduce using rule 39 (var_declaration -> IDVAR IGUAL boolean SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 16 ]

    var_declaration                shift and go to state 191

state 127

    (45) var_declaration -> IDVAR IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    IF              reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CASE            reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FOR             reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    DO              reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ID              reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    SEMI            reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    NUM             reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    STRING          reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 45 (var_declaration -> IDVAR IGUAL simple_expression SEMI .)


state 128

    (94) simple_expression -> additive_expression relop . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    IDVAR           shift and go to state 193
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    additive_expression            shift and go to state 192
    term                           shift and go to state 77
    factor                         shift and go to state 78
    var                            shift and go to state 80
    boolean                        shift and go to state 95

state 129

    (111) additive_expression -> additive_expression addop . term
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    IDVAR           shift and go to state 193
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    term                           shift and go to state 194
    factor                         shift and go to state 78
    var                            shift and go to state 80
    boolean                        shift and go to state 95

state 130

    (96) relop -> LESS .

    LPAREN          reduce using rule 96 (relop -> LESS .)
    NUM             reduce using rule 96 (relop -> LESS .)
    STRING          reduce using rule 96 (relop -> LESS .)
    IDVAR           reduce using rule 96 (relop -> LESS .)
    TRUE            reduce using rule 96 (relop -> LESS .)
    FALSE           reduce using rule 96 (relop -> LESS .)


state 131

    (97) relop -> LESSEQUAL .

    LPAREN          reduce using rule 97 (relop -> LESSEQUAL .)
    NUM             reduce using rule 97 (relop -> LESSEQUAL .)
    STRING          reduce using rule 97 (relop -> LESSEQUAL .)
    IDVAR           reduce using rule 97 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 97 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 97 (relop -> LESSEQUAL .)


state 132

    (98) relop -> GREATER .

    LPAREN          reduce using rule 98 (relop -> GREATER .)
    NUM             reduce using rule 98 (relop -> GREATER .)
    STRING          reduce using rule 98 (relop -> GREATER .)
    IDVAR           reduce using rule 98 (relop -> GREATER .)
    TRUE            reduce using rule 98 (relop -> GREATER .)
    FALSE           reduce using rule 98 (relop -> GREATER .)


state 133

    (99) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 99 (relop -> GREATEREQUAL .)
    NUM             reduce using rule 99 (relop -> GREATEREQUAL .)
    STRING          reduce using rule 99 (relop -> GREATEREQUAL .)
    IDVAR           reduce using rule 99 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 99 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 99 (relop -> GREATEREQUAL .)


state 134

    (100) relop -> DEQUAL .

    LPAREN          reduce using rule 100 (relop -> DEQUAL .)
    NUM             reduce using rule 100 (relop -> DEQUAL .)
    STRING          reduce using rule 100 (relop -> DEQUAL .)
    IDVAR           reduce using rule 100 (relop -> DEQUAL .)
    TRUE            reduce using rule 100 (relop -> DEQUAL .)
    FALSE           reduce using rule 100 (relop -> DEQUAL .)


state 135

    (101) relop -> DISTINT .

    LPAREN          reduce using rule 101 (relop -> DISTINT .)
    NUM             reduce using rule 101 (relop -> DISTINT .)
    STRING          reduce using rule 101 (relop -> DISTINT .)
    IDVAR           reduce using rule 101 (relop -> DISTINT .)
    TRUE            reduce using rule 101 (relop -> DISTINT .)
    FALSE           reduce using rule 101 (relop -> DISTINT .)


state 136

    (102) relop -> ISEQUAL .

    LPAREN          reduce using rule 102 (relop -> ISEQUAL .)
    NUM             reduce using rule 102 (relop -> ISEQUAL .)
    STRING          reduce using rule 102 (relop -> ISEQUAL .)
    IDVAR           reduce using rule 102 (relop -> ISEQUAL .)
    TRUE            reduce using rule 102 (relop -> ISEQUAL .)
    FALSE           reduce using rule 102 (relop -> ISEQUAL .)


state 137

    (103) relop -> IS_IDENTICAL .

    LPAREN          reduce using rule 103 (relop -> IS_IDENTICAL .)
    NUM             reduce using rule 103 (relop -> IS_IDENTICAL .)
    STRING          reduce using rule 103 (relop -> IS_IDENTICAL .)
    IDVAR           reduce using rule 103 (relop -> IS_IDENTICAL .)
    TRUE            reduce using rule 103 (relop -> IS_IDENTICAL .)
    FALSE           reduce using rule 103 (relop -> IS_IDENTICAL .)


state 138

    (104) relop -> IS_NOT_IDENTICAL .

    LPAREN          reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)
    STRING          reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)
    IDVAR           reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 104 (relop -> IS_NOT_IDENTICAL .)


state 139

    (105) relop -> SR_EQUAL .

    LPAREN          reduce using rule 105 (relop -> SR_EQUAL .)
    NUM             reduce using rule 105 (relop -> SR_EQUAL .)
    STRING          reduce using rule 105 (relop -> SR_EQUAL .)
    IDVAR           reduce using rule 105 (relop -> SR_EQUAL .)
    TRUE            reduce using rule 105 (relop -> SR_EQUAL .)
    FALSE           reduce using rule 105 (relop -> SR_EQUAL .)


state 140

    (106) relop -> SL_EQUAL .

    LPAREN          reduce using rule 106 (relop -> SL_EQUAL .)
    NUM             reduce using rule 106 (relop -> SL_EQUAL .)
    STRING          reduce using rule 106 (relop -> SL_EQUAL .)
    IDVAR           reduce using rule 106 (relop -> SL_EQUAL .)
    TRUE            reduce using rule 106 (relop -> SL_EQUAL .)
    FALSE           reduce using rule 106 (relop -> SL_EQUAL .)


state 141

    (107) relop -> AND_EQUAL .

    LPAREN          reduce using rule 107 (relop -> AND_EQUAL .)
    NUM             reduce using rule 107 (relop -> AND_EQUAL .)
    STRING          reduce using rule 107 (relop -> AND_EQUAL .)
    IDVAR           reduce using rule 107 (relop -> AND_EQUAL .)
    TRUE            reduce using rule 107 (relop -> AND_EQUAL .)
    FALSE           reduce using rule 107 (relop -> AND_EQUAL .)


state 142

    (108) relop -> OR_EQUAL .

    LPAREN          reduce using rule 108 (relop -> OR_EQUAL .)
    NUM             reduce using rule 108 (relop -> OR_EQUAL .)
    STRING          reduce using rule 108 (relop -> OR_EQUAL .)
    IDVAR           reduce using rule 108 (relop -> OR_EQUAL .)
    TRUE            reduce using rule 108 (relop -> OR_EQUAL .)
    FALSE           reduce using rule 108 (relop -> OR_EQUAL .)


state 143

    (109) relop -> XOR_EQUAL .

    LPAREN          reduce using rule 109 (relop -> XOR_EQUAL .)
    NUM             reduce using rule 109 (relop -> XOR_EQUAL .)
    STRING          reduce using rule 109 (relop -> XOR_EQUAL .)
    IDVAR           reduce using rule 109 (relop -> XOR_EQUAL .)
    TRUE            reduce using rule 109 (relop -> XOR_EQUAL .)
    FALSE           reduce using rule 109 (relop -> XOR_EQUAL .)


state 144

    (110) relop -> CONCAT_EQUAL .

    LPAREN          reduce using rule 110 (relop -> CONCAT_EQUAL .)
    NUM             reduce using rule 110 (relop -> CONCAT_EQUAL .)
    STRING          reduce using rule 110 (relop -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 110 (relop -> CONCAT_EQUAL .)
    TRUE            reduce using rule 110 (relop -> CONCAT_EQUAL .)
    FALSE           reduce using rule 110 (relop -> CONCAT_EQUAL .)


state 145

    (115) addop -> PLUS .

    LPAREN          reduce using rule 115 (addop -> PLUS .)
    NUM             reduce using rule 115 (addop -> PLUS .)
    STRING          reduce using rule 115 (addop -> PLUS .)
    IDVAR           reduce using rule 115 (addop -> PLUS .)
    TRUE            reduce using rule 115 (addop -> PLUS .)
    FALSE           reduce using rule 115 (addop -> PLUS .)


state 146

    (116) addop -> MINUS .

    LPAREN          reduce using rule 116 (addop -> MINUS .)
    NUM             reduce using rule 116 (addop -> MINUS .)
    STRING          reduce using rule 116 (addop -> MINUS .)
    IDVAR           reduce using rule 116 (addop -> MINUS .)
    TRUE            reduce using rule 116 (addop -> MINUS .)
    FALSE           reduce using rule 116 (addop -> MINUS .)


state 147

    (113) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    DEQUAL          reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    DISTINT         reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    ISEQUAL         reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    IS_IDENTICAL    reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    IS_NOT_IDENTICAL reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    SR_EQUAL        reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    SL_EQUAL        reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    AND_EQUAL       reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    OR_EQUAL        reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    XOR_EQUAL       reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    CONCAT_EQUAL    reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    AND             reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    OR              reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    COMMA           reduce using rule 113 (additive_expression -> term MINUSMINUS .)
    RBRACKET        reduce using rule 113 (additive_expression -> term MINUSMINUS .)


state 148

    (114) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    DEQUAL          reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    DISTINT         reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    ISEQUAL         reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    IS_IDENTICAL    reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    IS_NOT_IDENTICAL reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    SR_EQUAL        reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    SL_EQUAL        reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    AND_EQUAL       reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    OR_EQUAL        reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    XOR_EQUAL       reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    CONCAT_EQUAL    reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    AND             reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    OR              reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    COMMA           reduce using rule 114 (additive_expression -> term PLUSPLUS .)
    RBRACKET        reduce using rule 114 (additive_expression -> term PLUSPLUS .)


state 149

    (117) term -> term mulop . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    IDVAR           shift and go to state 193
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    factor                         shift and go to state 195
    var                            shift and go to state 80
    boolean                        shift and go to state 95

state 150

    (119) mulop -> TIMES .

    LPAREN          reduce using rule 119 (mulop -> TIMES .)
    NUM             reduce using rule 119 (mulop -> TIMES .)
    STRING          reduce using rule 119 (mulop -> TIMES .)
    IDVAR           reduce using rule 119 (mulop -> TIMES .)
    TRUE            reduce using rule 119 (mulop -> TIMES .)
    FALSE           reduce using rule 119 (mulop -> TIMES .)


state 151

    (120) mulop -> DIVIDE .

    LPAREN          reduce using rule 120 (mulop -> DIVIDE .)
    NUM             reduce using rule 120 (mulop -> DIVIDE .)
    STRING          reduce using rule 120 (mulop -> DIVIDE .)
    IDVAR           reduce using rule 120 (mulop -> DIVIDE .)
    TRUE            reduce using rule 120 (mulop -> DIVIDE .)
    FALSE           reduce using rule 120 (mulop -> DIVIDE .)


state 152

    (121) factor -> LPAREN expression . RPAREN
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          shift and go to state 196
    AND             shift and go to state 167
    OR              shift and go to state 168


state 153

    (33) var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    IF              reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CASE            reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FOR             reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DO              reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ID              reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    NUM             reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    STRING          reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 33 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)


state 154

    (42) var_declaration -> AMPERSANT IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    IF              reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CASE            reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FOR             reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DO              reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ID              reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    NUM             reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    STRING          reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 42 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)


state 155

    (43) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR . SEMI selection_stmt

    SEMI            shift and go to state 197


state 156

    (53) fun_declaration -> FUNCTION ID LPAREN params . RPAREN
    (54) fun_declaration -> FUNCTION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 198


state 157

    (55) params -> param_list .
    (57) param_list -> param_list . COMMA param_list

    RPAREN          reduce using rule 55 (params -> param_list .)
    COMMA           shift and go to state 199


state 158

    (56) params -> empty .

    RPAREN          reduce using rule 56 (params -> empty .)


state 159

    (58) param_list -> param .

    COMMA           reduce using rule 58 (param_list -> param .)
    RPAREN          reduce using rule 58 (param_list -> param .)


state 160

    (59) param -> IDVAR .
    (60) param -> IDVAR . LBRACKET RBRACKET

    COMMA           reduce using rule 59 (param -> IDVAR .)
    RPAREN          reduce using rule 59 (param -> IDVAR .)
    LBRACKET        shift and go to state 200


state 161

    (134) typeclass -> ID IDVAR EQUAL NEW . constructor SEMI
    (135) constructor -> . ID LPAREN RPAREN
    (136) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 201

    constructor                    shift and go to state 202

state 162

    (19) header_declaration -> REQUIRE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 203


state 163

    (20) header_declaration -> INCLUDE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 204


state 164

    (22) class_declaration -> CLASS ID LBLOCK attribute . RBLOCK
    (23) attribute -> attribute . area var_declaration
    (25) attribute -> attribute . area fun_declaration
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED

    RBLOCK          shift and go to state 205
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21

    area                           shift and go to state 206

state 165

    (24) attribute -> area . var_declaration
    (26) attribute -> area . fun_declaration
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16
    FUNCTION        shift and go to state 17

    var_declaration                shift and go to state 207
    fun_declaration                shift and go to state 208

state 166

    (74) selection_stmt -> IF LPAREN expression RPAREN . statement
    (75) selection_stmt -> IF LPAREN expression RPAREN . statement selection
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    REQUIRE         reduce using rule 137 (empty -> .)
    INCLUDE         reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    expression                     shift and go to state 108
    statement                      shift and go to state 209
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 167

    (90) expression -> expression AND . expression
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 210
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 168

    (91) expression -> expression OR . expression
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 211
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 169

    (87) expression -> var EQUAL . expression
    (89) expression -> var EQUAL . AMPERSANT IDVAR
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    AMPERSANT       shift and go to state 213
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    var                            shift and go to state 90
    expression                     shift and go to state 212
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 170

    (78) selection_stmt -> SWITCH LPAREN var RPAREN . statement
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    REQUIRE         reduce using rule 137 (empty -> .)
    INCLUDE         reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    var                            shift and go to state 90
    statement                      shift and go to state 214
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 171

    (79) selection_stmt -> CASE NUM COLON statement . BREAK SEMI

    BREAK           shift and go to state 215


state 172

    (80) selection_stmt -> CASE STRING COLON statement . BREAK SEMI

    BREAK           shift and go to state 216


state 173

    (81) selection_stmt -> DEFAULT COLON statement BREAK . SEMI

    SEMI            shift and go to state 217


state 174

    (73) expression_stmt -> expression SEMI .

    BREAK           reduce using rule 73 (expression_stmt -> expression SEMI .)
    SEMI            reduce using rule 73 (expression_stmt -> expression SEMI .)
    ELSE            reduce using rule 73 (expression_stmt -> expression SEMI .)
    ELSEIF          reduce using rule 73 (expression_stmt -> expression SEMI .)
    IDVAR           reduce using rule 73 (expression_stmt -> expression SEMI .)
    TIMESTIMES      reduce using rule 73 (expression_stmt -> expression SEMI .)
    AMPERSANT       reduce using rule 73 (expression_stmt -> expression SEMI .)
    FUNCTION        reduce using rule 73 (expression_stmt -> expression SEMI .)
    PRIVATE         reduce using rule 73 (expression_stmt -> expression SEMI .)
    PUBLIC          reduce using rule 73 (expression_stmt -> expression SEMI .)
    PROTECTED       reduce using rule 73 (expression_stmt -> expression SEMI .)
    REQUIRE         reduce using rule 73 (expression_stmt -> expression SEMI .)
    INCLUDE         reduce using rule 73 (expression_stmt -> expression SEMI .)
    CLASS           reduce using rule 73 (expression_stmt -> expression SEMI .)
    IF              reduce using rule 73 (expression_stmt -> expression SEMI .)
    SWITCH          reduce using rule 73 (expression_stmt -> expression SEMI .)
    CASE            reduce using rule 73 (expression_stmt -> expression SEMI .)
    DEFAULT         reduce using rule 73 (expression_stmt -> expression SEMI .)
    FOR             reduce using rule 73 (expression_stmt -> expression SEMI .)
    WHILE           reduce using rule 73 (expression_stmt -> expression SEMI .)
    DO              reduce using rule 73 (expression_stmt -> expression SEMI .)
    ID              reduce using rule 73 (expression_stmt -> expression SEMI .)
    ECHO            reduce using rule 73 (expression_stmt -> expression SEMI .)
    CLOSETAG        reduce using rule 73 (expression_stmt -> expression SEMI .)
    RBLOCK          reduce using rule 73 (expression_stmt -> expression SEMI .)
    LBLOCK          reduce using rule 73 (expression_stmt -> expression SEMI .)
    RETURN          reduce using rule 73 (expression_stmt -> expression SEMI .)
    LPAREN          reduce using rule 73 (expression_stmt -> expression SEMI .)
    NUM             reduce using rule 73 (expression_stmt -> expression SEMI .)
    STRING          reduce using rule 73 (expression_stmt -> expression SEMI .)
    TRUE            reduce using rule 73 (expression_stmt -> expression SEMI .)
    FALSE           reduce using rule 73 (expression_stmt -> expression SEMI .)


state 175

    (61) compount_stmt -> LBLOCK echo_stmt . local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (62) local_declarations -> . local_declarations var_declaration
    (63) local_declarations -> . empty
    (137) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 37
    IDVAR           reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    LBLOCK          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    SWITCH          reduce using rule 137 (empty -> .)
    CASE            reduce using rule 137 (empty -> .)
    DEFAULT         reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    CLASS           reduce using rule 137 (empty -> .)
    PRIVATE         reduce using rule 137 (empty -> .)
    PUBLIC          reduce using rule 137 (empty -> .)
    PROTECTED       reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    NUM             reduce using rule 137 (empty -> .)
    STRING          reduce using rule 137 (empty -> .)
    TRUE            reduce using rule 137 (empty -> .)
    FALSE           reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)

  ! ECHO            [ reduce using rule 137 (empty -> .) ]

    local_declarations             shift and go to state 218
    empty                          shift and go to state 219

state 176

    (85) return_stmt -> RETURN SEMI .

    BREAK           reduce using rule 85 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 85 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 85 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    IDVAR           reduce using rule 85 (return_stmt -> RETURN SEMI .)
    TIMESTIMES      reduce using rule 85 (return_stmt -> RETURN SEMI .)
    AMPERSANT       reduce using rule 85 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 85 (return_stmt -> RETURN SEMI .)
    PRIVATE         reduce using rule 85 (return_stmt -> RETURN SEMI .)
    PUBLIC          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    PROTECTED       reduce using rule 85 (return_stmt -> RETURN SEMI .)
    REQUIRE         reduce using rule 85 (return_stmt -> RETURN SEMI .)
    INCLUDE         reduce using rule 85 (return_stmt -> RETURN SEMI .)
    CLASS           reduce using rule 85 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 85 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 85 (return_stmt -> RETURN SEMI .)
    DEFAULT         reduce using rule 85 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 85 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 85 (return_stmt -> RETURN SEMI .)
    DO              reduce using rule 85 (return_stmt -> RETURN SEMI .)
    ID              reduce using rule 85 (return_stmt -> RETURN SEMI .)
    ECHO            reduce using rule 85 (return_stmt -> RETURN SEMI .)
    CLOSETAG        reduce using rule 85 (return_stmt -> RETURN SEMI .)
    RBLOCK          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    LBLOCK          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    LPAREN          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    NUM             reduce using rule 85 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 85 (return_stmt -> RETURN SEMI .)
    TRUE            reduce using rule 85 (return_stmt -> RETURN SEMI .)
    FALSE           reduce using rule 85 (return_stmt -> RETURN SEMI .)


state 177

    (86) return_stmt -> RETURN expression . SEMI
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    SEMI            shift and go to state 220
    AND             shift and go to state 167
    OR              shift and go to state 168


state 178

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI . expression SEMI additive_expression RPAREN statement
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 221
    additive_expression            shift and go to state 76
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 179

    (83) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    REQUIRE         reduce using rule 137 (empty -> .)
    INCLUDE         reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    expression                     shift and go to state 108
    statement                      shift and go to state 222
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 180

    (84) iteration_stmt -> DO LBLOCK statement SEMI . RBLOCK WHILE LPAREN expression RPAREN

    RBLOCK          shift and go to state 223


state 181

    (21) class_declaration -> area CLASS ID LBLOCK attribute . RBLOCK
    (23) attribute -> attribute . area var_declaration
    (25) attribute -> attribute . area fun_declaration
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED

    RBLOCK          shift and go to state 224
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21

    area                           shift and go to state 206

state 182

    (40) var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    IF              reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    CASE            reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    FOR             reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    DO              reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    ID              reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    NUM             reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    STRING          reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 40 (var_declaration -> IDVAR IGUAL IDVAR SEMI var_declaration .)


state 183

    (126) factor -> IDVAR LPAREN args . RPAREN

    RPAREN          shift and go to state 225


state 184

    (127) args -> args_list .
    (130) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 127 (args -> args_list .)
    COMMA           shift and go to state 226


state 185

    (128) args -> empty .

    RPAREN          reduce using rule 128 (args -> empty .)


state 186

    (129) args -> VOID .

    RPAREN          reduce using rule 129 (args -> VOID .)


state 187

    (131) args_list -> expression .
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    COMMA           reduce using rule 131 (args_list -> expression .)
    RPAREN          reduce using rule 131 (args_list -> expression .)
    AND             shift and go to state 167
    OR              shift and go to state 168


state 188

    (93) var -> IDVAR LBRACKET expression . RBRACKET
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RBRACKET        shift and go to state 227
    AND             shift and go to state 167
    OR              shift and go to state 168


state 189

    (34) var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .

    IDVAR           reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    TIMESTIMES      reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    AMPERSANT       reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    FUNCTION        reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    PRIVATE         reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    PUBLIC          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    PROTECTED       reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    REQUIRE         reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    INCLUDE         reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    CLASS           reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    IF              reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    SWITCH          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    CASE            reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    DEFAULT         reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    FOR             reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    WHILE           reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    DO              reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    ID              reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    ECHO            reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    CLOSETAG        reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    SEMI            reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    RBLOCK          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    LBLOCK          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    RETURN          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    LPAREN          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    NUM             reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    STRING          reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    TRUE            reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)
    FALSE           reduce using rule 34 (var_declaration -> IDVAR IGUAL NUM SEMI var_declaration .)


state 190

    (36) var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .

    IDVAR           reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    TIMESTIMES      reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    AMPERSANT       reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    FUNCTION        reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    PRIVATE         reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    PUBLIC          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    PROTECTED       reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    REQUIRE         reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    INCLUDE         reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    CLASS           reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    IF              reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    SWITCH          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    CASE            reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    DEFAULT         reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    FOR             reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    WHILE           reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    DO              reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    ID              reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    ECHO            reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    CLOSETAG        reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    SEMI            reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    RBLOCK          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    LBLOCK          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    RETURN          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    LPAREN          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    NUM             reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    STRING          reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    TRUE            reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)
    FALSE           reduce using rule 36 (var_declaration -> IDVAR IGUAL STRING SEMI var_declaration .)


state 191

    (38) var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .

    IDVAR           reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    TIMESTIMES      reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    AMPERSANT       reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    FUNCTION        reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    PRIVATE         reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    PUBLIC          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    PROTECTED       reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    REQUIRE         reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    INCLUDE         reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    CLASS           reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    IF              reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    SWITCH          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    CASE            reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    DEFAULT         reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    FOR             reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    WHILE           reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    DO              reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    ID              reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    ECHO            reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    CLOSETAG        reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    SEMI            reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    RBLOCK          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    LBLOCK          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    RETURN          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    LPAREN          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    NUM             reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    STRING          reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    TRUE            reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)
    FALSE           reduce using rule 38 (var_declaration -> IDVAR IGUAL boolean SEMI var_declaration .)


state 192

    (94) simple_expression -> additive_expression relop additive_expression .
    (111) additive_expression -> additive_expression . addop term
    (115) addop -> . PLUS
    (116) addop -> . MINUS

    SEMI            reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    AND             reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    RBRACKET        reduce using rule 94 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 145
    MINUS           shift and go to state 146

    addop                          shift and go to state 129

state 193

    (126) factor -> IDVAR . LPAREN args RPAREN
    (92) var -> IDVAR .
    (93) var -> IDVAR . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 122
    MINUSMINUS      reduce using rule 92 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 92 (var -> IDVAR .)
    TIMES           reduce using rule 92 (var -> IDVAR .)
    DIVIDE          reduce using rule 92 (var -> IDVAR .)
    PLUS            reduce using rule 92 (var -> IDVAR .)
    MINUS           reduce using rule 92 (var -> IDVAR .)
    SEMI            reduce using rule 92 (var -> IDVAR .)
    RPAREN          reduce using rule 92 (var -> IDVAR .)
    AND             reduce using rule 92 (var -> IDVAR .)
    OR              reduce using rule 92 (var -> IDVAR .)
    COMMA           reduce using rule 92 (var -> IDVAR .)
    RBRACKET        reduce using rule 92 (var -> IDVAR .)
    LESS            reduce using rule 92 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 92 (var -> IDVAR .)
    GREATER         reduce using rule 92 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 92 (var -> IDVAR .)
    DEQUAL          reduce using rule 92 (var -> IDVAR .)
    DISTINT         reduce using rule 92 (var -> IDVAR .)
    ISEQUAL         reduce using rule 92 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 92 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 92 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 92 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 92 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 92 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 92 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 92 (var -> IDVAR .)
    LBRACKET        shift and go to state 123


state 194

    (111) additive_expression -> additive_expression addop term .
    (117) term -> term . mulop factor
    (119) mulop -> . TIMES
    (120) mulop -> . DIVIDE

    LESS            reduce using rule 111 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 111 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 111 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 111 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 111 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 111 (additive_expression -> additive_expression addop term .)
    ISEQUAL         reduce using rule 111 (additive_expression -> additive_expression addop term .)
    IS_IDENTICAL    reduce using rule 111 (additive_expression -> additive_expression addop term .)
    IS_NOT_IDENTICAL reduce using rule 111 (additive_expression -> additive_expression addop term .)
    SR_EQUAL        reduce using rule 111 (additive_expression -> additive_expression addop term .)
    SL_EQUAL        reduce using rule 111 (additive_expression -> additive_expression addop term .)
    AND_EQUAL       reduce using rule 111 (additive_expression -> additive_expression addop term .)
    OR_EQUAL        reduce using rule 111 (additive_expression -> additive_expression addop term .)
    XOR_EQUAL       reduce using rule 111 (additive_expression -> additive_expression addop term .)
    CONCAT_EQUAL    reduce using rule 111 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 111 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 111 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 111 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 111 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 111 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 111 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 111 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 111 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 150
    DIVIDE          shift and go to state 151

    mulop                          shift and go to state 149

state 195

    (117) term -> term mulop factor .

    MINUSMINUS      reduce using rule 117 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 117 (term -> term mulop factor .)
    TIMES           reduce using rule 117 (term -> term mulop factor .)
    DIVIDE          reduce using rule 117 (term -> term mulop factor .)
    LESS            reduce using rule 117 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 117 (term -> term mulop factor .)
    GREATER         reduce using rule 117 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 117 (term -> term mulop factor .)
    DEQUAL          reduce using rule 117 (term -> term mulop factor .)
    DISTINT         reduce using rule 117 (term -> term mulop factor .)
    ISEQUAL         reduce using rule 117 (term -> term mulop factor .)
    IS_IDENTICAL    reduce using rule 117 (term -> term mulop factor .)
    IS_NOT_IDENTICAL reduce using rule 117 (term -> term mulop factor .)
    SR_EQUAL        reduce using rule 117 (term -> term mulop factor .)
    SL_EQUAL        reduce using rule 117 (term -> term mulop factor .)
    AND_EQUAL       reduce using rule 117 (term -> term mulop factor .)
    OR_EQUAL        reduce using rule 117 (term -> term mulop factor .)
    XOR_EQUAL       reduce using rule 117 (term -> term mulop factor .)
    CONCAT_EQUAL    reduce using rule 117 (term -> term mulop factor .)
    PLUS            reduce using rule 117 (term -> term mulop factor .)
    MINUS           reduce using rule 117 (term -> term mulop factor .)
    SEMI            reduce using rule 117 (term -> term mulop factor .)
    RPAREN          reduce using rule 117 (term -> term mulop factor .)
    AND             reduce using rule 117 (term -> term mulop factor .)
    OR              reduce using rule 117 (term -> term mulop factor .)
    COMMA           reduce using rule 117 (term -> term mulop factor .)
    RBRACKET        reduce using rule 117 (term -> term mulop factor .)


state 196

    (121) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    SR_EQUAL        reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    SL_EQUAL        reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    AND_EQUAL       reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    OR_EQUAL        reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    XOR_EQUAL       reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    CONCAT_EQUAL    reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 121 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 121 (factor -> LPAREN expression RPAREN .)


state 197

    (43) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI . selection_stmt
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI

    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29

    selection_stmt                 shift and go to state 228

state 198

    (53) fun_declaration -> FUNCTION ID LPAREN params RPAREN .
    (54) fun_declaration -> FUNCTION ID LPAREN params RPAREN . compount_stmt
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

    IDVAR           reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    TIMESTIMES      reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    AMPERSANT       reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FUNCTION        reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRIVATE         reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PUBLIC          reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PROTECTED       reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    REQUIRE         reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    INCLUDE         reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLASS           reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    IF              reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SWITCH          reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CASE            reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DEFAULT         reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FOR             reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    WHILE           reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DO              reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ID              reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ECHO            reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLOSETAG        reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SEMI            reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 53 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 109

    compount_stmt                  shift and go to state 229

state 199

    (57) param_list -> param_list COMMA . param_list
    (57) param_list -> . param_list COMMA param_list
    (58) param_list -> . param
    (59) param -> . IDVAR
    (60) param -> . IDVAR LBRACKET RBRACKET

    IDVAR           shift and go to state 160

    param_list                     shift and go to state 230
    param                          shift and go to state 159

state 200

    (60) param -> IDVAR LBRACKET . RBRACKET

    RBRACKET        shift and go to state 231


state 201

    (135) constructor -> ID . LPAREN RPAREN
    (136) constructor -> ID . LPAREN args RPAREN

    LPAREN          shift and go to state 232


state 202

    (134) typeclass -> ID IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 233


state 203

    (19) header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)


state 204

    (20) header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)


state 205

    (22) class_declaration -> CLASS ID LBLOCK attribute RBLOCK .

    IDVAR           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    TIMESTIMES      reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    AMPERSANT       reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    FUNCTION        reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    PRIVATE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    PUBLIC          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    PROTECTED       reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    REQUIRE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    INCLUDE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    CLASS           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    IF              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    SWITCH          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    CASE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    DEFAULT         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    FOR             reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    WHILE           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    DO              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    ID              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    ECHO            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    CLOSETAG        reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    BREAK           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    SEMI            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    ELSE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    ELSEIF          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    RBLOCK          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    LBLOCK          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    RETURN          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    LPAREN          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    NUM             reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    STRING          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    TRUE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)
    FALSE           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attribute RBLOCK .)


state 206

    (23) attribute -> attribute area . var_declaration
    (25) attribute -> attribute area . fun_declaration
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (53) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (54) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16
    FUNCTION        shift and go to state 17

    var_declaration                shift and go to state 234
    fun_declaration                shift and go to state 235

state 207

    (24) attribute -> area var_declaration .

    RBLOCK          reduce using rule 24 (attribute -> area var_declaration .)
    PRIVATE         reduce using rule 24 (attribute -> area var_declaration .)
    PUBLIC          reduce using rule 24 (attribute -> area var_declaration .)
    PROTECTED       reduce using rule 24 (attribute -> area var_declaration .)


state 208

    (26) attribute -> area fun_declaration .

    RBLOCK          reduce using rule 26 (attribute -> area fun_declaration .)
    PRIVATE         reduce using rule 26 (attribute -> area fun_declaration .)
    PUBLIC          reduce using rule 26 (attribute -> area fun_declaration .)
    PROTECTED       reduce using rule 26 (attribute -> area fun_declaration .)


state 209

    (74) selection_stmt -> IF LPAREN expression RPAREN statement .
    (75) selection_stmt -> IF LPAREN expression RPAREN statement . selection
    (76) selection -> . ELSE statement
    (77) selection -> . ELSEIF statement selection

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    IDVAR           reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUM             reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 237
    ELSEIF          shift and go to state 238

  ! ELSE            [ reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 74 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]

    selection                      shift and go to state 236

state 210

    (90) expression -> expression AND expression .
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          reduce using rule 90 (expression -> expression AND expression .)
    AND             reduce using rule 90 (expression -> expression AND expression .)
    OR              reduce using rule 90 (expression -> expression AND expression .)
    SEMI            reduce using rule 90 (expression -> expression AND expression .)
    COMMA           reduce using rule 90 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 90 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 167 ]
  ! OR              [ shift and go to state 168 ]


state 211

    (91) expression -> expression OR expression .
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          reduce using rule 91 (expression -> expression OR expression .)
    OR              reduce using rule 91 (expression -> expression OR expression .)
    SEMI            reduce using rule 91 (expression -> expression OR expression .)
    COMMA           reduce using rule 91 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 91 (expression -> expression OR expression .)
    AND             shift and go to state 167

  ! AND             [ reduce using rule 91 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 168 ]


state 212

    (87) expression -> var EQUAL expression .
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          reduce using rule 87 (expression -> var EQUAL expression .)
    SEMI            reduce using rule 87 (expression -> var EQUAL expression .)
    COMMA           reduce using rule 87 (expression -> var EQUAL expression .)
    RBRACKET        reduce using rule 87 (expression -> var EQUAL expression .)
    AND             shift and go to state 167
    OR              shift and go to state 168

  ! AND             [ reduce using rule 87 (expression -> var EQUAL expression .) ]
  ! OR              [ reduce using rule 87 (expression -> var EQUAL expression .) ]


state 213

    (89) expression -> var EQUAL AMPERSANT . IDVAR

    IDVAR           shift and go to state 239


state 214

    (78) selection_stmt -> SWITCH LPAREN var RPAREN statement .

    IDVAR           reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TIMESTIMES      reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    AMPERSANT       reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FUNCTION        reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRIVATE         reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PUBLIC          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PROTECTED       reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    REQUIRE         reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    INCLUDE         reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLASS           reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    IF              reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SWITCH          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CASE            reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DEFAULT         reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FOR             reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    WHILE           reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DO              reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ID              reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ECHO            reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLOSETAG        reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    BREAK           reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SEMI            reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSE            reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSEIF          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RBLOCK          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LBLOCK          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RETURN          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LPAREN          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    NUM             reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    STRING          reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TRUE            reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FALSE           reduce using rule 78 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)


state 215

    (79) selection_stmt -> CASE NUM COLON statement BREAK . SEMI

    SEMI            shift and go to state 240


state 216

    (80) selection_stmt -> CASE STRING COLON statement BREAK . SEMI

    SEMI            shift and go to state 241


state 217

    (81) selection_stmt -> DEFAULT COLON statement BREAK SEMI .

    IDVAR           reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLASS           reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    IF              reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CASE            reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FOR             reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    WHILE           reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DO              reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ID              reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ECHO            reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    BREAK           reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SEMI            reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSE            reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RETURN          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    NUM             reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    STRING          reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TRUE            reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FALSE           reduce using rule 81 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)


state 218

    (61) compount_stmt -> LBLOCK echo_stmt local_declarations . echo_stmt statement_list echo_stmt RBLOCK
    (62) local_declarations -> local_declarations . var_declaration
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (30) var_declaration -> . IDVAR SEMI var_declaration
    (31) var_declaration -> . IDVAR SEMI
    (32) var_declaration -> . TIMESTIMES IDVAR SEMI
    (33) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR IGUAL NUM SEMI var_declaration
    (35) var_declaration -> . IDVAR IGUAL NUM SEMI
    (36) var_declaration -> . IDVAR IGUAL STRING SEMI var_declaration
    (37) var_declaration -> . IDVAR IGUAL STRING SEMI
    (38) var_declaration -> . IDVAR IGUAL boolean SEMI var_declaration
    (39) var_declaration -> . IDVAR IGUAL boolean SEMI
    (40) var_declaration -> . IDVAR IGUAL IDVAR SEMI var_declaration
    (41) var_declaration -> . IDVAR IGUAL IDVAR SEMI
    (42) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (43) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (44) var_declaration -> . AMPERSANT IDVAR SEMI
    (45) var_declaration -> . IDVAR IGUAL simple_expression SEMI
    (137) empty -> .

  ! shift/reduce conflict for IDVAR resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 16
    ECHO            reduce using rule 137 (empty -> .)
    LBLOCK          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    SWITCH          reduce using rule 137 (empty -> .)
    CASE            reduce using rule 137 (empty -> .)
    DEFAULT         reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    CLASS           reduce using rule 137 (empty -> .)
    PRIVATE         reduce using rule 137 (empty -> .)
    PUBLIC          reduce using rule 137 (empty -> .)
    PROTECTED       reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    NUM             reduce using rule 137 (empty -> .)
    STRING          reduce using rule 137 (empty -> .)
    TRUE            reduce using rule 137 (empty -> .)
    FALSE           reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]

    echo_stmt                      shift and go to state 242
    var_declaration                shift and go to state 243
    empty                          shift and go to state 25

state 219

    (63) local_declarations -> empty .

    IDVAR           reduce using rule 63 (local_declarations -> empty .)
    TIMESTIMES      reduce using rule 63 (local_declarations -> empty .)
    AMPERSANT       reduce using rule 63 (local_declarations -> empty .)
    ECHO            reduce using rule 63 (local_declarations -> empty .)
    LBLOCK          reduce using rule 63 (local_declarations -> empty .)
    IF              reduce using rule 63 (local_declarations -> empty .)
    SWITCH          reduce using rule 63 (local_declarations -> empty .)
    CASE            reduce using rule 63 (local_declarations -> empty .)
    DEFAULT         reduce using rule 63 (local_declarations -> empty .)
    FOR             reduce using rule 63 (local_declarations -> empty .)
    WHILE           reduce using rule 63 (local_declarations -> empty .)
    DO              reduce using rule 63 (local_declarations -> empty .)
    RETURN          reduce using rule 63 (local_declarations -> empty .)
    CLASS           reduce using rule 63 (local_declarations -> empty .)
    PRIVATE         reduce using rule 63 (local_declarations -> empty .)
    PUBLIC          reduce using rule 63 (local_declarations -> empty .)
    PROTECTED       reduce using rule 63 (local_declarations -> empty .)
    LPAREN          reduce using rule 63 (local_declarations -> empty .)
    NUM             reduce using rule 63 (local_declarations -> empty .)
    STRING          reduce using rule 63 (local_declarations -> empty .)
    TRUE            reduce using rule 63 (local_declarations -> empty .)
    FALSE           reduce using rule 63 (local_declarations -> empty .)
    RBLOCK          reduce using rule 63 (local_declarations -> empty .)


state 220

    (86) return_stmt -> RETURN expression SEMI .

    BREAK           reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    SEMI            reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    ELSE            reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    ELSEIF          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    IDVAR           reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    TIMESTIMES      reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    AMPERSANT       reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    PRIVATE         reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    PUBLIC          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    PROTECTED       reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    REQUIRE         reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    INCLUDE         reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    CLASS           reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    IF              reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    SWITCH          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    CASE            reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    FOR             reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    WHILE           reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    DO              reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    ID              reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    ECHO            reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    CLOSETAG        reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    RBLOCK          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    LBLOCK          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    RETURN          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    LPAREN          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    NUM             reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    STRING          reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    TRUE            reduce using rule 86 (return_stmt -> RETURN expression SEMI .)
    FALSE           reduce using rule 86 (return_stmt -> RETURN expression SEMI .)


state 221

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI expression . SEMI additive_expression RPAREN statement
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    SEMI            shift and go to state 244
    AND             shift and go to state 167
    OR              shift and go to state 168


state 222

    (83) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    IDVAR           reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 83 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 223

    (84) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 245


state 224

    (21) class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .

    IDVAR           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    TIMESTIMES      reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    AMPERSANT       reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    FUNCTION        reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    PRIVATE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    PUBLIC          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    PROTECTED       reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    REQUIRE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    INCLUDE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    CLASS           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    IF              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    SWITCH          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    CASE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    DEFAULT         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    FOR             reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    WHILE           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    DO              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    ID              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    ECHO            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    CLOSETAG        reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    BREAK           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    SEMI            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    ELSE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    ELSEIF          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    RBLOCK          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    LBLOCK          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    RETURN          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    LPAREN          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    NUM             reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    STRING          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    TRUE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)
    FALSE           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attribute RBLOCK .)


state 225

    (126) factor -> IDVAR LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    TIMES           reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    DIVIDE          reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    LESS            reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    GREATER         reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    DEQUAL          reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    DISTINT         reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    ISEQUAL         reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    IS_IDENTICAL    reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    SR_EQUAL        reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    SL_EQUAL        reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    AND_EQUAL       reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    OR_EQUAL        reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    XOR_EQUAL       reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    CONCAT_EQUAL    reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    PLUS            reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    MINUS           reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    SEMI            reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    RPAREN          reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    AND             reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    OR              reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    COMMA           reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)
    RBRACKET        reduce using rule 126 (factor -> IDVAR LPAREN args RPAREN .)


state 226

    (130) args_list -> args_list COMMA . expression
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 246
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 227

    (93) var -> IDVAR LBRACKET expression RBRACKET .

    MINUSMINUS      reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESS            reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_IDENTICAL    reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    SR_EQUAL        reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    SL_EQUAL        reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND_EQUAL       reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR_EQUAL        reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    XOR_EQUAL       reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    CONCAT_EQUAL    reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND             reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR              reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 93 (var -> IDVAR LBRACKET expression RBRACKET .)


state 228

    (43) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .

    IDVAR           reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TIMESTIMES      reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    AMPERSANT       reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FUNCTION        reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRIVATE         reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PUBLIC          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PROTECTED       reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    REQUIRE         reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    INCLUDE         reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLASS           reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    IF              reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SWITCH          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CASE            reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DEFAULT         reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FOR             reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    WHILE           reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DO              reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ID              reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ECHO            reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLOSETAG        reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SEMI            reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RBLOCK          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LBLOCK          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RETURN          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LPAREN          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    NUM             reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    STRING          reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TRUE            reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FALSE           reduce using rule 43 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)


state 229

    (54) fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .

    IDVAR           reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    TIMESTIMES      reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    AMPERSANT       reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FUNCTION        reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRIVATE         reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PUBLIC          reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PROTECTED       reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    REQUIRE         reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    INCLUDE         reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLASS           reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    IF              reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SWITCH          reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CASE            reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DEFAULT         reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FOR             reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    WHILE           reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DO              reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ECHO            reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLOSETAG        reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SEMI            reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RBLOCK          reduce using rule 54 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)


state 230

    (57) param_list -> param_list COMMA param_list .
    (57) param_list -> param_list . COMMA param_list

    COMMA           reduce using rule 57 (param_list -> param_list COMMA param_list .)
    RPAREN          reduce using rule 57 (param_list -> param_list COMMA param_list .)

  ! COMMA           [ shift and go to state 199 ]


state 231

    (60) param -> IDVAR LBRACKET RBRACKET .

    COMMA           reduce using rule 60 (param -> IDVAR LBRACKET RBRACKET .)
    RPAREN          reduce using rule 60 (param -> IDVAR LBRACKET RBRACKET .)


state 232

    (135) constructor -> ID LPAREN . RPAREN
    (136) constructor -> ID LPAREN . args RPAREN
    (127) args -> . args_list
    (128) args -> . empty
    (129) args -> . VOID
    (130) args_list -> . args_list COMMA expression
    (131) args_list -> . expression
    (137) empty -> .
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 247
    VOID            shift and go to state 186
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! RPAREN          [ reduce using rule 137 (empty -> .) ]

    args                           shift and go to state 248
    args_list                      shift and go to state 184
    empty                          shift and go to state 185
    expression                     shift and go to state 187
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 233

    (134) typeclass -> ID IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 134 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)


state 234

    (23) attribute -> attribute area var_declaration .

    RBLOCK          reduce using rule 23 (attribute -> attribute area var_declaration .)
    PRIVATE         reduce using rule 23 (attribute -> attribute area var_declaration .)
    PUBLIC          reduce using rule 23 (attribute -> attribute area var_declaration .)
    PROTECTED       reduce using rule 23 (attribute -> attribute area var_declaration .)


state 235

    (25) attribute -> attribute area fun_declaration .

    RBLOCK          reduce using rule 25 (attribute -> attribute area fun_declaration .)
    PRIVATE         reduce using rule 25 (attribute -> attribute area fun_declaration .)
    PUBLIC          reduce using rule 25 (attribute -> attribute area fun_declaration .)
    PROTECTED       reduce using rule 25 (attribute -> attribute area fun_declaration .)


state 236

    (75) selection_stmt -> IF LPAREN expression RPAREN statement selection .

    IDVAR           reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TIMESTIMES      reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    AMPERSANT       reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FUNCTION        reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRIVATE         reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PUBLIC          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PROTECTED       reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    REQUIRE         reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    INCLUDE         reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLASS           reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    IF              reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SWITCH          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CASE            reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DEFAULT         reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FOR             reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    WHILE           reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DO              reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ID              reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ECHO            reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLOSETAG        reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    BREAK           reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SEMI            reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSE            reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSEIF          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RBLOCK          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LBLOCK          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RETURN          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LPAREN          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    NUM             reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    STRING          reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TRUE            reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FALSE           reduce using rule 75 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)


state 237

    (76) selection -> ELSE . statement
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    REQUIRE         reduce using rule 137 (empty -> .)
    INCLUDE         reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    statement                      shift and go to state 249
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 238

    (77) selection -> ELSEIF . statement selection
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    statement                      shift and go to state 250
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 239

    (89) expression -> var EQUAL AMPERSANT IDVAR .

    RPAREN          reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)
    AND             reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)
    OR              reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)
    SEMI            reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)
    COMMA           reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)
    RBRACKET        reduce using rule 89 (expression -> var EQUAL AMPERSANT IDVAR .)


state 240

    (79) selection_stmt -> CASE NUM COLON statement BREAK SEMI .

    IDVAR           reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLASS           reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    IF              reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CASE            reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FOR             reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    WHILE           reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DO              reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ID              reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ECHO            reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    BREAK           reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SEMI            reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSE            reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RETURN          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    NUM             reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    STRING          reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TRUE            reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FALSE           reduce using rule 79 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)


state 241

    (80) selection_stmt -> CASE STRING COLON statement BREAK SEMI .

    IDVAR           reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLASS           reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    IF              reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CASE            reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FOR             reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    WHILE           reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DO              reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ID              reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ECHO            reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    BREAK           reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SEMI            reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSE            reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RETURN          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    NUM             reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    STRING          reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TRUE            reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FALSE           reduce using rule 80 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)


state 242

    (61) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt . statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (64) statement_list -> . statement_list statement
    (65) statement_list -> . empty
    (137) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 37
    LBLOCK          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    SWITCH          reduce using rule 137 (empty -> .)
    CASE            reduce using rule 137 (empty -> .)
    DEFAULT         reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    CLASS           reduce using rule 137 (empty -> .)
    PRIVATE         reduce using rule 137 (empty -> .)
    PUBLIC          reduce using rule 137 (empty -> .)
    PROTECTED       reduce using rule 137 (empty -> .)
    IDVAR           reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    NUM             reduce using rule 137 (empty -> .)
    STRING          reduce using rule 137 (empty -> .)
    TRUE            reduce using rule 137 (empty -> .)
    FALSE           reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)

  ! ECHO            [ reduce using rule 137 (empty -> .) ]

    statement_list                 shift and go to state 251
    empty                          shift and go to state 252

state 243

    (62) local_declarations -> local_declarations var_declaration .

    IDVAR           reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    TIMESTIMES      reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    AMPERSANT       reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    CLASS           reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    PUBLIC          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    PROTECTED       reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 62 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 62 (local_declarations -> local_declarations var_declaration .)


state 244

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI . additive_expression RPAREN statement
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    IDVAR           shift and go to state 193
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    additive_expression            shift and go to state 253
    term                           shift and go to state 77
    factor                         shift and go to state 78
    var                            shift and go to state 80
    boolean                        shift and go to state 95

state 245

    (84) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 254


state 246

    (130) args_list -> args_list COMMA expression .
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    COMMA           reduce using rule 130 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 130 (args_list -> args_list COMMA expression .)
    AND             shift and go to state 167
    OR              shift and go to state 168


state 247

    (135) constructor -> ID LPAREN RPAREN .

    SEMI            reduce using rule 135 (constructor -> ID LPAREN RPAREN .)


state 248

    (136) constructor -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 255


state 249

    (76) selection -> ELSE statement .

    ELSE            reduce using rule 76 (selection -> ELSE statement .)
    ELSEIF          reduce using rule 76 (selection -> ELSE statement .)
    IDVAR           reduce using rule 76 (selection -> ELSE statement .)
    TIMESTIMES      reduce using rule 76 (selection -> ELSE statement .)
    AMPERSANT       reduce using rule 76 (selection -> ELSE statement .)
    FUNCTION        reduce using rule 76 (selection -> ELSE statement .)
    PRIVATE         reduce using rule 76 (selection -> ELSE statement .)
    PUBLIC          reduce using rule 76 (selection -> ELSE statement .)
    PROTECTED       reduce using rule 76 (selection -> ELSE statement .)
    REQUIRE         reduce using rule 76 (selection -> ELSE statement .)
    INCLUDE         reduce using rule 76 (selection -> ELSE statement .)
    CLASS           reduce using rule 76 (selection -> ELSE statement .)
    IF              reduce using rule 76 (selection -> ELSE statement .)
    SWITCH          reduce using rule 76 (selection -> ELSE statement .)
    CASE            reduce using rule 76 (selection -> ELSE statement .)
    DEFAULT         reduce using rule 76 (selection -> ELSE statement .)
    FOR             reduce using rule 76 (selection -> ELSE statement .)
    WHILE           reduce using rule 76 (selection -> ELSE statement .)
    DO              reduce using rule 76 (selection -> ELSE statement .)
    ID              reduce using rule 76 (selection -> ELSE statement .)
    ECHO            reduce using rule 76 (selection -> ELSE statement .)
    CLOSETAG        reduce using rule 76 (selection -> ELSE statement .)
    BREAK           reduce using rule 76 (selection -> ELSE statement .)
    SEMI            reduce using rule 76 (selection -> ELSE statement .)
    RBLOCK          reduce using rule 76 (selection -> ELSE statement .)
    LBLOCK          reduce using rule 76 (selection -> ELSE statement .)
    RETURN          reduce using rule 76 (selection -> ELSE statement .)
    LPAREN          reduce using rule 76 (selection -> ELSE statement .)
    NUM             reduce using rule 76 (selection -> ELSE statement .)
    STRING          reduce using rule 76 (selection -> ELSE statement .)
    TRUE            reduce using rule 76 (selection -> ELSE statement .)
    FALSE           reduce using rule 76 (selection -> ELSE statement .)


state 250

    (77) selection -> ELSEIF statement . selection
    (76) selection -> . ELSE statement
    (77) selection -> . ELSEIF statement selection

    ELSE            shift and go to state 237
    ELSEIF          shift and go to state 238

    selection                      shift and go to state 256

state 251

    (61) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list . echo_stmt RBLOCK
    (64) statement_list -> statement_list . statement
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (137) empty -> .
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBLOCK          reduce using rule 137 (empty -> .)
    ECHO            reduce using rule 137 (empty -> .)
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    echo_stmt                      shift and go to state 257
    statement                      shift and go to state 258
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    expression                     shift and go to state 108
    var                            shift and go to state 90
    additive_expression            shift and go to state 76
    area                           shift and go to state 111
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 252

    (65) statement_list -> empty .

    LBLOCK          reduce using rule 65 (statement_list -> empty .)
    IF              reduce using rule 65 (statement_list -> empty .)
    SWITCH          reduce using rule 65 (statement_list -> empty .)
    CASE            reduce using rule 65 (statement_list -> empty .)
    DEFAULT         reduce using rule 65 (statement_list -> empty .)
    FOR             reduce using rule 65 (statement_list -> empty .)
    WHILE           reduce using rule 65 (statement_list -> empty .)
    DO              reduce using rule 65 (statement_list -> empty .)
    RETURN          reduce using rule 65 (statement_list -> empty .)
    CLASS           reduce using rule 65 (statement_list -> empty .)
    PRIVATE         reduce using rule 65 (statement_list -> empty .)
    PUBLIC          reduce using rule 65 (statement_list -> empty .)
    PROTECTED       reduce using rule 65 (statement_list -> empty .)
    IDVAR           reduce using rule 65 (statement_list -> empty .)
    LPAREN          reduce using rule 65 (statement_list -> empty .)
    NUM             reduce using rule 65 (statement_list -> empty .)
    STRING          reduce using rule 65 (statement_list -> empty .)
    TRUE            reduce using rule 65 (statement_list -> empty .)
    FALSE           reduce using rule 65 (statement_list -> empty .)
    RBLOCK          reduce using rule 65 (statement_list -> empty .)
    ECHO            reduce using rule 65 (statement_list -> empty .)


state 253

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression . RPAREN statement
    (111) additive_expression -> additive_expression . addop term
    (115) addop -> . PLUS
    (116) addop -> . MINUS

    RPAREN          shift and go to state 259
    PLUS            shift and go to state 145
    MINUS           shift and go to state 146

    addop                          shift and go to state 129

state 254

    (84) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN . expression RPAREN
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    expression                     shift and go to state 260
    var                            shift and go to state 90
    simple_expression              shift and go to state 91
    additive_expression            shift and go to state 76
    term                           shift and go to state 77
    factor                         shift and go to state 78
    boolean                        shift and go to state 95

state 255

    (136) constructor -> ID LPAREN args RPAREN .

    SEMI            reduce using rule 136 (constructor -> ID LPAREN args RPAREN .)


state 256

    (77) selection -> ELSEIF statement selection .

    ELSE            reduce using rule 77 (selection -> ELSEIF statement selection .)
    ELSEIF          reduce using rule 77 (selection -> ELSEIF statement selection .)
    IDVAR           reduce using rule 77 (selection -> ELSEIF statement selection .)
    TIMESTIMES      reduce using rule 77 (selection -> ELSEIF statement selection .)
    AMPERSANT       reduce using rule 77 (selection -> ELSEIF statement selection .)
    FUNCTION        reduce using rule 77 (selection -> ELSEIF statement selection .)
    PRIVATE         reduce using rule 77 (selection -> ELSEIF statement selection .)
    PUBLIC          reduce using rule 77 (selection -> ELSEIF statement selection .)
    PROTECTED       reduce using rule 77 (selection -> ELSEIF statement selection .)
    REQUIRE         reduce using rule 77 (selection -> ELSEIF statement selection .)
    INCLUDE         reduce using rule 77 (selection -> ELSEIF statement selection .)
    CLASS           reduce using rule 77 (selection -> ELSEIF statement selection .)
    IF              reduce using rule 77 (selection -> ELSEIF statement selection .)
    SWITCH          reduce using rule 77 (selection -> ELSEIF statement selection .)
    CASE            reduce using rule 77 (selection -> ELSEIF statement selection .)
    DEFAULT         reduce using rule 77 (selection -> ELSEIF statement selection .)
    FOR             reduce using rule 77 (selection -> ELSEIF statement selection .)
    WHILE           reduce using rule 77 (selection -> ELSEIF statement selection .)
    DO              reduce using rule 77 (selection -> ELSEIF statement selection .)
    ID              reduce using rule 77 (selection -> ELSEIF statement selection .)
    ECHO            reduce using rule 77 (selection -> ELSEIF statement selection .)
    CLOSETAG        reduce using rule 77 (selection -> ELSEIF statement selection .)
    BREAK           reduce using rule 77 (selection -> ELSEIF statement selection .)
    SEMI            reduce using rule 77 (selection -> ELSEIF statement selection .)
    RBLOCK          reduce using rule 77 (selection -> ELSEIF statement selection .)
    LBLOCK          reduce using rule 77 (selection -> ELSEIF statement selection .)
    RETURN          reduce using rule 77 (selection -> ELSEIF statement selection .)
    LPAREN          reduce using rule 77 (selection -> ELSEIF statement selection .)
    NUM             reduce using rule 77 (selection -> ELSEIF statement selection .)
    STRING          reduce using rule 77 (selection -> ELSEIF statement selection .)
    TRUE            reduce using rule 77 (selection -> ELSEIF statement selection .)
    FALSE           reduce using rule 77 (selection -> ELSEIF statement selection .)


state 257

    (61) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt . RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (72) statement -> echo_stmt .

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
    RBLOCK          shift and go to state 261
    ECHO            shift and go to state 37
    LBLOCK          reduce using rule 72 (statement -> echo_stmt .)
    IF              reduce using rule 72 (statement -> echo_stmt .)
    SWITCH          reduce using rule 72 (statement -> echo_stmt .)
    CASE            reduce using rule 72 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 72 (statement -> echo_stmt .)
    FOR             reduce using rule 72 (statement -> echo_stmt .)
    WHILE           reduce using rule 72 (statement -> echo_stmt .)
    DO              reduce using rule 72 (statement -> echo_stmt .)
    RETURN          reduce using rule 72 (statement -> echo_stmt .)
    CLASS           reduce using rule 72 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 72 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 72 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 72 (statement -> echo_stmt .)
    IDVAR           reduce using rule 72 (statement -> echo_stmt .)
    LPAREN          reduce using rule 72 (statement -> echo_stmt .)
    NUM             reduce using rule 72 (statement -> echo_stmt .)
    STRING          reduce using rule 72 (statement -> echo_stmt .)
    TRUE            reduce using rule 72 (statement -> echo_stmt .)
    FALSE           reduce using rule 72 (statement -> echo_stmt .)

  ! RBLOCK          [ reduce using rule 72 (statement -> echo_stmt .) ]
  ! ECHO            [ reduce using rule 72 (statement -> echo_stmt .) ]


state 258

    (64) statement_list -> statement_list statement .

    LBLOCK          reduce using rule 64 (statement_list -> statement_list statement .)
    IF              reduce using rule 64 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 64 (statement_list -> statement_list statement .)
    CASE            reduce using rule 64 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 64 (statement_list -> statement_list statement .)
    FOR             reduce using rule 64 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 64 (statement_list -> statement_list statement .)
    DO              reduce using rule 64 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 64 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 64 (statement_list -> statement_list statement .)
    PRIVATE         reduce using rule 64 (statement_list -> statement_list statement .)
    PUBLIC          reduce using rule 64 (statement_list -> statement_list statement .)
    PROTECTED       reduce using rule 64 (statement_list -> statement_list statement .)
    IDVAR           reduce using rule 64 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 64 (statement_list -> statement_list statement .)
    NUM             reduce using rule 64 (statement_list -> statement_list statement .)
    STRING          reduce using rule 64 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 64 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 64 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 64 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 64 (statement_list -> statement_list statement .)


state 259

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN . statement
    (66) statement -> . expression_stmt
    (67) statement -> . compount_stmt
    (68) statement -> . selection_stmt
    (69) statement -> . iteration_stmt
    (70) statement -> . return_stmt
    (71) statement -> . class_declaration
    (72) statement -> . echo_stmt
    (73) expression_stmt -> . expression SEMI
    (61) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (74) selection_stmt -> . IF LPAREN expression RPAREN statement
    (75) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (78) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (79) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (80) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (81) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (82) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (83) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (84) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (85) return_stmt -> . RETURN SEMI
    (86) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attribute RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attribute RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (87) expression -> . var EQUAL expression
    (88) expression -> . simple_expression
    (89) expression -> . var EQUAL AMPERSANT IDVAR
    (90) expression -> . expression AND expression
    (91) expression -> . expression OR expression
    (27) area -> . PRIVATE
    (28) area -> . PUBLIC
    (29) area -> . PROTECTED
    (137) empty -> .
    (92) var -> . IDVAR
    (93) var -> . IDVAR LBRACKET expression RBRACKET
    (94) simple_expression -> . additive_expression relop additive_expression
    (95) simple_expression -> . additive_expression
    (111) additive_expression -> . additive_expression addop term
    (112) additive_expression -> . term
    (113) additive_expression -> . term MINUSMINUS
    (114) additive_expression -> . term PLUSPLUS
    (117) term -> . term mulop factor
    (118) term -> . factor
    (121) factor -> . LPAREN expression RPAREN
    (122) factor -> . var
    (123) factor -> . NUM
    (124) factor -> . STRING
    (125) factor -> . boolean
    (126) factor -> . IDVAR LPAREN args RPAREN
    (132) boolean -> . TRUE
    (133) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 109
    IF              shift and go to state 26
    SWITCH          shift and go to state 27
    CASE            shift and go to state 28
    DEFAULT         shift and go to state 29
    FOR             shift and go to state 30
    WHILE           shift and go to state 31
    DO              shift and go to state 32
    RETURN          shift and go to state 110
    CLASS           shift and go to state 24
    PRIVATE         shift and go to state 19
    PUBLIC          shift and go to state 20
    PROTECTED       shift and go to state 21
    ECHO            reduce using rule 137 (empty -> .)
    ELSE            reduce using rule 137 (empty -> .)
    ELSEIF          reduce using rule 137 (empty -> .)
    TIMESTIMES      reduce using rule 137 (empty -> .)
    AMPERSANT       reduce using rule 137 (empty -> .)
    FUNCTION        reduce using rule 137 (empty -> .)
    REQUIRE         reduce using rule 137 (empty -> .)
    INCLUDE         reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    CLOSETAG        reduce using rule 137 (empty -> .)
    BREAK           reduce using rule 137 (empty -> .)
    SEMI            reduce using rule 137 (empty -> .)
    RBLOCK          reduce using rule 137 (empty -> .)
    IDVAR           shift and go to state 92
    LPAREN          shift and go to state 79
    NUM             shift and go to state 93
    STRING          shift and go to state 94
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

  ! IDVAR           [ reduce using rule 137 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 137 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 137 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 137 (empty -> .) ]
  ! CLASS           [ reduce using rule 137 (empty -> .) ]
  ! IF              [ reduce using rule 137 (empty -> .) ]
  ! SWITCH          [ reduce using rule 137 (empty -> .) ]
  ! CASE            [ reduce using rule 137 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 137 (empty -> .) ]
  ! FOR             [ reduce using rule 137 (empty -> .) ]
  ! WHILE           [ reduce using rule 137 (empty -> .) ]
  ! DO              [ reduce using rule 137 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 137 (empty -> .) ]
  ! RETURN          [ reduce using rule 137 (empty -> .) ]
  ! LPAREN          [ reduce using rule 137 (empty -> .) ]
  ! NUM             [ reduce using rule 137 (empty -> .) ]
  ! STRING          [ reduce using rule 137 (empty -> .) ]
  ! TRUE            [ reduce using rule 137 (empty -> .) ]
  ! FALSE           [ reduce using rule 137 (empty -> .) ]

    expression                     shift and go to state 108
    additive_expression            shift and go to state 76
    statement                      shift and go to state 262
    expression_stmt                shift and go to state 101
    compount_stmt                  shift and go to state 102
    selection_stmt                 shift and go to state 103
    iteration_stmt                 shift and go to state 104
    return_stmt                    shift and go to state 105
    class_declaration              shift and go to state 106
    echo_stmt                      shift and go to state 107
    var                            shift and go to state 90
    area                           shift and go to state 111
    empty                          shift and go to state 25
    boolean                        shift and go to state 95
    simple_expression              shift and go to state 91
    term                           shift and go to state 77
    factor                         shift and go to state 78

state 260

    (84) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression . RPAREN
    (90) expression -> expression . AND expression
    (91) expression -> expression . OR expression

    RPAREN          shift and go to state 263
    AND             shift and go to state 167
    OR              shift and go to state 168


state 261

    (61) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .

    BREAK           reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SEMI            reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSE            reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSEIF          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IDVAR           reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TIMESTIMES      reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    AMPERSANT       reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FUNCTION        reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRIVATE         reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PUBLIC          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PROTECTED       reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    REQUIRE         reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    INCLUDE         reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLASS           reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IF              reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SWITCH          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CASE            reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DEFAULT         reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FOR             reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    WHILE           reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DO              reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ID              reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ECHO            reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLOSETAG        reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RBLOCK          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LBLOCK          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RETURN          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LPAREN          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    NUM             reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    STRING          reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TRUE            reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FALSE           reduce using rule 61 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)


state 262

    (82) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .

    IDVAR           reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    TIMESTIMES      reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    AMPERSANT       reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PRIVATE         reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PUBLIC          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PROTECTED       reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    REQUIRE         reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    INCLUDE         reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CLASS           reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    IF              reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    SWITCH          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CASE            reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FOR             reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    WHILE           reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    DO              reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ID              reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ECHO            reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CLOSETAG        reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    BREAK           reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    SEMI            reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ELSE            reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    RBLOCK          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    LBLOCK          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    RETURN          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    LPAREN          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    NUM             reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    STRING          reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    TRUE            reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FALSE           reduce using rule 82 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)


state 263

    (84) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .

    IDVAR           reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TIMESTIMES      reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRIVATE         reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PUBLIC          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PROTECTED       reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    REQUIRE         reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    INCLUDE         reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLASS           reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SWITCH          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CASE            reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DEFAULT         reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ID              reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ECHO            reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLOSETAG        reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SEMI            reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSEIF          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LBLOCK          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    NUM             reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 84 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDVAR in state 2 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 2 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 2 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 4 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 4 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 4 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 4 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 4 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 4 resolved as shift
WARNING: shift/reduce conflict for CASE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 10 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 71 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 72 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 73 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 74 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 107 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 166 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 166 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 166 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 166 resolved as shift
WARNING: shift/reduce conflict for CASE in state 166 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 166 resolved as shift
WARNING: shift/reduce conflict for FOR in state 166 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 166 resolved as shift
WARNING: shift/reduce conflict for DO in state 166 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 166 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 166 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 166 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 166 resolved as shift
WARNING: shift/reduce conflict for NUM in state 166 resolved as shift
WARNING: shift/reduce conflict for STRING in state 166 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 166 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 166 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 170 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 170 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 170 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 170 resolved as shift
WARNING: shift/reduce conflict for IF in state 170 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 170 resolved as shift
WARNING: shift/reduce conflict for CASE in state 170 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 170 resolved as shift
WARNING: shift/reduce conflict for FOR in state 170 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 170 resolved as shift
WARNING: shift/reduce conflict for DO in state 170 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 170 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 170 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 170 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 170 resolved as shift
WARNING: shift/reduce conflict for NUM in state 170 resolved as shift
WARNING: shift/reduce conflict for STRING in state 170 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 170 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 170 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 175 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 179 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 179 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 179 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 179 resolved as shift
WARNING: shift/reduce conflict for IF in state 179 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 179 resolved as shift
WARNING: shift/reduce conflict for CASE in state 179 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 179 resolved as shift
WARNING: shift/reduce conflict for FOR in state 179 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 179 resolved as shift
WARNING: shift/reduce conflict for DO in state 179 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 179 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 179 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 179 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 179 resolved as shift
WARNING: shift/reduce conflict for NUM in state 179 resolved as shift
WARNING: shift/reduce conflict for STRING in state 179 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 179 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 179 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 209 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 209 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 218 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 232 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 237 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 237 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 237 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 237 resolved as shift
WARNING: shift/reduce conflict for IF in state 237 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 237 resolved as shift
WARNING: shift/reduce conflict for CASE in state 237 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 237 resolved as shift
WARNING: shift/reduce conflict for FOR in state 237 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 237 resolved as shift
WARNING: shift/reduce conflict for DO in state 237 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 237 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 237 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 237 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 237 resolved as shift
WARNING: shift/reduce conflict for NUM in state 237 resolved as shift
WARNING: shift/reduce conflict for STRING in state 237 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 237 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 237 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 242 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 251 resolved as shift
WARNING: shift/reduce conflict for IF in state 251 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 251 resolved as shift
WARNING: shift/reduce conflict for CASE in state 251 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 251 resolved as shift
WARNING: shift/reduce conflict for FOR in state 251 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 251 resolved as shift
WARNING: shift/reduce conflict for DO in state 251 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 251 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 251 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 251 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 251 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 251 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 251 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 251 resolved as shift
WARNING: shift/reduce conflict for NUM in state 251 resolved as shift
WARNING: shift/reduce conflict for STRING in state 251 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 251 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 251 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 257 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 257 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 259 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 259 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 259 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 259 resolved as shift
WARNING: shift/reduce conflict for IF in state 259 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 259 resolved as shift
WARNING: shift/reduce conflict for CASE in state 259 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 259 resolved as shift
WARNING: shift/reduce conflict for FOR in state 259 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 259 resolved as shift
WARNING: shift/reduce conflict for DO in state 259 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 259 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 259 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 259 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 259 resolved as shift
WARNING: shift/reduce conflict for NUM in state 259 resolved as shift
WARNING: shift/reduce conflict for STRING in state 259 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 259 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 259 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (declaration_list -> declaration)
WARNING: rejected rule (empty -> <empty>) in state 4
