Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    ARRAY
    AS
    CALLABLE
    CATCH
    CLONE
    CLOSETAGAL
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DECLARE
    DIE
    DOT_DOT
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    PLUSEQUAL
    PRINT
    QUOTES
    REQUIRE_ONCE
    STATIC
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    XOR
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENTAG declaration_list CLOSETAG
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> area fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     declaration -> echo_stmt
Rule 10    declaration -> selection_stmt
Rule 11    declaration -> iteration_stmt
Rule 12    declaration -> typeclass
Rule 13    echo_stmt -> echo_stmt ECHO echo_params SEMI
Rule 14    echo_stmt -> empty
Rule 15    echo_params -> echo_param
Rule 16    echo_params -> echo_param DOT echo_params
Rule 17    echo_param -> STRING
Rule 18    echo_param -> IDVAR
Rule 19    echo_param -> NUM
Rule 20    echo_param -> boolean
Rule 21    echo_param -> fun_declaration
Rule 22    echo_param -> fun_call
Rule 23    header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI
Rule 24    header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI
Rule 25    class_declaration -> area CLASS ID LBLOCK attributes RBLOCK
Rule 26    class_declaration -> CLASS ID LBLOCK attributes RBLOCK
Rule 27    attributes -> attribute
Rule 28    attributes -> attribute attributes
Rule 29    attribute -> attribute area var_declaration
Rule 30    attribute -> area var_declaration
Rule 31    attribute -> attribute area fun_declaration
Rule 32    attribute -> area fun_declaration
Rule 33    attribute -> fun_declaration
Rule 34    area -> PRIVATE
Rule 35    area -> PUBLIC
Rule 36    area -> PROTECTED
Rule 37    var_declaration -> IDVAR SEMI var_declaration
Rule 38    var_declaration -> IDVAR SEMI
Rule 39    var_declaration -> TIMESTIMES IDVAR SEMI
Rule 40    var_declaration -> TIMESTIMES IDVAR SEMI var_declaration
Rule 41    var_declaration -> assing_var IGUAL NUM SEMI var_declaration
Rule 42    var_declaration -> assing_var IGUAL NUM SEMI
Rule 43    var_declaration -> assing_var IGUAL STRING SEMI var_declaration
Rule 44    var_declaration -> assing_var IGUAL STRING SEMI
Rule 45    var_declaration -> assing_var IGUAL boolean SEMI var_declaration
Rule 46    var_declaration -> assing_var IGUAL boolean SEMI
Rule 47    var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration
Rule 48    var_declaration -> assing_var IGUAL IDVAR SEMI
Rule 49    var_declaration -> AMPERSANT IDVAR SEMI var_declaration
Rule 50    var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
Rule 51    var_declaration -> AMPERSANT IDVAR SEMI
Rule 52    var_declaration -> assing_var IGUAL simple_expression SEMI
Rule 53    var_declaration -> fun_call SEMI
Rule 54    assing_var -> var
Rule 55    assing_var -> var ARROW ID
Rule 56    IGUAL -> EQUAL
Rule 57    IGUAL -> MUL_EQUAL
Rule 58    IGUAL -> DIV_EQUAL
Rule 59    IGUAL -> CONCAT_EQUAL
Rule 60    IGUAL -> MOD_EQUAL
Rule 61    IGUAL -> PLUS_EQUAL
Rule 62    IGUAL -> MINUS_EQUAL
Rule 63    fun_declaration -> FUNCTION ID LPAREN params RPAREN
Rule 64    fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt
Rule 65    fun_call -> ID LPAREN params RPAREN
Rule 66    fun_call -> assing_var LPAREN params RPAREN
Rule 67    params -> param_list
Rule 68    params -> empty
Rule 69    param_list -> param
Rule 70    param_list -> param COMMA param_list
Rule 71    param -> IDVAR
Rule 72    param -> IDVAR LBRACKET RBRACKET
Rule 73    param -> term
Rule 74    compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
Rule 75    local_declarations -> local_declarations var_declaration
Rule 76    local_declarations -> empty
Rule 77    statement_list -> statement_list statement
Rule 78    statement_list -> empty
Rule 79    statement -> expression_stmt
Rule 80    statement -> compount_stmt
Rule 81    statement -> selection_stmt
Rule 82    statement -> iteration_stmt
Rule 83    statement -> return_stmt
Rule 84    statement -> class_declaration
Rule 85    statement -> echo_stmt
Rule 86    expression_stmt -> expression SEMI
Rule 87    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 88    selection_stmt -> IF LPAREN expression RPAREN statement selection
Rule 89    selection -> ELSE statement
Rule 90    selection -> ELSEIF statement selection
Rule 91    selection_stmt -> SWITCH LPAREN var RPAREN statement
Rule 92    selection_stmt -> CASE NUM COLON statement BREAK SEMI
Rule 93    selection_stmt -> CASE STRING COLON statement BREAK SEMI
Rule 94    selection_stmt -> DEFAULT COLON statement BREAK SEMI
Rule 95    iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
Rule 96    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 97    iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
Rule 98    return_stmt -> RETURN SEMI
Rule 99    return_stmt -> RETURN expression SEMI
Rule 100   expression -> assing_var EQUAL expression
Rule 101   expression -> simple_expression
Rule 102   expression -> assing_var EQUAL AMPERSANT IDVAR
Rule 103   expression -> expression AND expression
Rule 104   expression -> expression OR expression
Rule 105   expression -> assing_var
Rule 106   expression -> fun_call
Rule 107   var -> IDVAR
Rule 108   var -> IDVAR LBRACKET expression RBRACKET
Rule 109   simple_expression -> additive_expression relop additive_expression
Rule 110   simple_expression -> additive_expression
Rule 111   relop -> LESS
Rule 112   relop -> LESSEQUAL
Rule 113   relop -> GREATER
Rule 114   relop -> GREATEREQUAL
Rule 115   relop -> DEQUAL
Rule 116   relop -> DISTINT
Rule 117   relop -> ISEQUAL
Rule 118   relop -> IS_IDENTICAL
Rule 119   relop -> IS_NOT_IDENTICAL
Rule 120   relop -> SR_EQUAL
Rule 121   relop -> SL_EQUAL
Rule 122   relop -> AND_EQUAL
Rule 123   relop -> OR_EQUAL
Rule 124   relop -> XOR_EQUAL
Rule 125   relop -> CONCAT_EQUAL
Rule 126   additive_expression -> additive_expression addop term
Rule 127   additive_expression -> term
Rule 128   additive_expression -> term MINUSMINUS
Rule 129   additive_expression -> term PLUSPLUS
Rule 130   additive_expression -> fun_call
Rule 131   addop -> PLUS
Rule 132   addop -> MINUS
Rule 133   term -> term mulop factor
Rule 134   term -> factor
Rule 135   mulop -> TIMES
Rule 136   mulop -> DIVIDE
Rule 137   factor -> LPAREN expression RPAREN
Rule 138   factor -> var
Rule 139   factor -> NUM
Rule 140   factor -> STRING
Rule 141   factor -> boolean
Rule 142   factor -> IDVAR LPAREN args RPAREN
Rule 143   args -> args_list
Rule 144   args -> empty
Rule 145   args -> VOID
Rule 146   args_list -> args_list COMMA expression
Rule 147   args_list -> expression
Rule 148   boolean -> TRUE
Rule 149   boolean -> FALSE
Rule 150   typeclass -> ID IDVAR EQUAL NEW constructor SEMI
Rule 151   typeclass -> IDVAR EQUAL NEW constructor SEMI
Rule 152   constructor -> ID LPAREN RPAREN
Rule 153   constructor -> ID LPAREN args RPAREN
Rule 154   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 49 50 51 102
AND                  : 103
AND_EQUAL            : 122
APOSTROPHE           : 
ARRAY                : 
ARROW                : 55
AS                   : 
BREAK                : 92 93 94
CALLABLE             : 
CASE                 : 92 93
CATCH                : 
CLASS                : 25 26
CLONE                : 
CLOSETAG             : 1
CLOSETAGAL           : 
COLON                : 92 93 94
COMMA                : 70 146
COMMENTS             : 
COMMENTS_C99         : 
CONCAT_EQUAL         : 59 125
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 94
DEQUAL               : 115
DIE                  : 
DISTINT              : 116
DIVIDE               : 136
DIV_EQUAL            : 58
DO                   : 97
DOT                  : 16
DOT_DOT              : 
ECHO                 : 13
ELSE                 : 89
ELSEIF               : 90
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 56 100 102 150 151
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 149
FINALLY              : 
FOR                  : 95
FOREACH              : 
FUNCTION             : 63 64
GLOBAL               : 
GOTO                 : 
GREATER              : 113
GREATEREQUAL         : 114
HASHTAG              : 
ID                   : 25 26 55 63 64 65 150 152 153
IDVAR                : 18 37 38 39 40 47 48 49 50 50 51 71 72 102 107 108 142 150 151
IF                   : 87 88
IMPLEMENTS           : 
INCLUDE              : 24
INCLUDE_ONCE         : 
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
ISEQUAL              : 117
ISSET                : 
IS_IDENTICAL         : 118
IS_NOT_IDENTICAL     : 119
LBLOCK               : 25 26 74 97
LBRACKET             : 72 108
LESS                 : 111
LESSEQUAL            : 112
LIST                 : 
LPAREN               : 23 24 63 64 65 66 87 88 91 95 96 97 137 142 152 153
MINUS                : 132
MINUSEQUAL           : 
MINUSMINUS           : 128
MINUS_EQUAL          : 62
MOD_EQUAL            : 60
MUL_EQUAL            : 57
NAMESPACE            : 
NEW                  : 150 151
NUM                  : 19 41 42 92 139
OPENTAG              : 1
OR                   : 104
OR_EQUAL             : 123
PLUS                 : 131
PLUSEQUAL            : 
PLUSPLUS             : 129
PLUS_EQUAL           : 61
PRINT                : 
PRIVATE              : 34
PROTECTED            : 36
PUBLIC               : 35
QUOTES               : 
RBLOCK               : 25 26 74 97
RBRACKET             : 72 108
REQUIRE              : 23
REQUIRE_ONCE         : 
RETURN               : 98 99
RPAREN               : 23 24 63 64 65 66 87 88 91 95 96 97 137 142 152 153
SEMI                 : 13 23 24 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 86 92 93 94 95 97 98 99 150 151
SL_EQUAL             : 121
SR_EQUAL             : 120
STATIC               : 
STRING               : 17 23 24 43 44 93 140
SWITCH               : 91
THROW                : 
TIMES                : 135
TIMESTIMES           : 39 40
TRAIT                : 
TRUE                 : 148
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VOID                 : 145
WHILE                : 96 97
XOR                  : 
XOR_EQUAL            : 124
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

IGUAL                : 41 42 43 44 45 46 47 48 50 52
additive_expression  : 95 109 109 110 126
addop                : 126
area                 : 6 25 29 30 31 32
args                 : 142 153
args_list            : 143 146
assing_var           : 41 42 43 44 45 46 47 48 52 66 100 102 105
attribute            : 27 28 29 31
attributes           : 25 26 28
boolean              : 20 45 46 141
class_declaration    : 8 84
compount_stmt        : 64 80
constructor          : 150 151
declaration          : 2 3
declaration_list     : 1 3
echo_param           : 15 16
echo_params          : 13 16
echo_stmt            : 9 13 74 74 74 85
empty                : 14 68 76 78 144
expression           : 86 87 88 95 96 97 99 100 103 103 104 104 108 137 146 147
expression_stmt      : 79
factor               : 133 134
fun_call             : 22 53 106 130
fun_declaration      : 5 6 21 31 32 33
header_declaration   : 7
iteration_stmt       : 11 82
local_declarations   : 74 75
mulop                : 133
param                : 69 70
param_list           : 67 70
params               : 63 64 65 66
program              : 0
relop                : 109
return_stmt          : 83
selection            : 88 90
selection_stmt       : 10 50 81
simple_expression    : 52 101
statement            : 77 87 88 89 90 91 92 93 94 95 96 97
statement_list       : 74 77
term                 : 73 126 127 128 129 133
typeclass            : 12
var                  : 54 55 91 138
var_declaration      : 4 29 30 37 40 41 43 45 47 49 75 95

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENTAG declaration_list CLOSETAG

    OPENTAG         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENTAG . declaration_list CLOSETAG
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (23) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (24) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (150) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (151) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (154) empty -> .
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    ECHO            reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 154 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 154 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 154 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 3

    (1) program -> OPENTAG declaration_list . CLOSETAG

    CLOSETAG        shift and go to state 36


state 4

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (23) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (24) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (150) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (151) typeclass -> . IDVAR EQUAL NEW constructor SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (154) empty -> .
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for CLOSETAG resolved using rule 2 (declaration_list -> declaration .)
    CLOSETAG        reduce using rule 2 (declaration_list -> declaration .)
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    REQUIRE         shift and go to state 24
    INCLUDE         shift and go to state 25
    CLASS           shift and go to state 26
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    ID              shift and go to state 20
    ECHO            reduce using rule 154 (empty -> .)

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 154 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 154 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 154 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! CLOSETAG        [ reduce using rule 154 (empty -> .) ]

    declaration                    shift and go to state 4
    declaration_list               shift and go to state 37
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    empty                          shift and go to state 27
    var                            shift and go to state 30

state 5

    (4) declaration -> var_declaration .

    IDVAR           reduce using rule 4 (declaration -> var_declaration .)
    TIMESTIMES      reduce using rule 4 (declaration -> var_declaration .)
    AMPERSANT       reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PROTECTED       reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    ID              reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    CLOSETAG        reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    IDVAR           reduce using rule 5 (declaration -> fun_declaration .)
    TIMESTIMES      reduce using rule 5 (declaration -> fun_declaration .)
    AMPERSANT       reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> fun_declaration .)
    PROTECTED       reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    CLASS           reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    DO              reduce using rule 5 (declaration -> fun_declaration .)
    ID              reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    CLOSETAG        reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> area . fun_declaration
    (25) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    CLASS           shift and go to state 39
    FUNCTION        shift and go to state 19

    fun_declaration                shift and go to state 38

state 8

    (7) declaration -> header_declaration .

    IDVAR           reduce using rule 7 (declaration -> header_declaration .)
    TIMESTIMES      reduce using rule 7 (declaration -> header_declaration .)
    AMPERSANT       reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PROTECTED       reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    ID              reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    CLOSETAG        reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> class_declaration .

    IDVAR           reduce using rule 8 (declaration -> class_declaration .)
    TIMESTIMES      reduce using rule 8 (declaration -> class_declaration .)
    AMPERSANT       reduce using rule 8 (declaration -> class_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PROTECTED       reduce using rule 8 (declaration -> class_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> class_declaration .)
    INCLUDE         reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    ID              reduce using rule 8 (declaration -> class_declaration .)
    ECHO            reduce using rule 8 (declaration -> class_declaration .)
    CLOSETAG        reduce using rule 8 (declaration -> class_declaration .)


state 10

    (9) declaration -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    IDVAR           reduce using rule 9 (declaration -> echo_stmt .)
    TIMESTIMES      reduce using rule 9 (declaration -> echo_stmt .)
    AMPERSANT       reduce using rule 9 (declaration -> echo_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> echo_stmt .)
    PRIVATE         reduce using rule 9 (declaration -> echo_stmt .)
    PUBLIC          reduce using rule 9 (declaration -> echo_stmt .)
    PROTECTED       reduce using rule 9 (declaration -> echo_stmt .)
    REQUIRE         reduce using rule 9 (declaration -> echo_stmt .)
    INCLUDE         reduce using rule 9 (declaration -> echo_stmt .)
    CLASS           reduce using rule 9 (declaration -> echo_stmt .)
    IF              reduce using rule 9 (declaration -> echo_stmt .)
    SWITCH          reduce using rule 9 (declaration -> echo_stmt .)
    CASE            reduce using rule 9 (declaration -> echo_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> echo_stmt .)
    FOR             reduce using rule 9 (declaration -> echo_stmt .)
    WHILE           reduce using rule 9 (declaration -> echo_stmt .)
    DO              reduce using rule 9 (declaration -> echo_stmt .)
    ID              reduce using rule 9 (declaration -> echo_stmt .)
    CLOSETAG        reduce using rule 9 (declaration -> echo_stmt .)
    ECHO            shift and go to state 40

  ! ECHO            [ reduce using rule 9 (declaration -> echo_stmt .) ]


state 11

    (10) declaration -> selection_stmt .

    IDVAR           reduce using rule 10 (declaration -> selection_stmt .)
    TIMESTIMES      reduce using rule 10 (declaration -> selection_stmt .)
    AMPERSANT       reduce using rule 10 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 10 (declaration -> selection_stmt .)
    PRIVATE         reduce using rule 10 (declaration -> selection_stmt .)
    PUBLIC          reduce using rule 10 (declaration -> selection_stmt .)
    PROTECTED       reduce using rule 10 (declaration -> selection_stmt .)
    REQUIRE         reduce using rule 10 (declaration -> selection_stmt .)
    INCLUDE         reduce using rule 10 (declaration -> selection_stmt .)
    CLASS           reduce using rule 10 (declaration -> selection_stmt .)
    IF              reduce using rule 10 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 10 (declaration -> selection_stmt .)
    CASE            reduce using rule 10 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 10 (declaration -> selection_stmt .)
    FOR             reduce using rule 10 (declaration -> selection_stmt .)
    WHILE           reduce using rule 10 (declaration -> selection_stmt .)
    DO              reduce using rule 10 (declaration -> selection_stmt .)
    ID              reduce using rule 10 (declaration -> selection_stmt .)
    ECHO            reduce using rule 10 (declaration -> selection_stmt .)
    CLOSETAG        reduce using rule 10 (declaration -> selection_stmt .)


state 12

    (11) declaration -> iteration_stmt .

    IDVAR           reduce using rule 11 (declaration -> iteration_stmt .)
    TIMESTIMES      reduce using rule 11 (declaration -> iteration_stmt .)
    AMPERSANT       reduce using rule 11 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 11 (declaration -> iteration_stmt .)
    PRIVATE         reduce using rule 11 (declaration -> iteration_stmt .)
    PUBLIC          reduce using rule 11 (declaration -> iteration_stmt .)
    PROTECTED       reduce using rule 11 (declaration -> iteration_stmt .)
    REQUIRE         reduce using rule 11 (declaration -> iteration_stmt .)
    INCLUDE         reduce using rule 11 (declaration -> iteration_stmt .)
    CLASS           reduce using rule 11 (declaration -> iteration_stmt .)
    IF              reduce using rule 11 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 11 (declaration -> iteration_stmt .)
    CASE            reduce using rule 11 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 11 (declaration -> iteration_stmt .)
    FOR             reduce using rule 11 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 11 (declaration -> iteration_stmt .)
    DO              reduce using rule 11 (declaration -> iteration_stmt .)
    ID              reduce using rule 11 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 11 (declaration -> iteration_stmt .)
    CLOSETAG        reduce using rule 11 (declaration -> iteration_stmt .)


state 13

    (12) declaration -> typeclass .

    IDVAR           reduce using rule 12 (declaration -> typeclass .)
    TIMESTIMES      reduce using rule 12 (declaration -> typeclass .)
    AMPERSANT       reduce using rule 12 (declaration -> typeclass .)
    FUNCTION        reduce using rule 12 (declaration -> typeclass .)
    PRIVATE         reduce using rule 12 (declaration -> typeclass .)
    PUBLIC          reduce using rule 12 (declaration -> typeclass .)
    PROTECTED       reduce using rule 12 (declaration -> typeclass .)
    REQUIRE         reduce using rule 12 (declaration -> typeclass .)
    INCLUDE         reduce using rule 12 (declaration -> typeclass .)
    CLASS           reduce using rule 12 (declaration -> typeclass .)
    IF              reduce using rule 12 (declaration -> typeclass .)
    SWITCH          reduce using rule 12 (declaration -> typeclass .)
    CASE            reduce using rule 12 (declaration -> typeclass .)
    DEFAULT         reduce using rule 12 (declaration -> typeclass .)
    FOR             reduce using rule 12 (declaration -> typeclass .)
    WHILE           reduce using rule 12 (declaration -> typeclass .)
    DO              reduce using rule 12 (declaration -> typeclass .)
    ID              reduce using rule 12 (declaration -> typeclass .)
    ECHO            reduce using rule 12 (declaration -> typeclass .)
    CLOSETAG        reduce using rule 12 (declaration -> typeclass .)


state 14

    (37) var_declaration -> IDVAR . SEMI var_declaration
    (38) var_declaration -> IDVAR . SEMI
    (151) typeclass -> IDVAR . EQUAL NEW constructor SEMI
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for EQUAL resolved as shift
    SEMI            shift and go to state 41
    EQUAL           shift and go to state 42
    ARROW           reduce using rule 107 (var -> IDVAR .)
    LPAREN          reduce using rule 107 (var -> IDVAR .)
    MUL_EQUAL       reduce using rule 107 (var -> IDVAR .)
    DIV_EQUAL       reduce using rule 107 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 107 (var -> IDVAR .)
    MOD_EQUAL       reduce using rule 107 (var -> IDVAR .)
    PLUS_EQUAL      reduce using rule 107 (var -> IDVAR .)
    MINUS_EQUAL     reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43

  ! EQUAL           [ reduce using rule 107 (var -> IDVAR .) ]


state 15

    (39) var_declaration -> TIMESTIMES . IDVAR SEMI
    (40) var_declaration -> TIMESTIMES . IDVAR SEMI var_declaration

    IDVAR           shift and go to state 44


state 16

    (41) var_declaration -> assing_var . IGUAL NUM SEMI var_declaration
    (42) var_declaration -> assing_var . IGUAL NUM SEMI
    (43) var_declaration -> assing_var . IGUAL STRING SEMI var_declaration
    (44) var_declaration -> assing_var . IGUAL STRING SEMI
    (45) var_declaration -> assing_var . IGUAL boolean SEMI var_declaration
    (46) var_declaration -> assing_var . IGUAL boolean SEMI
    (47) var_declaration -> assing_var . IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> assing_var . IGUAL IDVAR SEMI
    (52) var_declaration -> assing_var . IGUAL simple_expression SEMI
    (66) fun_call -> assing_var . LPAREN params RPAREN
    (56) IGUAL -> . EQUAL
    (57) IGUAL -> . MUL_EQUAL
    (58) IGUAL -> . DIV_EQUAL
    (59) IGUAL -> . CONCAT_EQUAL
    (60) IGUAL -> . MOD_EQUAL
    (61) IGUAL -> . PLUS_EQUAL
    (62) IGUAL -> . MINUS_EQUAL

    LPAREN          shift and go to state 46
    EQUAL           shift and go to state 47
    MUL_EQUAL       shift and go to state 48
    DIV_EQUAL       shift and go to state 49
    CONCAT_EQUAL    shift and go to state 50
    MOD_EQUAL       shift and go to state 51
    PLUS_EQUAL      shift and go to state 52
    MINUS_EQUAL     shift and go to state 53

    IGUAL                          shift and go to state 45

state 17

    (49) var_declaration -> AMPERSANT . IDVAR SEMI var_declaration
    (50) var_declaration -> AMPERSANT . IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> AMPERSANT . IDVAR SEMI

    IDVAR           shift and go to state 54


state 18

    (53) var_declaration -> fun_call . SEMI

    SEMI            shift and go to state 55


state 19

    (63) fun_declaration -> FUNCTION . ID LPAREN params RPAREN
    (64) fun_declaration -> FUNCTION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 56


state 20

    (150) typeclass -> ID . IDVAR EQUAL NEW constructor SEMI
    (65) fun_call -> ID . LPAREN params RPAREN

    IDVAR           shift and go to state 57
    LPAREN          shift and go to state 58


state 21

    (34) area -> PRIVATE .

    CLASS           reduce using rule 34 (area -> PRIVATE .)
    FUNCTION        reduce using rule 34 (area -> PRIVATE .)
    IDVAR           reduce using rule 34 (area -> PRIVATE .)
    TIMESTIMES      reduce using rule 34 (area -> PRIVATE .)
    AMPERSANT       reduce using rule 34 (area -> PRIVATE .)
    ID              reduce using rule 34 (area -> PRIVATE .)


state 22

    (35) area -> PUBLIC .

    CLASS           reduce using rule 35 (area -> PUBLIC .)
    FUNCTION        reduce using rule 35 (area -> PUBLIC .)
    IDVAR           reduce using rule 35 (area -> PUBLIC .)
    TIMESTIMES      reduce using rule 35 (area -> PUBLIC .)
    AMPERSANT       reduce using rule 35 (area -> PUBLIC .)
    ID              reduce using rule 35 (area -> PUBLIC .)


state 23

    (36) area -> PROTECTED .

    CLASS           reduce using rule 36 (area -> PROTECTED .)
    FUNCTION        reduce using rule 36 (area -> PROTECTED .)
    IDVAR           reduce using rule 36 (area -> PROTECTED .)
    TIMESTIMES      reduce using rule 36 (area -> PROTECTED .)
    AMPERSANT       reduce using rule 36 (area -> PROTECTED .)
    ID              reduce using rule 36 (area -> PROTECTED .)


state 24

    (23) header_declaration -> REQUIRE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 59


state 25

    (24) header_declaration -> INCLUDE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 60


state 26

    (26) class_declaration -> CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 61


state 27

    (14) echo_stmt -> empty .

    ECHO            reduce using rule 14 (echo_stmt -> empty .)
    IDVAR           reduce using rule 14 (echo_stmt -> empty .)
    TIMESTIMES      reduce using rule 14 (echo_stmt -> empty .)
    AMPERSANT       reduce using rule 14 (echo_stmt -> empty .)
    FUNCTION        reduce using rule 14 (echo_stmt -> empty .)
    PRIVATE         reduce using rule 14 (echo_stmt -> empty .)
    PUBLIC          reduce using rule 14 (echo_stmt -> empty .)
    PROTECTED       reduce using rule 14 (echo_stmt -> empty .)
    REQUIRE         reduce using rule 14 (echo_stmt -> empty .)
    INCLUDE         reduce using rule 14 (echo_stmt -> empty .)
    CLASS           reduce using rule 14 (echo_stmt -> empty .)
    IF              reduce using rule 14 (echo_stmt -> empty .)
    SWITCH          reduce using rule 14 (echo_stmt -> empty .)
    CASE            reduce using rule 14 (echo_stmt -> empty .)
    DEFAULT         reduce using rule 14 (echo_stmt -> empty .)
    FOR             reduce using rule 14 (echo_stmt -> empty .)
    WHILE           reduce using rule 14 (echo_stmt -> empty .)
    DO              reduce using rule 14 (echo_stmt -> empty .)
    ID              reduce using rule 14 (echo_stmt -> empty .)
    CLOSETAG        reduce using rule 14 (echo_stmt -> empty .)
    BREAK           reduce using rule 14 (echo_stmt -> empty .)
    SEMI            reduce using rule 14 (echo_stmt -> empty .)
    LBLOCK          reduce using rule 14 (echo_stmt -> empty .)
    RETURN          reduce using rule 14 (echo_stmt -> empty .)
    LPAREN          reduce using rule 14 (echo_stmt -> empty .)
    NUM             reduce using rule 14 (echo_stmt -> empty .)
    STRING          reduce using rule 14 (echo_stmt -> empty .)
    TRUE            reduce using rule 14 (echo_stmt -> empty .)
    FALSE           reduce using rule 14 (echo_stmt -> empty .)
    RBLOCK          reduce using rule 14 (echo_stmt -> empty .)
    ELSE            reduce using rule 14 (echo_stmt -> empty .)
    ELSEIF          reduce using rule 14 (echo_stmt -> empty .)


state 28

    (87) selection_stmt -> IF . LPAREN expression RPAREN statement
    (88) selection_stmt -> IF . LPAREN expression RPAREN statement selection

    LPAREN          shift and go to state 62


state 29

    (91) selection_stmt -> SWITCH . LPAREN var RPAREN statement

    LPAREN          shift and go to state 63


state 30

    (54) assing_var -> var .
    (55) assing_var -> var . ARROW ID

    LPAREN          reduce using rule 54 (assing_var -> var .)
    EQUAL           reduce using rule 54 (assing_var -> var .)
    MUL_EQUAL       reduce using rule 54 (assing_var -> var .)
    DIV_EQUAL       reduce using rule 54 (assing_var -> var .)
    CONCAT_EQUAL    reduce using rule 54 (assing_var -> var .)
    MOD_EQUAL       reduce using rule 54 (assing_var -> var .)
    PLUS_EQUAL      reduce using rule 54 (assing_var -> var .)
    MINUS_EQUAL     reduce using rule 54 (assing_var -> var .)
    ARROW           shift and go to state 64


state 31

    (92) selection_stmt -> CASE . NUM COLON statement BREAK SEMI
    (93) selection_stmt -> CASE . STRING COLON statement BREAK SEMI

    NUM             shift and go to state 65
    STRING          shift and go to state 66


state 32

    (94) selection_stmt -> DEFAULT . COLON statement BREAK SEMI

    COLON           shift and go to state 67


state 33

    (95) iteration_stmt -> FOR . LPAREN var_declaration expression SEMI additive_expression RPAREN statement

    LPAREN          shift and go to state 68


state 34

    (96) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 69


state 35

    (97) iteration_stmt -> DO . LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN

    LBLOCK          shift and go to state 70


state 36

    (1) program -> OPENTAG declaration_list CLOSETAG .

    $end            reduce using rule 1 (program -> OPENTAG declaration_list CLOSETAG .)


state 37

    (3) declaration_list -> declaration declaration_list .

    CLOSETAG        reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 38

    (6) declaration -> area fun_declaration .

    IDVAR           reduce using rule 6 (declaration -> area fun_declaration .)
    TIMESTIMES      reduce using rule 6 (declaration -> area fun_declaration .)
    AMPERSANT       reduce using rule 6 (declaration -> area fun_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> area fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> area fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> area fun_declaration .)
    PROTECTED       reduce using rule 6 (declaration -> area fun_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> area fun_declaration .)
    INCLUDE         reduce using rule 6 (declaration -> area fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> area fun_declaration .)
    IF              reduce using rule 6 (declaration -> area fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> area fun_declaration .)
    CASE            reduce using rule 6 (declaration -> area fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> area fun_declaration .)
    FOR             reduce using rule 6 (declaration -> area fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> area fun_declaration .)
    DO              reduce using rule 6 (declaration -> area fun_declaration .)
    ID              reduce using rule 6 (declaration -> area fun_declaration .)
    ECHO            reduce using rule 6 (declaration -> area fun_declaration .)
    CLOSETAG        reduce using rule 6 (declaration -> area fun_declaration .)


state 39

    (25) class_declaration -> area CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 71


state 40

    (13) echo_stmt -> echo_stmt ECHO . echo_params SEMI
    (15) echo_params -> . echo_param
    (16) echo_params -> . echo_param DOT echo_params
    (17) echo_param -> . STRING
    (18) echo_param -> . IDVAR
    (19) echo_param -> . NUM
    (20) echo_param -> . boolean
    (21) echo_param -> . fun_declaration
    (22) echo_param -> . fun_call
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 74
    IDVAR           shift and go to state 75
    NUM             shift and go to state 76
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    FUNCTION        shift and go to state 19
    ID              shift and go to state 82

    echo_params                    shift and go to state 72
    echo_param                     shift and go to state 73
    boolean                        shift and go to state 77
    fun_declaration                shift and go to state 78
    fun_call                       shift and go to state 79
    assing_var                     shift and go to state 83
    var                            shift and go to state 30

state 41

    (37) var_declaration -> IDVAR SEMI . var_declaration
    (38) var_declaration -> IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    TIMESTIMES      reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    AMPERSANT       reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FUNCTION        reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PRIVATE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PUBLIC          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    PROTECTED       reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    REQUIRE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    INCLUDE         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CLASS           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    IF              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    SWITCH          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CASE            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    DEFAULT         reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FOR             reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    WHILE           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    DO              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    ID              reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    ECHO            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    CLOSETAG        reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    LPAREN          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    NUM             reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    STRING          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    TRUE            reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    FALSE           reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    RBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    LBLOCK          reduce using rule 38 (var_declaration -> IDVAR SEMI .)
    RETURN          reduce using rule 38 (var_declaration -> IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    var_declaration                shift and go to state 85
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 42

    (151) typeclass -> IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 86


state 43

    (108) var -> IDVAR LBRACKET . expression RBRACKET
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 88
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 44

    (39) var_declaration -> TIMESTIMES IDVAR . SEMI
    (40) var_declaration -> TIMESTIMES IDVAR . SEMI var_declaration

    SEMI            shift and go to state 100


state 45

    (41) var_declaration -> assing_var IGUAL . NUM SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL . NUM SEMI
    (43) var_declaration -> assing_var IGUAL . STRING SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL . STRING SEMI
    (45) var_declaration -> assing_var IGUAL . boolean SEMI var_declaration
    (46) var_declaration -> assing_var IGUAL . boolean SEMI
    (47) var_declaration -> assing_var IGUAL . IDVAR SEMI var_declaration
    (48) var_declaration -> assing_var IGUAL . IDVAR SEMI
    (52) var_declaration -> assing_var IGUAL . simple_expression SEMI
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    NUM             shift and go to state 101
    STRING          shift and go to state 102
    IDVAR           shift and go to state 104
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 94

    assing_var                     shift and go to state 83
    boolean                        shift and go to state 103
    simple_expression              shift and go to state 105
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    fun_call                       shift and go to state 106
    factor                         shift and go to state 96
    var                            shift and go to state 107

state 46

    (66) fun_call -> assing_var LPAREN . params RPAREN
    (67) params -> . param_list
    (68) params -> . empty
    (69) param_list -> . param
    (70) param_list -> . param COMMA param_list
    (154) empty -> .
    (71) param -> . IDVAR
    (72) param -> . IDVAR LBRACKET RBRACKET
    (73) param -> . term
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    RPAREN          reduce using rule 154 (empty -> .)
    IDVAR           shift and go to state 112
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    params                         shift and go to state 108
    param_list                     shift and go to state 109
    empty                          shift and go to state 110
    param                          shift and go to state 111
    term                           shift and go to state 113
    factor                         shift and go to state 96
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 47

    (56) IGUAL -> EQUAL .

    NUM             reduce using rule 56 (IGUAL -> EQUAL .)
    STRING          reduce using rule 56 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 56 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 56 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 56 (IGUAL -> EQUAL .)
    ID              reduce using rule 56 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 56 (IGUAL -> EQUAL .)


state 48

    (57) IGUAL -> MUL_EQUAL .

    NUM             reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    STRING          reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    IDVAR           reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    TRUE            reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    FALSE           reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    ID              reduce using rule 57 (IGUAL -> MUL_EQUAL .)
    LPAREN          reduce using rule 57 (IGUAL -> MUL_EQUAL .)


state 49

    (58) IGUAL -> DIV_EQUAL .

    NUM             reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    STRING          reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    IDVAR           reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    TRUE            reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    FALSE           reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    ID              reduce using rule 58 (IGUAL -> DIV_EQUAL .)
    LPAREN          reduce using rule 58 (IGUAL -> DIV_EQUAL .)


state 50

    (59) IGUAL -> CONCAT_EQUAL .

    NUM             reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    STRING          reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    TRUE            reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    FALSE           reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    ID              reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 59 (IGUAL -> CONCAT_EQUAL .)


state 51

    (60) IGUAL -> MOD_EQUAL .

    NUM             reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    STRING          reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    IDVAR           reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    TRUE            reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    FALSE           reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    ID              reduce using rule 60 (IGUAL -> MOD_EQUAL .)
    LPAREN          reduce using rule 60 (IGUAL -> MOD_EQUAL .)


state 52

    (61) IGUAL -> PLUS_EQUAL .

    NUM             reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    STRING          reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    IDVAR           reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    TRUE            reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    FALSE           reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    ID              reduce using rule 61 (IGUAL -> PLUS_EQUAL .)
    LPAREN          reduce using rule 61 (IGUAL -> PLUS_EQUAL .)


state 53

    (62) IGUAL -> MINUS_EQUAL .

    NUM             reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    STRING          reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    IDVAR           reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    TRUE            reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    FALSE           reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    ID              reduce using rule 62 (IGUAL -> MINUS_EQUAL .)
    LPAREN          reduce using rule 62 (IGUAL -> MINUS_EQUAL .)


state 54

    (49) var_declaration -> AMPERSANT IDVAR . SEMI var_declaration
    (50) var_declaration -> AMPERSANT IDVAR . IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> AMPERSANT IDVAR . SEMI
    (56) IGUAL -> . EQUAL
    (57) IGUAL -> . MUL_EQUAL
    (58) IGUAL -> . DIV_EQUAL
    (59) IGUAL -> . CONCAT_EQUAL
    (60) IGUAL -> . MOD_EQUAL
    (61) IGUAL -> . PLUS_EQUAL
    (62) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 115
    EQUAL           shift and go to state 47
    MUL_EQUAL       shift and go to state 48
    DIV_EQUAL       shift and go to state 49
    CONCAT_EQUAL    shift and go to state 50
    MOD_EQUAL       shift and go to state 51
    PLUS_EQUAL      shift and go to state 52
    MINUS_EQUAL     shift and go to state 53

    IGUAL                          shift and go to state 116

state 55

    (53) var_declaration -> fun_call SEMI .

    IDVAR           reduce using rule 53 (var_declaration -> fun_call SEMI .)
    TIMESTIMES      reduce using rule 53 (var_declaration -> fun_call SEMI .)
    AMPERSANT       reduce using rule 53 (var_declaration -> fun_call SEMI .)
    FUNCTION        reduce using rule 53 (var_declaration -> fun_call SEMI .)
    PRIVATE         reduce using rule 53 (var_declaration -> fun_call SEMI .)
    PUBLIC          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    PROTECTED       reduce using rule 53 (var_declaration -> fun_call SEMI .)
    REQUIRE         reduce using rule 53 (var_declaration -> fun_call SEMI .)
    INCLUDE         reduce using rule 53 (var_declaration -> fun_call SEMI .)
    CLASS           reduce using rule 53 (var_declaration -> fun_call SEMI .)
    IF              reduce using rule 53 (var_declaration -> fun_call SEMI .)
    SWITCH          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    CASE            reduce using rule 53 (var_declaration -> fun_call SEMI .)
    DEFAULT         reduce using rule 53 (var_declaration -> fun_call SEMI .)
    FOR             reduce using rule 53 (var_declaration -> fun_call SEMI .)
    WHILE           reduce using rule 53 (var_declaration -> fun_call SEMI .)
    DO              reduce using rule 53 (var_declaration -> fun_call SEMI .)
    ID              reduce using rule 53 (var_declaration -> fun_call SEMI .)
    ECHO            reduce using rule 53 (var_declaration -> fun_call SEMI .)
    CLOSETAG        reduce using rule 53 (var_declaration -> fun_call SEMI .)
    LPAREN          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    NUM             reduce using rule 53 (var_declaration -> fun_call SEMI .)
    STRING          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    TRUE            reduce using rule 53 (var_declaration -> fun_call SEMI .)
    FALSE           reduce using rule 53 (var_declaration -> fun_call SEMI .)
    RBLOCK          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    LBLOCK          reduce using rule 53 (var_declaration -> fun_call SEMI .)
    RETURN          reduce using rule 53 (var_declaration -> fun_call SEMI .)


state 56

    (63) fun_declaration -> FUNCTION ID . LPAREN params RPAREN
    (64) fun_declaration -> FUNCTION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 117


state 57

    (150) typeclass -> ID IDVAR . EQUAL NEW constructor SEMI

    EQUAL           shift and go to state 118


state 58

    (65) fun_call -> ID LPAREN . params RPAREN
    (67) params -> . param_list
    (68) params -> . empty
    (69) param_list -> . param
    (70) param_list -> . param COMMA param_list
    (154) empty -> .
    (71) param -> . IDVAR
    (72) param -> . IDVAR LBRACKET RBRACKET
    (73) param -> . term
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    RPAREN          reduce using rule 154 (empty -> .)
    IDVAR           shift and go to state 112
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    params                         shift and go to state 119
    param_list                     shift and go to state 109
    empty                          shift and go to state 110
    param                          shift and go to state 111
    term                           shift and go to state 113
    factor                         shift and go to state 96
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 59

    (23) header_declaration -> REQUIRE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 120


state 60

    (24) header_declaration -> INCLUDE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 121


state 61

    (26) class_declaration -> CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 122


state 62

    (87) selection_stmt -> IF LPAREN . expression RPAREN statement
    (88) selection_stmt -> IF LPAREN . expression RPAREN statement selection
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 123
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 63

    (91) selection_stmt -> SWITCH LPAREN . var RPAREN statement
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 125

    var                            shift and go to state 124

state 64

    (55) assing_var -> var ARROW . ID

    ID              shift and go to state 126


state 65

    (92) selection_stmt -> CASE NUM . COLON statement BREAK SEMI

    COLON           shift and go to state 127


state 66

    (93) selection_stmt -> CASE STRING . COLON statement BREAK SEMI

    COLON           shift and go to state 128


state 67

    (94) selection_stmt -> DEFAULT COLON . statement BREAK SEMI
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    statement                      shift and go to state 129
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 68

    (95) iteration_stmt -> FOR LPAREN . var_declaration expression SEMI additive_expression RPAREN statement
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 84
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    ID              shift and go to state 82

    var_declaration                shift and go to state 141
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 69

    (96) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 142
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 70

    (97) iteration_stmt -> DO LBLOCK . statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    statement                      shift and go to state 143
    expression                     shift and go to state 137
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 71

    (25) class_declaration -> area CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 144


state 72

    (13) echo_stmt -> echo_stmt ECHO echo_params . SEMI

    SEMI            shift and go to state 145


state 73

    (15) echo_params -> echo_param .
    (16) echo_params -> echo_param . DOT echo_params

    SEMI            reduce using rule 15 (echo_params -> echo_param .)
    DOT             shift and go to state 146


state 74

    (17) echo_param -> STRING .

    DOT             reduce using rule 17 (echo_param -> STRING .)
    SEMI            reduce using rule 17 (echo_param -> STRING .)


state 75

    (18) echo_param -> IDVAR .
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

    DOT             reduce using rule 18 (echo_param -> IDVAR .)
    SEMI            reduce using rule 18 (echo_param -> IDVAR .)
    ARROW           reduce using rule 107 (var -> IDVAR .)
    LPAREN          reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43


state 76

    (19) echo_param -> NUM .

    DOT             reduce using rule 19 (echo_param -> NUM .)
    SEMI            reduce using rule 19 (echo_param -> NUM .)


state 77

    (20) echo_param -> boolean .

    DOT             reduce using rule 20 (echo_param -> boolean .)
    SEMI            reduce using rule 20 (echo_param -> boolean .)


state 78

    (21) echo_param -> fun_declaration .

    DOT             reduce using rule 21 (echo_param -> fun_declaration .)
    SEMI            reduce using rule 21 (echo_param -> fun_declaration .)


state 79

    (22) echo_param -> fun_call .

    DOT             reduce using rule 22 (echo_param -> fun_call .)
    SEMI            reduce using rule 22 (echo_param -> fun_call .)


state 80

    (148) boolean -> TRUE .

    DOT             reduce using rule 148 (boolean -> TRUE .)
    SEMI            reduce using rule 148 (boolean -> TRUE .)
    MINUSMINUS      reduce using rule 148 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 148 (boolean -> TRUE .)
    TIMES           reduce using rule 148 (boolean -> TRUE .)
    DIVIDE          reduce using rule 148 (boolean -> TRUE .)
    LESS            reduce using rule 148 (boolean -> TRUE .)
    LESSEQUAL       reduce using rule 148 (boolean -> TRUE .)
    GREATER         reduce using rule 148 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 148 (boolean -> TRUE .)
    DEQUAL          reduce using rule 148 (boolean -> TRUE .)
    DISTINT         reduce using rule 148 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 148 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 148 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 148 (boolean -> TRUE .)
    SR_EQUAL        reduce using rule 148 (boolean -> TRUE .)
    SL_EQUAL        reduce using rule 148 (boolean -> TRUE .)
    AND_EQUAL       reduce using rule 148 (boolean -> TRUE .)
    OR_EQUAL        reduce using rule 148 (boolean -> TRUE .)
    XOR_EQUAL       reduce using rule 148 (boolean -> TRUE .)
    CONCAT_EQUAL    reduce using rule 148 (boolean -> TRUE .)
    PLUS            reduce using rule 148 (boolean -> TRUE .)
    MINUS           reduce using rule 148 (boolean -> TRUE .)
    RBRACKET        reduce using rule 148 (boolean -> TRUE .)
    AND             reduce using rule 148 (boolean -> TRUE .)
    OR              reduce using rule 148 (boolean -> TRUE .)
    COMMA           reduce using rule 148 (boolean -> TRUE .)
    RPAREN          reduce using rule 148 (boolean -> TRUE .)


state 81

    (149) boolean -> FALSE .

    DOT             reduce using rule 149 (boolean -> FALSE .)
    SEMI            reduce using rule 149 (boolean -> FALSE .)
    MINUSMINUS      reduce using rule 149 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 149 (boolean -> FALSE .)
    TIMES           reduce using rule 149 (boolean -> FALSE .)
    DIVIDE          reduce using rule 149 (boolean -> FALSE .)
    LESS            reduce using rule 149 (boolean -> FALSE .)
    LESSEQUAL       reduce using rule 149 (boolean -> FALSE .)
    GREATER         reduce using rule 149 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 149 (boolean -> FALSE .)
    DEQUAL          reduce using rule 149 (boolean -> FALSE .)
    DISTINT         reduce using rule 149 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 149 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 149 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 149 (boolean -> FALSE .)
    SR_EQUAL        reduce using rule 149 (boolean -> FALSE .)
    SL_EQUAL        reduce using rule 149 (boolean -> FALSE .)
    AND_EQUAL       reduce using rule 149 (boolean -> FALSE .)
    OR_EQUAL        reduce using rule 149 (boolean -> FALSE .)
    XOR_EQUAL       reduce using rule 149 (boolean -> FALSE .)
    CONCAT_EQUAL    reduce using rule 149 (boolean -> FALSE .)
    PLUS            reduce using rule 149 (boolean -> FALSE .)
    MINUS           reduce using rule 149 (boolean -> FALSE .)
    RBRACKET        reduce using rule 149 (boolean -> FALSE .)
    AND             reduce using rule 149 (boolean -> FALSE .)
    OR              reduce using rule 149 (boolean -> FALSE .)
    COMMA           reduce using rule 149 (boolean -> FALSE .)
    RPAREN          reduce using rule 149 (boolean -> FALSE .)


state 82

    (65) fun_call -> ID . LPAREN params RPAREN

    LPAREN          shift and go to state 58


state 83

    (66) fun_call -> assing_var . LPAREN params RPAREN

    LPAREN          shift and go to state 46


state 84

    (37) var_declaration -> IDVAR . SEMI var_declaration
    (38) var_declaration -> IDVAR . SEMI
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

    SEMI            shift and go to state 41
    ARROW           reduce using rule 107 (var -> IDVAR .)
    LPAREN          reduce using rule 107 (var -> IDVAR .)
    EQUAL           reduce using rule 107 (var -> IDVAR .)
    MUL_EQUAL       reduce using rule 107 (var -> IDVAR .)
    DIV_EQUAL       reduce using rule 107 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 107 (var -> IDVAR .)
    MOD_EQUAL       reduce using rule 107 (var -> IDVAR .)
    PLUS_EQUAL      reduce using rule 107 (var -> IDVAR .)
    MINUS_EQUAL     reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43


state 85

    (37) var_declaration -> IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    IF              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CASE            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FOR             reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    DO              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    ID              reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    NUM             reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    STRING          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 37 (var_declaration -> IDVAR SEMI var_declaration .)


state 86

    (151) typeclass -> IDVAR EQUAL NEW . constructor SEMI
    (152) constructor -> . ID LPAREN RPAREN
    (153) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 148

    constructor                    shift and go to state 147

state 87

    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET
    (142) factor -> IDVAR . LPAREN args RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    ARROW           reduce using rule 107 (var -> IDVAR .)
    EQUAL           reduce using rule 107 (var -> IDVAR .)
    RBRACKET        reduce using rule 107 (var -> IDVAR .)
    AND             reduce using rule 107 (var -> IDVAR .)
    OR              reduce using rule 107 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 107 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 107 (var -> IDVAR .)
    TIMES           reduce using rule 107 (var -> IDVAR .)
    DIVIDE          reduce using rule 107 (var -> IDVAR .)
    LESS            reduce using rule 107 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 107 (var -> IDVAR .)
    GREATER         reduce using rule 107 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 107 (var -> IDVAR .)
    DEQUAL          reduce using rule 107 (var -> IDVAR .)
    DISTINT         reduce using rule 107 (var -> IDVAR .)
    ISEQUAL         reduce using rule 107 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 107 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 107 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 107 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 107 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 107 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 107 (var -> IDVAR .)
    PLUS            reduce using rule 107 (var -> IDVAR .)
    MINUS           reduce using rule 107 (var -> IDVAR .)
    RPAREN          reduce using rule 107 (var -> IDVAR .)
    SEMI            reduce using rule 107 (var -> IDVAR .)
    COMMA           reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43
    LPAREN          shift and go to state 149

  ! LPAREN          [ reduce using rule 107 (var -> IDVAR .) ]


state 88

    (108) var -> IDVAR LBRACKET expression . RBRACKET
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RBRACKET        shift and go to state 150
    AND             shift and go to state 151
    OR              shift and go to state 152


state 89

    (100) expression -> assing_var . EQUAL expression
    (102) expression -> assing_var . EQUAL AMPERSANT IDVAR
    (105) expression -> assing_var .
    (66) fun_call -> assing_var . LPAREN params RPAREN

    EQUAL           shift and go to state 153
    RBRACKET        reduce using rule 105 (expression -> assing_var .)
    AND             reduce using rule 105 (expression -> assing_var .)
    OR              reduce using rule 105 (expression -> assing_var .)
    RPAREN          reduce using rule 105 (expression -> assing_var .)
    SEMI            reduce using rule 105 (expression -> assing_var .)
    COMMA           reduce using rule 105 (expression -> assing_var .)
    LPAREN          shift and go to state 46


state 90

    (101) expression -> simple_expression .

    RBRACKET        reduce using rule 101 (expression -> simple_expression .)
    AND             reduce using rule 101 (expression -> simple_expression .)
    OR              reduce using rule 101 (expression -> simple_expression .)
    RPAREN          reduce using rule 101 (expression -> simple_expression .)
    SEMI            reduce using rule 101 (expression -> simple_expression .)
    COMMA           reduce using rule 101 (expression -> simple_expression .)


state 91

    (106) expression -> fun_call .
    (130) additive_expression -> fun_call .

  ! reduce/reduce conflict for RBRACKET resolved using rule 106 (expression -> fun_call .)
  ! reduce/reduce conflict for AND resolved using rule 106 (expression -> fun_call .)
  ! reduce/reduce conflict for OR resolved using rule 106 (expression -> fun_call .)
  ! reduce/reduce conflict for RPAREN resolved using rule 106 (expression -> fun_call .)
  ! reduce/reduce conflict for SEMI resolved using rule 106 (expression -> fun_call .)
  ! reduce/reduce conflict for COMMA resolved using rule 106 (expression -> fun_call .)
    RBRACKET        reduce using rule 106 (expression -> fun_call .)
    AND             reduce using rule 106 (expression -> fun_call .)
    OR              reduce using rule 106 (expression -> fun_call .)
    RPAREN          reduce using rule 106 (expression -> fun_call .)
    SEMI            reduce using rule 106 (expression -> fun_call .)
    COMMA           reduce using rule 106 (expression -> fun_call .)
    LESS            reduce using rule 130 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    GREATER         reduce using rule 130 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 130 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 130 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 130 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 130 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 130 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 130 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 130 (additive_expression -> fun_call .)
    PLUS            reduce using rule 130 (additive_expression -> fun_call .)
    MINUS           reduce using rule 130 (additive_expression -> fun_call .)

  ! RBRACKET        [ reduce using rule 130 (additive_expression -> fun_call .) ]
  ! AND             [ reduce using rule 130 (additive_expression -> fun_call .) ]
  ! OR              [ reduce using rule 130 (additive_expression -> fun_call .) ]
  ! RPAREN          [ reduce using rule 130 (additive_expression -> fun_call .) ]
  ! SEMI            [ reduce using rule 130 (additive_expression -> fun_call .) ]
  ! COMMA           [ reduce using rule 130 (additive_expression -> fun_call .) ]


state 92

    (54) assing_var -> var .
    (55) assing_var -> var . ARROW ID
    (138) factor -> var .

  ! reduce/reduce conflict for RBRACKET resolved using rule 54 (assing_var -> var .)
  ! reduce/reduce conflict for AND resolved using rule 54 (assing_var -> var .)
  ! reduce/reduce conflict for OR resolved using rule 54 (assing_var -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 54 (assing_var -> var .)
  ! reduce/reduce conflict for SEMI resolved using rule 54 (assing_var -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 54 (assing_var -> var .)
    EQUAL           reduce using rule 54 (assing_var -> var .)
    LPAREN          reduce using rule 54 (assing_var -> var .)
    RBRACKET        reduce using rule 54 (assing_var -> var .)
    AND             reduce using rule 54 (assing_var -> var .)
    OR              reduce using rule 54 (assing_var -> var .)
    RPAREN          reduce using rule 54 (assing_var -> var .)
    SEMI            reduce using rule 54 (assing_var -> var .)
    COMMA           reduce using rule 54 (assing_var -> var .)
    ARROW           shift and go to state 64
    MINUSMINUS      reduce using rule 138 (factor -> var .)
    PLUSPLUS        reduce using rule 138 (factor -> var .)
    TIMES           reduce using rule 138 (factor -> var .)
    DIVIDE          reduce using rule 138 (factor -> var .)
    LESS            reduce using rule 138 (factor -> var .)
    LESSEQUAL       reduce using rule 138 (factor -> var .)
    GREATER         reduce using rule 138 (factor -> var .)
    GREATEREQUAL    reduce using rule 138 (factor -> var .)
    DEQUAL          reduce using rule 138 (factor -> var .)
    DISTINT         reduce using rule 138 (factor -> var .)
    ISEQUAL         reduce using rule 138 (factor -> var .)
    IS_IDENTICAL    reduce using rule 138 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 138 (factor -> var .)
    SR_EQUAL        reduce using rule 138 (factor -> var .)
    SL_EQUAL        reduce using rule 138 (factor -> var .)
    AND_EQUAL       reduce using rule 138 (factor -> var .)
    OR_EQUAL        reduce using rule 138 (factor -> var .)
    XOR_EQUAL       reduce using rule 138 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 138 (factor -> var .)
    PLUS            reduce using rule 138 (factor -> var .)
    MINUS           reduce using rule 138 (factor -> var .)

  ! RBRACKET        [ reduce using rule 138 (factor -> var .) ]
  ! AND             [ reduce using rule 138 (factor -> var .) ]
  ! OR              [ reduce using rule 138 (factor -> var .) ]
  ! RPAREN          [ reduce using rule 138 (factor -> var .) ]
  ! SEMI            [ reduce using rule 138 (factor -> var .) ]
  ! COMMA           [ reduce using rule 138 (factor -> var .) ]


state 93

    (109) simple_expression -> additive_expression . relop additive_expression
    (110) simple_expression -> additive_expression .
    (126) additive_expression -> additive_expression . addop term
    (111) relop -> . LESS
    (112) relop -> . LESSEQUAL
    (113) relop -> . GREATER
    (114) relop -> . GREATEREQUAL
    (115) relop -> . DEQUAL
    (116) relop -> . DISTINT
    (117) relop -> . ISEQUAL
    (118) relop -> . IS_IDENTICAL
    (119) relop -> . IS_NOT_IDENTICAL
    (120) relop -> . SR_EQUAL
    (121) relop -> . SL_EQUAL
    (122) relop -> . AND_EQUAL
    (123) relop -> . OR_EQUAL
    (124) relop -> . XOR_EQUAL
    (125) relop -> . CONCAT_EQUAL
    (131) addop -> . PLUS
    (132) addop -> . MINUS

    RBRACKET        reduce using rule 110 (simple_expression -> additive_expression .)
    AND             reduce using rule 110 (simple_expression -> additive_expression .)
    OR              reduce using rule 110 (simple_expression -> additive_expression .)
    SEMI            reduce using rule 110 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 110 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 110 (simple_expression -> additive_expression .)
    LESS            shift and go to state 156
    LESSEQUAL       shift and go to state 157
    GREATER         shift and go to state 158
    GREATEREQUAL    shift and go to state 159
    DEQUAL          shift and go to state 160
    DISTINT         shift and go to state 161
    ISEQUAL         shift and go to state 162
    IS_IDENTICAL    shift and go to state 163
    IS_NOT_IDENTICAL shift and go to state 164
    SR_EQUAL        shift and go to state 165
    SL_EQUAL        shift and go to state 166
    AND_EQUAL       shift and go to state 167
    OR_EQUAL        shift and go to state 168
    XOR_EQUAL       shift and go to state 169
    CONCAT_EQUAL    shift and go to state 170
    PLUS            shift and go to state 171
    MINUS           shift and go to state 172

    relop                          shift and go to state 154
    addop                          shift and go to state 155

state 94

    (137) factor -> LPAREN . expression RPAREN
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 173
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 95

    (127) additive_expression -> term .
    (128) additive_expression -> term . MINUSMINUS
    (129) additive_expression -> term . PLUSPLUS
    (133) term -> term . mulop factor
    (135) mulop -> . TIMES
    (136) mulop -> . DIVIDE

    LESS            reduce using rule 127 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 127 (additive_expression -> term .)
    GREATER         reduce using rule 127 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 127 (additive_expression -> term .)
    DEQUAL          reduce using rule 127 (additive_expression -> term .)
    DISTINT         reduce using rule 127 (additive_expression -> term .)
    ISEQUAL         reduce using rule 127 (additive_expression -> term .)
    IS_IDENTICAL    reduce using rule 127 (additive_expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 127 (additive_expression -> term .)
    SR_EQUAL        reduce using rule 127 (additive_expression -> term .)
    SL_EQUAL        reduce using rule 127 (additive_expression -> term .)
    AND_EQUAL       reduce using rule 127 (additive_expression -> term .)
    OR_EQUAL        reduce using rule 127 (additive_expression -> term .)
    XOR_EQUAL       reduce using rule 127 (additive_expression -> term .)
    CONCAT_EQUAL    reduce using rule 127 (additive_expression -> term .)
    PLUS            reduce using rule 127 (additive_expression -> term .)
    MINUS           reduce using rule 127 (additive_expression -> term .)
    RBRACKET        reduce using rule 127 (additive_expression -> term .)
    AND             reduce using rule 127 (additive_expression -> term .)
    OR              reduce using rule 127 (additive_expression -> term .)
    SEMI            reduce using rule 127 (additive_expression -> term .)
    RPAREN          reduce using rule 127 (additive_expression -> term .)
    COMMA           reduce using rule 127 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 174
    PLUSPLUS        shift and go to state 175
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178

    mulop                          shift and go to state 176

state 96

    (134) term -> factor .

    MINUSMINUS      reduce using rule 134 (term -> factor .)
    PLUSPLUS        reduce using rule 134 (term -> factor .)
    TIMES           reduce using rule 134 (term -> factor .)
    DIVIDE          reduce using rule 134 (term -> factor .)
    LESS            reduce using rule 134 (term -> factor .)
    LESSEQUAL       reduce using rule 134 (term -> factor .)
    GREATER         reduce using rule 134 (term -> factor .)
    GREATEREQUAL    reduce using rule 134 (term -> factor .)
    DEQUAL          reduce using rule 134 (term -> factor .)
    DISTINT         reduce using rule 134 (term -> factor .)
    ISEQUAL         reduce using rule 134 (term -> factor .)
    IS_IDENTICAL    reduce using rule 134 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 134 (term -> factor .)
    SR_EQUAL        reduce using rule 134 (term -> factor .)
    SL_EQUAL        reduce using rule 134 (term -> factor .)
    AND_EQUAL       reduce using rule 134 (term -> factor .)
    OR_EQUAL        reduce using rule 134 (term -> factor .)
    XOR_EQUAL       reduce using rule 134 (term -> factor .)
    CONCAT_EQUAL    reduce using rule 134 (term -> factor .)
    PLUS            reduce using rule 134 (term -> factor .)
    MINUS           reduce using rule 134 (term -> factor .)
    RBRACKET        reduce using rule 134 (term -> factor .)
    AND             reduce using rule 134 (term -> factor .)
    OR              reduce using rule 134 (term -> factor .)
    SEMI            reduce using rule 134 (term -> factor .)
    COMMA           reduce using rule 134 (term -> factor .)
    RPAREN          reduce using rule 134 (term -> factor .)


state 97

    (139) factor -> NUM .

    MINUSMINUS      reduce using rule 139 (factor -> NUM .)
    PLUSPLUS        reduce using rule 139 (factor -> NUM .)
    TIMES           reduce using rule 139 (factor -> NUM .)
    DIVIDE          reduce using rule 139 (factor -> NUM .)
    LESS            reduce using rule 139 (factor -> NUM .)
    LESSEQUAL       reduce using rule 139 (factor -> NUM .)
    GREATER         reduce using rule 139 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 139 (factor -> NUM .)
    DEQUAL          reduce using rule 139 (factor -> NUM .)
    DISTINT         reduce using rule 139 (factor -> NUM .)
    ISEQUAL         reduce using rule 139 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 139 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 139 (factor -> NUM .)
    SR_EQUAL        reduce using rule 139 (factor -> NUM .)
    SL_EQUAL        reduce using rule 139 (factor -> NUM .)
    AND_EQUAL       reduce using rule 139 (factor -> NUM .)
    OR_EQUAL        reduce using rule 139 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 139 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 139 (factor -> NUM .)
    PLUS            reduce using rule 139 (factor -> NUM .)
    MINUS           reduce using rule 139 (factor -> NUM .)
    RBRACKET        reduce using rule 139 (factor -> NUM .)
    AND             reduce using rule 139 (factor -> NUM .)
    OR              reduce using rule 139 (factor -> NUM .)
    COMMA           reduce using rule 139 (factor -> NUM .)
    RPAREN          reduce using rule 139 (factor -> NUM .)
    SEMI            reduce using rule 139 (factor -> NUM .)


state 98

    (140) factor -> STRING .

    MINUSMINUS      reduce using rule 140 (factor -> STRING .)
    PLUSPLUS        reduce using rule 140 (factor -> STRING .)
    TIMES           reduce using rule 140 (factor -> STRING .)
    DIVIDE          reduce using rule 140 (factor -> STRING .)
    LESS            reduce using rule 140 (factor -> STRING .)
    LESSEQUAL       reduce using rule 140 (factor -> STRING .)
    GREATER         reduce using rule 140 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 140 (factor -> STRING .)
    DEQUAL          reduce using rule 140 (factor -> STRING .)
    DISTINT         reduce using rule 140 (factor -> STRING .)
    ISEQUAL         reduce using rule 140 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 140 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 140 (factor -> STRING .)
    SR_EQUAL        reduce using rule 140 (factor -> STRING .)
    SL_EQUAL        reduce using rule 140 (factor -> STRING .)
    AND_EQUAL       reduce using rule 140 (factor -> STRING .)
    OR_EQUAL        reduce using rule 140 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 140 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 140 (factor -> STRING .)
    PLUS            reduce using rule 140 (factor -> STRING .)
    MINUS           reduce using rule 140 (factor -> STRING .)
    RBRACKET        reduce using rule 140 (factor -> STRING .)
    AND             reduce using rule 140 (factor -> STRING .)
    OR              reduce using rule 140 (factor -> STRING .)
    COMMA           reduce using rule 140 (factor -> STRING .)
    RPAREN          reduce using rule 140 (factor -> STRING .)
    SEMI            reduce using rule 140 (factor -> STRING .)


state 99

    (141) factor -> boolean .

    MINUSMINUS      reduce using rule 141 (factor -> boolean .)
    PLUSPLUS        reduce using rule 141 (factor -> boolean .)
    TIMES           reduce using rule 141 (factor -> boolean .)
    DIVIDE          reduce using rule 141 (factor -> boolean .)
    LESS            reduce using rule 141 (factor -> boolean .)
    LESSEQUAL       reduce using rule 141 (factor -> boolean .)
    GREATER         reduce using rule 141 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 141 (factor -> boolean .)
    DEQUAL          reduce using rule 141 (factor -> boolean .)
    DISTINT         reduce using rule 141 (factor -> boolean .)
    ISEQUAL         reduce using rule 141 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 141 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 141 (factor -> boolean .)
    SR_EQUAL        reduce using rule 141 (factor -> boolean .)
    SL_EQUAL        reduce using rule 141 (factor -> boolean .)
    AND_EQUAL       reduce using rule 141 (factor -> boolean .)
    OR_EQUAL        reduce using rule 141 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 141 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 141 (factor -> boolean .)
    PLUS            reduce using rule 141 (factor -> boolean .)
    MINUS           reduce using rule 141 (factor -> boolean .)
    RBRACKET        reduce using rule 141 (factor -> boolean .)
    AND             reduce using rule 141 (factor -> boolean .)
    OR              reduce using rule 141 (factor -> boolean .)
    COMMA           reduce using rule 141 (factor -> boolean .)
    RPAREN          reduce using rule 141 (factor -> boolean .)
    SEMI            reduce using rule 141 (factor -> boolean .)


state 100

    (39) var_declaration -> TIMESTIMES IDVAR SEMI .
    (40) var_declaration -> TIMESTIMES IDVAR SEMI . var_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TIMESTIMES      reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    AMPERSANT       reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FUNCTION        reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRIVATE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PUBLIC          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PROTECTED       reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    REQUIRE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    INCLUDE         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLASS           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    IF              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SWITCH          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CASE            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DEFAULT         reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FOR             reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    WHILE           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DO              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ID              reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ECHO            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLOSETAG        reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LPAREN          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    NUM             reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    STRING          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TRUE            reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FALSE           reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RBLOCK          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LBLOCK          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RETURN          reduce using rule 39 (var_declaration -> TIMESTIMES IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    var_declaration                shift and go to state 179
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 101

    (41) var_declaration -> assing_var IGUAL NUM . SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL NUM . SEMI
    (139) factor -> NUM .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 180
    MINUSMINUS      reduce using rule 139 (factor -> NUM .)
    PLUSPLUS        reduce using rule 139 (factor -> NUM .)
    TIMES           reduce using rule 139 (factor -> NUM .)
    DIVIDE          reduce using rule 139 (factor -> NUM .)
    LESS            reduce using rule 139 (factor -> NUM .)
    LESSEQUAL       reduce using rule 139 (factor -> NUM .)
    GREATER         reduce using rule 139 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 139 (factor -> NUM .)
    DEQUAL          reduce using rule 139 (factor -> NUM .)
    DISTINT         reduce using rule 139 (factor -> NUM .)
    ISEQUAL         reduce using rule 139 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 139 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 139 (factor -> NUM .)
    SR_EQUAL        reduce using rule 139 (factor -> NUM .)
    SL_EQUAL        reduce using rule 139 (factor -> NUM .)
    AND_EQUAL       reduce using rule 139 (factor -> NUM .)
    OR_EQUAL        reduce using rule 139 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 139 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 139 (factor -> NUM .)
    PLUS            reduce using rule 139 (factor -> NUM .)
    MINUS           reduce using rule 139 (factor -> NUM .)

  ! SEMI            [ reduce using rule 139 (factor -> NUM .) ]


state 102

    (43) var_declaration -> assing_var IGUAL STRING . SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL STRING . SEMI
    (140) factor -> STRING .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 181
    MINUSMINUS      reduce using rule 140 (factor -> STRING .)
    PLUSPLUS        reduce using rule 140 (factor -> STRING .)
    TIMES           reduce using rule 140 (factor -> STRING .)
    DIVIDE          reduce using rule 140 (factor -> STRING .)
    LESS            reduce using rule 140 (factor -> STRING .)
    LESSEQUAL       reduce using rule 140 (factor -> STRING .)
    GREATER         reduce using rule 140 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 140 (factor -> STRING .)
    DEQUAL          reduce using rule 140 (factor -> STRING .)
    DISTINT         reduce using rule 140 (factor -> STRING .)
    ISEQUAL         reduce using rule 140 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 140 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 140 (factor -> STRING .)
    SR_EQUAL        reduce using rule 140 (factor -> STRING .)
    SL_EQUAL        reduce using rule 140 (factor -> STRING .)
    AND_EQUAL       reduce using rule 140 (factor -> STRING .)
    OR_EQUAL        reduce using rule 140 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 140 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 140 (factor -> STRING .)
    PLUS            reduce using rule 140 (factor -> STRING .)
    MINUS           reduce using rule 140 (factor -> STRING .)

  ! SEMI            [ reduce using rule 140 (factor -> STRING .) ]


state 103

    (45) var_declaration -> assing_var IGUAL boolean . SEMI var_declaration
    (46) var_declaration -> assing_var IGUAL boolean . SEMI
    (141) factor -> boolean .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 182
    MINUSMINUS      reduce using rule 141 (factor -> boolean .)
    PLUSPLUS        reduce using rule 141 (factor -> boolean .)
    TIMES           reduce using rule 141 (factor -> boolean .)
    DIVIDE          reduce using rule 141 (factor -> boolean .)
    LESS            reduce using rule 141 (factor -> boolean .)
    LESSEQUAL       reduce using rule 141 (factor -> boolean .)
    GREATER         reduce using rule 141 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 141 (factor -> boolean .)
    DEQUAL          reduce using rule 141 (factor -> boolean .)
    DISTINT         reduce using rule 141 (factor -> boolean .)
    ISEQUAL         reduce using rule 141 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 141 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 141 (factor -> boolean .)
    SR_EQUAL        reduce using rule 141 (factor -> boolean .)
    SL_EQUAL        reduce using rule 141 (factor -> boolean .)
    AND_EQUAL       reduce using rule 141 (factor -> boolean .)
    OR_EQUAL        reduce using rule 141 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 141 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 141 (factor -> boolean .)
    PLUS            reduce using rule 141 (factor -> boolean .)
    MINUS           reduce using rule 141 (factor -> boolean .)

  ! SEMI            [ reduce using rule 141 (factor -> boolean .) ]


state 104

    (47) var_declaration -> assing_var IGUAL IDVAR . SEMI var_declaration
    (48) var_declaration -> assing_var IGUAL IDVAR . SEMI
    (142) factor -> IDVAR . LPAREN args RPAREN
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    SEMI            shift and go to state 183
    LPAREN          shift and go to state 149
    ARROW           reduce using rule 107 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 107 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 107 (var -> IDVAR .)
    TIMES           reduce using rule 107 (var -> IDVAR .)
    DIVIDE          reduce using rule 107 (var -> IDVAR .)
    LESS            reduce using rule 107 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 107 (var -> IDVAR .)
    GREATER         reduce using rule 107 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 107 (var -> IDVAR .)
    DEQUAL          reduce using rule 107 (var -> IDVAR .)
    DISTINT         reduce using rule 107 (var -> IDVAR .)
    ISEQUAL         reduce using rule 107 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 107 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 107 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 107 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 107 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 107 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 107 (var -> IDVAR .)
    PLUS            reduce using rule 107 (var -> IDVAR .)
    MINUS           reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43

  ! SEMI            [ reduce using rule 107 (var -> IDVAR .) ]
  ! LPAREN          [ reduce using rule 107 (var -> IDVAR .) ]


state 105

    (52) var_declaration -> assing_var IGUAL simple_expression . SEMI

    SEMI            shift and go to state 184


state 106

    (130) additive_expression -> fun_call .

    LESS            reduce using rule 130 (additive_expression -> fun_call .)
    LESSEQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    GREATER         reduce using rule 130 (additive_expression -> fun_call .)
    GREATEREQUAL    reduce using rule 130 (additive_expression -> fun_call .)
    DEQUAL          reduce using rule 130 (additive_expression -> fun_call .)
    DISTINT         reduce using rule 130 (additive_expression -> fun_call .)
    ISEQUAL         reduce using rule 130 (additive_expression -> fun_call .)
    IS_IDENTICAL    reduce using rule 130 (additive_expression -> fun_call .)
    IS_NOT_IDENTICAL reduce using rule 130 (additive_expression -> fun_call .)
    SR_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    SL_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    AND_EQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    OR_EQUAL        reduce using rule 130 (additive_expression -> fun_call .)
    XOR_EQUAL       reduce using rule 130 (additive_expression -> fun_call .)
    CONCAT_EQUAL    reduce using rule 130 (additive_expression -> fun_call .)
    PLUS            reduce using rule 130 (additive_expression -> fun_call .)
    MINUS           reduce using rule 130 (additive_expression -> fun_call .)
    SEMI            reduce using rule 130 (additive_expression -> fun_call .)
    RBRACKET        reduce using rule 130 (additive_expression -> fun_call .)
    AND             reduce using rule 130 (additive_expression -> fun_call .)
    OR              reduce using rule 130 (additive_expression -> fun_call .)
    RPAREN          reduce using rule 130 (additive_expression -> fun_call .)
    COMMA           reduce using rule 130 (additive_expression -> fun_call .)


state 107

    (138) factor -> var .
    (54) assing_var -> var .
    (55) assing_var -> var . ARROW ID

    MINUSMINUS      reduce using rule 138 (factor -> var .)
    PLUSPLUS        reduce using rule 138 (factor -> var .)
    TIMES           reduce using rule 138 (factor -> var .)
    DIVIDE          reduce using rule 138 (factor -> var .)
    LESS            reduce using rule 138 (factor -> var .)
    LESSEQUAL       reduce using rule 138 (factor -> var .)
    GREATER         reduce using rule 138 (factor -> var .)
    GREATEREQUAL    reduce using rule 138 (factor -> var .)
    DEQUAL          reduce using rule 138 (factor -> var .)
    DISTINT         reduce using rule 138 (factor -> var .)
    ISEQUAL         reduce using rule 138 (factor -> var .)
    IS_IDENTICAL    reduce using rule 138 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 138 (factor -> var .)
    SR_EQUAL        reduce using rule 138 (factor -> var .)
    SL_EQUAL        reduce using rule 138 (factor -> var .)
    AND_EQUAL       reduce using rule 138 (factor -> var .)
    OR_EQUAL        reduce using rule 138 (factor -> var .)
    XOR_EQUAL       reduce using rule 138 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 138 (factor -> var .)
    PLUS            reduce using rule 138 (factor -> var .)
    MINUS           reduce using rule 138 (factor -> var .)
    SEMI            reduce using rule 138 (factor -> var .)
    RBRACKET        reduce using rule 138 (factor -> var .)
    AND             reduce using rule 138 (factor -> var .)
    OR              reduce using rule 138 (factor -> var .)
    RPAREN          reduce using rule 138 (factor -> var .)
    COMMA           reduce using rule 138 (factor -> var .)
    LPAREN          reduce using rule 54 (assing_var -> var .)
    ARROW           shift and go to state 64


state 108

    (66) fun_call -> assing_var LPAREN params . RPAREN

    RPAREN          shift and go to state 185


state 109

    (67) params -> param_list .

    RPAREN          reduce using rule 67 (params -> param_list .)


state 110

    (68) params -> empty .

    RPAREN          reduce using rule 68 (params -> empty .)


state 111

    (69) param_list -> param .
    (70) param_list -> param . COMMA param_list

    RPAREN          reduce using rule 69 (param_list -> param .)
    COMMA           shift and go to state 186


state 112

    (71) param -> IDVAR .
    (72) param -> IDVAR . LBRACKET RBRACKET
    (142) factor -> IDVAR . LPAREN args RPAREN
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 71 (param -> IDVAR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 71 (param -> IDVAR .)
    COMMA           reduce using rule 71 (param -> IDVAR .)
    RPAREN          reduce using rule 71 (param -> IDVAR .)
    LBRACKET        shift and go to state 187
    LPAREN          shift and go to state 149
    TIMES           reduce using rule 107 (var -> IDVAR .)
    DIVIDE          reduce using rule 107 (var -> IDVAR .)

  ! COMMA           [ reduce using rule 107 (var -> IDVAR .) ]
  ! RPAREN          [ reduce using rule 107 (var -> IDVAR .) ]


state 113

    (73) param -> term .
    (133) term -> term . mulop factor
    (135) mulop -> . TIMES
    (136) mulop -> . DIVIDE

    COMMA           reduce using rule 73 (param -> term .)
    RPAREN          reduce using rule 73 (param -> term .)
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178

    mulop                          shift and go to state 176

state 114

    (138) factor -> var .

    TIMES           reduce using rule 138 (factor -> var .)
    DIVIDE          reduce using rule 138 (factor -> var .)
    COMMA           reduce using rule 138 (factor -> var .)
    RPAREN          reduce using rule 138 (factor -> var .)
    LESS            reduce using rule 138 (factor -> var .)
    LESSEQUAL       reduce using rule 138 (factor -> var .)
    GREATER         reduce using rule 138 (factor -> var .)
    GREATEREQUAL    reduce using rule 138 (factor -> var .)
    DEQUAL          reduce using rule 138 (factor -> var .)
    DISTINT         reduce using rule 138 (factor -> var .)
    ISEQUAL         reduce using rule 138 (factor -> var .)
    IS_IDENTICAL    reduce using rule 138 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 138 (factor -> var .)
    SR_EQUAL        reduce using rule 138 (factor -> var .)
    SL_EQUAL        reduce using rule 138 (factor -> var .)
    AND_EQUAL       reduce using rule 138 (factor -> var .)
    OR_EQUAL        reduce using rule 138 (factor -> var .)
    XOR_EQUAL       reduce using rule 138 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 138 (factor -> var .)
    PLUS            reduce using rule 138 (factor -> var .)
    MINUS           reduce using rule 138 (factor -> var .)
    RBRACKET        reduce using rule 138 (factor -> var .)
    AND             reduce using rule 138 (factor -> var .)
    OR              reduce using rule 138 (factor -> var .)
    SEMI            reduce using rule 138 (factor -> var .)
    MINUSMINUS      reduce using rule 138 (factor -> var .)
    PLUSPLUS        reduce using rule 138 (factor -> var .)


state 115

    (49) var_declaration -> AMPERSANT IDVAR SEMI . var_declaration
    (51) var_declaration -> AMPERSANT IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TIMESTIMES      reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    AMPERSANT       reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FUNCTION        reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRIVATE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PUBLIC          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PROTECTED       reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    REQUIRE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    INCLUDE         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLASS           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    IF              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SWITCH          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CASE            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DEFAULT         reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FOR             reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    WHILE           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DO              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ID              reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ECHO            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLOSETAG        reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LPAREN          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    NUM             reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    STRING          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TRUE            reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FALSE           reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RBLOCK          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LBLOCK          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RETURN          reduce using rule 51 (var_declaration -> AMPERSANT IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    var_declaration                shift and go to state 188
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 116

    (50) var_declaration -> AMPERSANT IDVAR IGUAL . IDVAR SEMI selection_stmt

    IDVAR           shift and go to state 189


state 117

    (63) fun_declaration -> FUNCTION ID LPAREN . params RPAREN
    (64) fun_declaration -> FUNCTION ID LPAREN . params RPAREN compount_stmt
    (67) params -> . param_list
    (68) params -> . empty
    (69) param_list -> . param
    (70) param_list -> . param COMMA param_list
    (154) empty -> .
    (71) param -> . IDVAR
    (72) param -> . IDVAR LBRACKET RBRACKET
    (73) param -> . term
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    RPAREN          reduce using rule 154 (empty -> .)
    IDVAR           shift and go to state 112
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    params                         shift and go to state 190
    param_list                     shift and go to state 109
    empty                          shift and go to state 110
    param                          shift and go to state 111
    term                           shift and go to state 113
    factor                         shift and go to state 96
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 118

    (150) typeclass -> ID IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 191


state 119

    (65) fun_call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 192


state 120

    (23) header_declaration -> REQUIRE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 193


state 121

    (24) header_declaration -> INCLUDE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 194


state 122

    (26) class_declaration -> CLASS ID LBLOCK . attributes RBLOCK
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attributes                     shift and go to state 195
    attribute                      shift and go to state 196
    area                           shift and go to state 197
    fun_declaration                shift and go to state 198

state 123

    (87) selection_stmt -> IF LPAREN expression . RPAREN statement
    (88) selection_stmt -> IF LPAREN expression . RPAREN statement selection
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RPAREN          shift and go to state 199
    AND             shift and go to state 151
    OR              shift and go to state 152


state 124

    (91) selection_stmt -> SWITCH LPAREN var . RPAREN statement

    RPAREN          shift and go to state 200


state 125

    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43


state 126

    (55) assing_var -> var ARROW ID .

    LPAREN          reduce using rule 55 (assing_var -> var ARROW ID .)
    EQUAL           reduce using rule 55 (assing_var -> var ARROW ID .)
    MUL_EQUAL       reduce using rule 55 (assing_var -> var ARROW ID .)
    DIV_EQUAL       reduce using rule 55 (assing_var -> var ARROW ID .)
    CONCAT_EQUAL    reduce using rule 55 (assing_var -> var ARROW ID .)
    MOD_EQUAL       reduce using rule 55 (assing_var -> var ARROW ID .)
    PLUS_EQUAL      reduce using rule 55 (assing_var -> var ARROW ID .)
    MINUS_EQUAL     reduce using rule 55 (assing_var -> var ARROW ID .)
    RBRACKET        reduce using rule 55 (assing_var -> var ARROW ID .)
    AND             reduce using rule 55 (assing_var -> var ARROW ID .)
    OR              reduce using rule 55 (assing_var -> var ARROW ID .)
    RPAREN          reduce using rule 55 (assing_var -> var ARROW ID .)
    SEMI            reduce using rule 55 (assing_var -> var ARROW ID .)
    COMMA           reduce using rule 55 (assing_var -> var ARROW ID .)


state 127

    (92) selection_stmt -> CASE NUM COLON . statement BREAK SEMI
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    statement                      shift and go to state 201
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 128

    (93) selection_stmt -> CASE STRING COLON . statement BREAK SEMI
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    statement                      shift and go to state 202
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 129

    (94) selection_stmt -> DEFAULT COLON statement . BREAK SEMI

    BREAK           shift and go to state 203


state 130

    (79) statement -> expression_stmt .

    BREAK           reduce using rule 79 (statement -> expression_stmt .)
    SEMI            reduce using rule 79 (statement -> expression_stmt .)
    ELSE            reduce using rule 79 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 79 (statement -> expression_stmt .)
    IDVAR           reduce using rule 79 (statement -> expression_stmt .)
    TIMESTIMES      reduce using rule 79 (statement -> expression_stmt .)
    AMPERSANT       reduce using rule 79 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 79 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 79 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 79 (statement -> expression_stmt .)
    PROTECTED       reduce using rule 79 (statement -> expression_stmt .)
    REQUIRE         reduce using rule 79 (statement -> expression_stmt .)
    INCLUDE         reduce using rule 79 (statement -> expression_stmt .)
    CLASS           reduce using rule 79 (statement -> expression_stmt .)
    IF              reduce using rule 79 (statement -> expression_stmt .)
    SWITCH          reduce using rule 79 (statement -> expression_stmt .)
    CASE            reduce using rule 79 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 79 (statement -> expression_stmt .)
    FOR             reduce using rule 79 (statement -> expression_stmt .)
    WHILE           reduce using rule 79 (statement -> expression_stmt .)
    DO              reduce using rule 79 (statement -> expression_stmt .)
    ID              reduce using rule 79 (statement -> expression_stmt .)
    ECHO            reduce using rule 79 (statement -> expression_stmt .)
    CLOSETAG        reduce using rule 79 (statement -> expression_stmt .)
    LPAREN          reduce using rule 79 (statement -> expression_stmt .)
    NUM             reduce using rule 79 (statement -> expression_stmt .)
    STRING          reduce using rule 79 (statement -> expression_stmt .)
    TRUE            reduce using rule 79 (statement -> expression_stmt .)
    FALSE           reduce using rule 79 (statement -> expression_stmt .)
    RBLOCK          reduce using rule 79 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 79 (statement -> expression_stmt .)
    RETURN          reduce using rule 79 (statement -> expression_stmt .)


state 131

    (80) statement -> compount_stmt .

    BREAK           reduce using rule 80 (statement -> compount_stmt .)
    SEMI            reduce using rule 80 (statement -> compount_stmt .)
    ELSE            reduce using rule 80 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 80 (statement -> compount_stmt .)
    IDVAR           reduce using rule 80 (statement -> compount_stmt .)
    TIMESTIMES      reduce using rule 80 (statement -> compount_stmt .)
    AMPERSANT       reduce using rule 80 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 80 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 80 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 80 (statement -> compount_stmt .)
    PROTECTED       reduce using rule 80 (statement -> compount_stmt .)
    REQUIRE         reduce using rule 80 (statement -> compount_stmt .)
    INCLUDE         reduce using rule 80 (statement -> compount_stmt .)
    CLASS           reduce using rule 80 (statement -> compount_stmt .)
    IF              reduce using rule 80 (statement -> compount_stmt .)
    SWITCH          reduce using rule 80 (statement -> compount_stmt .)
    CASE            reduce using rule 80 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 80 (statement -> compount_stmt .)
    FOR             reduce using rule 80 (statement -> compount_stmt .)
    WHILE           reduce using rule 80 (statement -> compount_stmt .)
    DO              reduce using rule 80 (statement -> compount_stmt .)
    ID              reduce using rule 80 (statement -> compount_stmt .)
    ECHO            reduce using rule 80 (statement -> compount_stmt .)
    CLOSETAG        reduce using rule 80 (statement -> compount_stmt .)
    LPAREN          reduce using rule 80 (statement -> compount_stmt .)
    NUM             reduce using rule 80 (statement -> compount_stmt .)
    STRING          reduce using rule 80 (statement -> compount_stmt .)
    TRUE            reduce using rule 80 (statement -> compount_stmt .)
    FALSE           reduce using rule 80 (statement -> compount_stmt .)
    RBLOCK          reduce using rule 80 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 80 (statement -> compount_stmt .)
    RETURN          reduce using rule 80 (statement -> compount_stmt .)


state 132

    (81) statement -> selection_stmt .

    BREAK           reduce using rule 81 (statement -> selection_stmt .)
    SEMI            reduce using rule 81 (statement -> selection_stmt .)
    ELSE            reduce using rule 81 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 81 (statement -> selection_stmt .)
    IDVAR           reduce using rule 81 (statement -> selection_stmt .)
    TIMESTIMES      reduce using rule 81 (statement -> selection_stmt .)
    AMPERSANT       reduce using rule 81 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 81 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 81 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 81 (statement -> selection_stmt .)
    PROTECTED       reduce using rule 81 (statement -> selection_stmt .)
    REQUIRE         reduce using rule 81 (statement -> selection_stmt .)
    INCLUDE         reduce using rule 81 (statement -> selection_stmt .)
    CLASS           reduce using rule 81 (statement -> selection_stmt .)
    IF              reduce using rule 81 (statement -> selection_stmt .)
    SWITCH          reduce using rule 81 (statement -> selection_stmt .)
    CASE            reduce using rule 81 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 81 (statement -> selection_stmt .)
    FOR             reduce using rule 81 (statement -> selection_stmt .)
    WHILE           reduce using rule 81 (statement -> selection_stmt .)
    DO              reduce using rule 81 (statement -> selection_stmt .)
    ID              reduce using rule 81 (statement -> selection_stmt .)
    ECHO            reduce using rule 81 (statement -> selection_stmt .)
    CLOSETAG        reduce using rule 81 (statement -> selection_stmt .)
    LPAREN          reduce using rule 81 (statement -> selection_stmt .)
    NUM             reduce using rule 81 (statement -> selection_stmt .)
    STRING          reduce using rule 81 (statement -> selection_stmt .)
    TRUE            reduce using rule 81 (statement -> selection_stmt .)
    FALSE           reduce using rule 81 (statement -> selection_stmt .)
    RBLOCK          reduce using rule 81 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 81 (statement -> selection_stmt .)
    RETURN          reduce using rule 81 (statement -> selection_stmt .)


state 133

    (82) statement -> iteration_stmt .

    BREAK           reduce using rule 82 (statement -> iteration_stmt .)
    SEMI            reduce using rule 82 (statement -> iteration_stmt .)
    ELSE            reduce using rule 82 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 82 (statement -> iteration_stmt .)
    IDVAR           reduce using rule 82 (statement -> iteration_stmt .)
    TIMESTIMES      reduce using rule 82 (statement -> iteration_stmt .)
    AMPERSANT       reduce using rule 82 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 82 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 82 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 82 (statement -> iteration_stmt .)
    PROTECTED       reduce using rule 82 (statement -> iteration_stmt .)
    REQUIRE         reduce using rule 82 (statement -> iteration_stmt .)
    INCLUDE         reduce using rule 82 (statement -> iteration_stmt .)
    CLASS           reduce using rule 82 (statement -> iteration_stmt .)
    IF              reduce using rule 82 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 82 (statement -> iteration_stmt .)
    CASE            reduce using rule 82 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 82 (statement -> iteration_stmt .)
    FOR             reduce using rule 82 (statement -> iteration_stmt .)
    WHILE           reduce using rule 82 (statement -> iteration_stmt .)
    DO              reduce using rule 82 (statement -> iteration_stmt .)
    ID              reduce using rule 82 (statement -> iteration_stmt .)
    ECHO            reduce using rule 82 (statement -> iteration_stmt .)
    CLOSETAG        reduce using rule 82 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 82 (statement -> iteration_stmt .)
    NUM             reduce using rule 82 (statement -> iteration_stmt .)
    STRING          reduce using rule 82 (statement -> iteration_stmt .)
    TRUE            reduce using rule 82 (statement -> iteration_stmt .)
    FALSE           reduce using rule 82 (statement -> iteration_stmt .)
    RBLOCK          reduce using rule 82 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 82 (statement -> iteration_stmt .)
    RETURN          reduce using rule 82 (statement -> iteration_stmt .)


state 134

    (83) statement -> return_stmt .

    BREAK           reduce using rule 83 (statement -> return_stmt .)
    SEMI            reduce using rule 83 (statement -> return_stmt .)
    ELSE            reduce using rule 83 (statement -> return_stmt .)
    ELSEIF          reduce using rule 83 (statement -> return_stmt .)
    IDVAR           reduce using rule 83 (statement -> return_stmt .)
    TIMESTIMES      reduce using rule 83 (statement -> return_stmt .)
    AMPERSANT       reduce using rule 83 (statement -> return_stmt .)
    FUNCTION        reduce using rule 83 (statement -> return_stmt .)
    PRIVATE         reduce using rule 83 (statement -> return_stmt .)
    PUBLIC          reduce using rule 83 (statement -> return_stmt .)
    PROTECTED       reduce using rule 83 (statement -> return_stmt .)
    REQUIRE         reduce using rule 83 (statement -> return_stmt .)
    INCLUDE         reduce using rule 83 (statement -> return_stmt .)
    CLASS           reduce using rule 83 (statement -> return_stmt .)
    IF              reduce using rule 83 (statement -> return_stmt .)
    SWITCH          reduce using rule 83 (statement -> return_stmt .)
    CASE            reduce using rule 83 (statement -> return_stmt .)
    DEFAULT         reduce using rule 83 (statement -> return_stmt .)
    FOR             reduce using rule 83 (statement -> return_stmt .)
    WHILE           reduce using rule 83 (statement -> return_stmt .)
    DO              reduce using rule 83 (statement -> return_stmt .)
    ID              reduce using rule 83 (statement -> return_stmt .)
    ECHO            reduce using rule 83 (statement -> return_stmt .)
    CLOSETAG        reduce using rule 83 (statement -> return_stmt .)
    LPAREN          reduce using rule 83 (statement -> return_stmt .)
    NUM             reduce using rule 83 (statement -> return_stmt .)
    STRING          reduce using rule 83 (statement -> return_stmt .)
    TRUE            reduce using rule 83 (statement -> return_stmt .)
    FALSE           reduce using rule 83 (statement -> return_stmt .)
    RBLOCK          reduce using rule 83 (statement -> return_stmt .)
    LBLOCK          reduce using rule 83 (statement -> return_stmt .)
    RETURN          reduce using rule 83 (statement -> return_stmt .)


state 135

    (84) statement -> class_declaration .

    BREAK           reduce using rule 84 (statement -> class_declaration .)
    SEMI            reduce using rule 84 (statement -> class_declaration .)
    ELSE            reduce using rule 84 (statement -> class_declaration .)
    ELSEIF          reduce using rule 84 (statement -> class_declaration .)
    IDVAR           reduce using rule 84 (statement -> class_declaration .)
    TIMESTIMES      reduce using rule 84 (statement -> class_declaration .)
    AMPERSANT       reduce using rule 84 (statement -> class_declaration .)
    FUNCTION        reduce using rule 84 (statement -> class_declaration .)
    PRIVATE         reduce using rule 84 (statement -> class_declaration .)
    PUBLIC          reduce using rule 84 (statement -> class_declaration .)
    PROTECTED       reduce using rule 84 (statement -> class_declaration .)
    REQUIRE         reduce using rule 84 (statement -> class_declaration .)
    INCLUDE         reduce using rule 84 (statement -> class_declaration .)
    CLASS           reduce using rule 84 (statement -> class_declaration .)
    IF              reduce using rule 84 (statement -> class_declaration .)
    SWITCH          reduce using rule 84 (statement -> class_declaration .)
    CASE            reduce using rule 84 (statement -> class_declaration .)
    DEFAULT         reduce using rule 84 (statement -> class_declaration .)
    FOR             reduce using rule 84 (statement -> class_declaration .)
    WHILE           reduce using rule 84 (statement -> class_declaration .)
    DO              reduce using rule 84 (statement -> class_declaration .)
    ID              reduce using rule 84 (statement -> class_declaration .)
    ECHO            reduce using rule 84 (statement -> class_declaration .)
    CLOSETAG        reduce using rule 84 (statement -> class_declaration .)
    LPAREN          reduce using rule 84 (statement -> class_declaration .)
    NUM             reduce using rule 84 (statement -> class_declaration .)
    STRING          reduce using rule 84 (statement -> class_declaration .)
    TRUE            reduce using rule 84 (statement -> class_declaration .)
    FALSE           reduce using rule 84 (statement -> class_declaration .)
    RBLOCK          reduce using rule 84 (statement -> class_declaration .)
    LBLOCK          reduce using rule 84 (statement -> class_declaration .)
    RETURN          reduce using rule 84 (statement -> class_declaration .)


state 136

    (85) statement -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    BREAK           reduce using rule 85 (statement -> echo_stmt .)
    SEMI            reduce using rule 85 (statement -> echo_stmt .)
    ELSE            reduce using rule 85 (statement -> echo_stmt .)
    ELSEIF          reduce using rule 85 (statement -> echo_stmt .)
    IDVAR           reduce using rule 85 (statement -> echo_stmt .)
    TIMESTIMES      reduce using rule 85 (statement -> echo_stmt .)
    AMPERSANT       reduce using rule 85 (statement -> echo_stmt .)
    FUNCTION        reduce using rule 85 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 85 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 85 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 85 (statement -> echo_stmt .)
    REQUIRE         reduce using rule 85 (statement -> echo_stmt .)
    INCLUDE         reduce using rule 85 (statement -> echo_stmt .)
    CLASS           reduce using rule 85 (statement -> echo_stmt .)
    IF              reduce using rule 85 (statement -> echo_stmt .)
    SWITCH          reduce using rule 85 (statement -> echo_stmt .)
    CASE            reduce using rule 85 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 85 (statement -> echo_stmt .)
    FOR             reduce using rule 85 (statement -> echo_stmt .)
    WHILE           reduce using rule 85 (statement -> echo_stmt .)
    DO              reduce using rule 85 (statement -> echo_stmt .)
    ID              reduce using rule 85 (statement -> echo_stmt .)
    CLOSETAG        reduce using rule 85 (statement -> echo_stmt .)
    LPAREN          reduce using rule 85 (statement -> echo_stmt .)
    NUM             reduce using rule 85 (statement -> echo_stmt .)
    STRING          reduce using rule 85 (statement -> echo_stmt .)
    TRUE            reduce using rule 85 (statement -> echo_stmt .)
    FALSE           reduce using rule 85 (statement -> echo_stmt .)
    RBLOCK          reduce using rule 85 (statement -> echo_stmt .)
    LBLOCK          reduce using rule 85 (statement -> echo_stmt .)
    RETURN          reduce using rule 85 (statement -> echo_stmt .)
    ECHO            shift and go to state 40

  ! ECHO            [ reduce using rule 85 (statement -> echo_stmt .) ]


state 137

    (86) expression_stmt -> expression . SEMI
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    SEMI            shift and go to state 204
    AND             shift and go to state 151
    OR              shift and go to state 152


state 138

    (74) compount_stmt -> LBLOCK . echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (154) empty -> .

    ECHO            reduce using rule 154 (empty -> .)
    IDVAR           reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    LBLOCK          reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    SWITCH          reduce using rule 154 (empty -> .)
    CASE            reduce using rule 154 (empty -> .)
    DEFAULT         reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    CLASS           reduce using rule 154 (empty -> .)
    PRIVATE         reduce using rule 154 (empty -> .)
    PUBLIC          reduce using rule 154 (empty -> .)
    PROTECTED       reduce using rule 154 (empty -> .)
    LPAREN          reduce using rule 154 (empty -> .)
    NUM             reduce using rule 154 (empty -> .)
    STRING          reduce using rule 154 (empty -> .)
    TRUE            reduce using rule 154 (empty -> .)
    FALSE           reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)

    echo_stmt                      shift and go to state 205
    empty                          shift and go to state 27

state 139

    (98) return_stmt -> RETURN . SEMI
    (99) return_stmt -> RETURN . expression SEMI
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    SEMI            shift and go to state 206
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 207
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 140

    (25) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK

    CLASS           shift and go to state 39


state 141

    (95) iteration_stmt -> FOR LPAREN var_declaration . expression SEMI additive_expression RPAREN statement
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 208
    additive_expression            shift and go to state 93
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 142

    (96) iteration_stmt -> WHILE LPAREN expression . RPAREN statement
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RPAREN          shift and go to state 209
    AND             shift and go to state 151
    OR              shift and go to state 152


state 143

    (97) iteration_stmt -> DO LBLOCK statement . SEMI RBLOCK WHILE LPAREN expression RPAREN

    SEMI            shift and go to state 210


state 144

    (25) class_declaration -> area CLASS ID LBLOCK . attributes RBLOCK
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    area                           shift and go to state 197
    attributes                     shift and go to state 211
    attribute                      shift and go to state 196
    fun_declaration                shift and go to state 198

state 145

    (13) echo_stmt -> echo_stmt ECHO echo_params SEMI .

    ECHO            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IDVAR           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TIMESTIMES      reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    AMPERSANT       reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FUNCTION        reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PRIVATE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PUBLIC          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    PROTECTED       reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    REQUIRE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    INCLUDE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLASS           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    IF              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SWITCH          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CASE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DEFAULT         reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FOR             reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    WHILE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    DO              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ID              reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    CLOSETAG        reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    BREAK           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    SEMI            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RETURN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    LPAREN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    NUM             reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    STRING          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    TRUE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    FALSE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    RBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)
    ELSEIF          reduce using rule 13 (echo_stmt -> echo_stmt ECHO echo_params SEMI .)


state 146

    (16) echo_params -> echo_param DOT . echo_params
    (15) echo_params -> . echo_param
    (16) echo_params -> . echo_param DOT echo_params
    (17) echo_param -> . STRING
    (18) echo_param -> . IDVAR
    (19) echo_param -> . NUM
    (20) echo_param -> . boolean
    (21) echo_param -> . fun_declaration
    (22) echo_param -> . fun_call
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    STRING          shift and go to state 74
    IDVAR           shift and go to state 75
    NUM             shift and go to state 76
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    FUNCTION        shift and go to state 19
    ID              shift and go to state 82

    echo_param                     shift and go to state 73
    echo_params                    shift and go to state 212
    boolean                        shift and go to state 77
    fun_declaration                shift and go to state 78
    fun_call                       shift and go to state 79
    assing_var                     shift and go to state 83
    var                            shift and go to state 30

state 147

    (151) typeclass -> IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 213


state 148

    (152) constructor -> ID . LPAREN RPAREN
    (153) constructor -> ID . LPAREN args RPAREN

    LPAREN          shift and go to state 214


state 149

    (142) factor -> IDVAR LPAREN . args RPAREN
    (143) args -> . args_list
    (144) args -> . empty
    (145) args -> . VOID
    (146) args_list -> . args_list COMMA expression
    (147) args_list -> . expression
    (154) empty -> .
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    VOID            shift and go to state 218
    RPAREN          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    args                           shift and go to state 215
    args_list                      shift and go to state 216
    empty                          shift and go to state 217
    expression                     shift and go to state 219
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 150

    (108) var -> IDVAR LBRACKET expression RBRACKET .

    ARROW           reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    MUL_EQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIV_EQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    CONCAT_EQUAL    reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    MOD_EQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS_EQUAL      reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS_EQUAL     reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND             reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR              reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESS            reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_IDENTICAL    reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    SR_EQUAL        reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    SL_EQUAL        reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND_EQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR_EQUAL        reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    XOR_EQUAL       reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 108 (var -> IDVAR LBRACKET expression RBRACKET .)


state 151

    (103) expression -> expression AND . expression
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 220
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 152

    (104) expression -> expression OR . expression
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 221
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 153

    (100) expression -> assing_var EQUAL . expression
    (102) expression -> assing_var EQUAL . AMPERSANT IDVAR
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    AMPERSANT       shift and go to state 223
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    assing_var                     shift and go to state 89
    expression                     shift and go to state 222
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 154

    (109) simple_expression -> additive_expression relop . additive_expression
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    IDVAR           shift and go to state 225
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    additive_expression            shift and go to state 224
    term                           shift and go to state 95
    fun_call                       shift and go to state 106
    factor                         shift and go to state 96
    assing_var                     shift and go to state 83
    var                            shift and go to state 107
    boolean                        shift and go to state 99

state 155

    (126) additive_expression -> additive_expression addop . term
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    IDVAR           shift and go to state 225
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    term                           shift and go to state 226
    factor                         shift and go to state 96
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 156

    (111) relop -> LESS .

    ID              reduce using rule 111 (relop -> LESS .)
    LPAREN          reduce using rule 111 (relop -> LESS .)
    NUM             reduce using rule 111 (relop -> LESS .)
    STRING          reduce using rule 111 (relop -> LESS .)
    IDVAR           reduce using rule 111 (relop -> LESS .)
    TRUE            reduce using rule 111 (relop -> LESS .)
    FALSE           reduce using rule 111 (relop -> LESS .)


state 157

    (112) relop -> LESSEQUAL .

    ID              reduce using rule 112 (relop -> LESSEQUAL .)
    LPAREN          reduce using rule 112 (relop -> LESSEQUAL .)
    NUM             reduce using rule 112 (relop -> LESSEQUAL .)
    STRING          reduce using rule 112 (relop -> LESSEQUAL .)
    IDVAR           reduce using rule 112 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 112 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 112 (relop -> LESSEQUAL .)


state 158

    (113) relop -> GREATER .

    ID              reduce using rule 113 (relop -> GREATER .)
    LPAREN          reduce using rule 113 (relop -> GREATER .)
    NUM             reduce using rule 113 (relop -> GREATER .)
    STRING          reduce using rule 113 (relop -> GREATER .)
    IDVAR           reduce using rule 113 (relop -> GREATER .)
    TRUE            reduce using rule 113 (relop -> GREATER .)
    FALSE           reduce using rule 113 (relop -> GREATER .)


state 159

    (114) relop -> GREATEREQUAL .

    ID              reduce using rule 114 (relop -> GREATEREQUAL .)
    LPAREN          reduce using rule 114 (relop -> GREATEREQUAL .)
    NUM             reduce using rule 114 (relop -> GREATEREQUAL .)
    STRING          reduce using rule 114 (relop -> GREATEREQUAL .)
    IDVAR           reduce using rule 114 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 114 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 114 (relop -> GREATEREQUAL .)


state 160

    (115) relop -> DEQUAL .

    ID              reduce using rule 115 (relop -> DEQUAL .)
    LPAREN          reduce using rule 115 (relop -> DEQUAL .)
    NUM             reduce using rule 115 (relop -> DEQUAL .)
    STRING          reduce using rule 115 (relop -> DEQUAL .)
    IDVAR           reduce using rule 115 (relop -> DEQUAL .)
    TRUE            reduce using rule 115 (relop -> DEQUAL .)
    FALSE           reduce using rule 115 (relop -> DEQUAL .)


state 161

    (116) relop -> DISTINT .

    ID              reduce using rule 116 (relop -> DISTINT .)
    LPAREN          reduce using rule 116 (relop -> DISTINT .)
    NUM             reduce using rule 116 (relop -> DISTINT .)
    STRING          reduce using rule 116 (relop -> DISTINT .)
    IDVAR           reduce using rule 116 (relop -> DISTINT .)
    TRUE            reduce using rule 116 (relop -> DISTINT .)
    FALSE           reduce using rule 116 (relop -> DISTINT .)


state 162

    (117) relop -> ISEQUAL .

    ID              reduce using rule 117 (relop -> ISEQUAL .)
    LPAREN          reduce using rule 117 (relop -> ISEQUAL .)
    NUM             reduce using rule 117 (relop -> ISEQUAL .)
    STRING          reduce using rule 117 (relop -> ISEQUAL .)
    IDVAR           reduce using rule 117 (relop -> ISEQUAL .)
    TRUE            reduce using rule 117 (relop -> ISEQUAL .)
    FALSE           reduce using rule 117 (relop -> ISEQUAL .)


state 163

    (118) relop -> IS_IDENTICAL .

    ID              reduce using rule 118 (relop -> IS_IDENTICAL .)
    LPAREN          reduce using rule 118 (relop -> IS_IDENTICAL .)
    NUM             reduce using rule 118 (relop -> IS_IDENTICAL .)
    STRING          reduce using rule 118 (relop -> IS_IDENTICAL .)
    IDVAR           reduce using rule 118 (relop -> IS_IDENTICAL .)
    TRUE            reduce using rule 118 (relop -> IS_IDENTICAL .)
    FALSE           reduce using rule 118 (relop -> IS_IDENTICAL .)


state 164

    (119) relop -> IS_NOT_IDENTICAL .

    ID              reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    STRING          reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    IDVAR           reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 119 (relop -> IS_NOT_IDENTICAL .)


state 165

    (120) relop -> SR_EQUAL .

    ID              reduce using rule 120 (relop -> SR_EQUAL .)
    LPAREN          reduce using rule 120 (relop -> SR_EQUAL .)
    NUM             reduce using rule 120 (relop -> SR_EQUAL .)
    STRING          reduce using rule 120 (relop -> SR_EQUAL .)
    IDVAR           reduce using rule 120 (relop -> SR_EQUAL .)
    TRUE            reduce using rule 120 (relop -> SR_EQUAL .)
    FALSE           reduce using rule 120 (relop -> SR_EQUAL .)


state 166

    (121) relop -> SL_EQUAL .

    ID              reduce using rule 121 (relop -> SL_EQUAL .)
    LPAREN          reduce using rule 121 (relop -> SL_EQUAL .)
    NUM             reduce using rule 121 (relop -> SL_EQUAL .)
    STRING          reduce using rule 121 (relop -> SL_EQUAL .)
    IDVAR           reduce using rule 121 (relop -> SL_EQUAL .)
    TRUE            reduce using rule 121 (relop -> SL_EQUAL .)
    FALSE           reduce using rule 121 (relop -> SL_EQUAL .)


state 167

    (122) relop -> AND_EQUAL .

    ID              reduce using rule 122 (relop -> AND_EQUAL .)
    LPAREN          reduce using rule 122 (relop -> AND_EQUAL .)
    NUM             reduce using rule 122 (relop -> AND_EQUAL .)
    STRING          reduce using rule 122 (relop -> AND_EQUAL .)
    IDVAR           reduce using rule 122 (relop -> AND_EQUAL .)
    TRUE            reduce using rule 122 (relop -> AND_EQUAL .)
    FALSE           reduce using rule 122 (relop -> AND_EQUAL .)


state 168

    (123) relop -> OR_EQUAL .

    ID              reduce using rule 123 (relop -> OR_EQUAL .)
    LPAREN          reduce using rule 123 (relop -> OR_EQUAL .)
    NUM             reduce using rule 123 (relop -> OR_EQUAL .)
    STRING          reduce using rule 123 (relop -> OR_EQUAL .)
    IDVAR           reduce using rule 123 (relop -> OR_EQUAL .)
    TRUE            reduce using rule 123 (relop -> OR_EQUAL .)
    FALSE           reduce using rule 123 (relop -> OR_EQUAL .)


state 169

    (124) relop -> XOR_EQUAL .

    ID              reduce using rule 124 (relop -> XOR_EQUAL .)
    LPAREN          reduce using rule 124 (relop -> XOR_EQUAL .)
    NUM             reduce using rule 124 (relop -> XOR_EQUAL .)
    STRING          reduce using rule 124 (relop -> XOR_EQUAL .)
    IDVAR           reduce using rule 124 (relop -> XOR_EQUAL .)
    TRUE            reduce using rule 124 (relop -> XOR_EQUAL .)
    FALSE           reduce using rule 124 (relop -> XOR_EQUAL .)


state 170

    (125) relop -> CONCAT_EQUAL .

    ID              reduce using rule 125 (relop -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 125 (relop -> CONCAT_EQUAL .)
    NUM             reduce using rule 125 (relop -> CONCAT_EQUAL .)
    STRING          reduce using rule 125 (relop -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 125 (relop -> CONCAT_EQUAL .)
    TRUE            reduce using rule 125 (relop -> CONCAT_EQUAL .)
    FALSE           reduce using rule 125 (relop -> CONCAT_EQUAL .)


state 171

    (131) addop -> PLUS .

    LPAREN          reduce using rule 131 (addop -> PLUS .)
    NUM             reduce using rule 131 (addop -> PLUS .)
    STRING          reduce using rule 131 (addop -> PLUS .)
    IDVAR           reduce using rule 131 (addop -> PLUS .)
    TRUE            reduce using rule 131 (addop -> PLUS .)
    FALSE           reduce using rule 131 (addop -> PLUS .)


state 172

    (132) addop -> MINUS .

    LPAREN          reduce using rule 132 (addop -> MINUS .)
    NUM             reduce using rule 132 (addop -> MINUS .)
    STRING          reduce using rule 132 (addop -> MINUS .)
    IDVAR           reduce using rule 132 (addop -> MINUS .)
    TRUE            reduce using rule 132 (addop -> MINUS .)
    FALSE           reduce using rule 132 (addop -> MINUS .)


state 173

    (137) factor -> LPAREN expression . RPAREN
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RPAREN          shift and go to state 227
    AND             shift and go to state 151
    OR              shift and go to state 152


state 174

    (128) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    DEQUAL          reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    DISTINT         reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    ISEQUAL         reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    IS_IDENTICAL    reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    IS_NOT_IDENTICAL reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    SR_EQUAL        reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    SL_EQUAL        reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    AND_EQUAL       reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    OR_EQUAL        reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    XOR_EQUAL       reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    CONCAT_EQUAL    reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    RBRACKET        reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    AND             reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    OR              reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 128 (additive_expression -> term MINUSMINUS .)
    COMMA           reduce using rule 128 (additive_expression -> term MINUSMINUS .)


state 175

    (129) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    DEQUAL          reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    DISTINT         reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    ISEQUAL         reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    IS_IDENTICAL    reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    IS_NOT_IDENTICAL reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    SR_EQUAL        reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    SL_EQUAL        reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    AND_EQUAL       reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    OR_EQUAL        reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    XOR_EQUAL       reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    CONCAT_EQUAL    reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    RBRACKET        reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    AND             reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    OR              reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 129 (additive_expression -> term PLUSPLUS .)
    COMMA           reduce using rule 129 (additive_expression -> term PLUSPLUS .)


state 176

    (133) term -> term mulop . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    IDVAR           shift and go to state 225
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    factor                         shift and go to state 228
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 177

    (135) mulop -> TIMES .

    LPAREN          reduce using rule 135 (mulop -> TIMES .)
    NUM             reduce using rule 135 (mulop -> TIMES .)
    STRING          reduce using rule 135 (mulop -> TIMES .)
    IDVAR           reduce using rule 135 (mulop -> TIMES .)
    TRUE            reduce using rule 135 (mulop -> TIMES .)
    FALSE           reduce using rule 135 (mulop -> TIMES .)


state 178

    (136) mulop -> DIVIDE .

    LPAREN          reduce using rule 136 (mulop -> DIVIDE .)
    NUM             reduce using rule 136 (mulop -> DIVIDE .)
    STRING          reduce using rule 136 (mulop -> DIVIDE .)
    IDVAR           reduce using rule 136 (mulop -> DIVIDE .)
    TRUE            reduce using rule 136 (mulop -> DIVIDE .)
    FALSE           reduce using rule 136 (mulop -> DIVIDE .)


state 179

    (40) var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    IF              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CASE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FOR             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DO              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ID              reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    NUM             reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    STRING          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 40 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)


state 180

    (41) var_declaration -> assing_var IGUAL NUM SEMI . var_declaration
    (42) var_declaration -> assing_var IGUAL NUM SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TIMESTIMES      reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    AMPERSANT       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FUNCTION        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRIVATE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PUBLIC          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PROTECTED       reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    REQUIRE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    INCLUDE         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLASS           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    IF              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    SWITCH          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CASE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DEFAULT         reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FOR             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    WHILE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DO              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ID              reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ECHO            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLOSETAG        reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LPAREN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    NUM             reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    STRING          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TRUE            reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FALSE           reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RETURN          reduce using rule 42 (var_declaration -> assing_var IGUAL NUM SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 229
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 181

    (43) var_declaration -> assing_var IGUAL STRING SEMI . var_declaration
    (44) var_declaration -> assing_var IGUAL STRING SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TIMESTIMES      reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    AMPERSANT       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FUNCTION        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRIVATE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PUBLIC          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PROTECTED       reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    REQUIRE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    INCLUDE         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLASS           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    IF              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    SWITCH          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CASE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DEFAULT         reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FOR             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    WHILE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DO              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ID              reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ECHO            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLOSETAG        reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LPAREN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    NUM             reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    STRING          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TRUE            reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FALSE           reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RETURN          reduce using rule 44 (var_declaration -> assing_var IGUAL STRING SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 230
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 182

    (45) var_declaration -> assing_var IGUAL boolean SEMI . var_declaration
    (46) var_declaration -> assing_var IGUAL boolean SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TIMESTIMES      reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    AMPERSANT       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FUNCTION        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRIVATE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PUBLIC          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PROTECTED       reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    REQUIRE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    INCLUDE         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLASS           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    IF              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    SWITCH          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CASE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DEFAULT         reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FOR             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    WHILE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DO              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ID              reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ECHO            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLOSETAG        reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LPAREN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    NUM             reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    STRING          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TRUE            reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FALSE           reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LBLOCK          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RETURN          reduce using rule 46 (var_declaration -> assing_var IGUAL boolean SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 231
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 183

    (47) var_declaration -> assing_var IGUAL IDVAR SEMI . var_declaration
    (48) var_declaration -> assing_var IGUAL IDVAR SEMI .
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TIMESTIMES      reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    AMPERSANT       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FUNCTION        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRIVATE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PUBLIC          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PROTECTED       reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    REQUIRE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    INCLUDE         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLASS           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    IF              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    SWITCH          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CASE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DEFAULT         reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FOR             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    WHILE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DO              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ID              reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ECHO            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLOSETAG        reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LPAREN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    NUM             reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    STRING          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TRUE            reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FALSE           reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RETURN          reduce using rule 48 (var_declaration -> assing_var IGUAL IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 84 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]
  ! ID              [ shift and go to state 82 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 232
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 184

    (52) var_declaration -> assing_var IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    IF              reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CASE            reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FOR             reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DO              reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ID              reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    NUM             reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    STRING          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 52 (var_declaration -> assing_var IGUAL simple_expression SEMI .)


state 185

    (66) fun_call -> assing_var LPAREN params RPAREN .

    SEMI            reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    DOT             reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    RBRACKET        reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    AND             reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    OR              reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    LESS            reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATER         reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    DEQUAL          reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    DISTINT         reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    PLUS            reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    MINUS           reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    RPAREN          reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)
    COMMA           reduce using rule 66 (fun_call -> assing_var LPAREN params RPAREN .)


state 186

    (70) param_list -> param COMMA . param_list
    (69) param_list -> . param
    (70) param_list -> . param COMMA param_list
    (71) param -> . IDVAR
    (72) param -> . IDVAR LBRACKET RBRACKET
    (73) param -> . term
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    IDVAR           shift and go to state 112
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    param                          shift and go to state 111
    param_list                     shift and go to state 233
    term                           shift and go to state 113
    factor                         shift and go to state 96
    var                            shift and go to state 114
    boolean                        shift and go to state 99

state 187

    (72) param -> IDVAR LBRACKET . RBRACKET
    (108) var -> IDVAR LBRACKET . expression RBRACKET
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    RBRACKET        shift and go to state 234
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 88
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 188

    (49) var_declaration -> AMPERSANT IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    IF              reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CASE            reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FOR             reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DO              reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ID              reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    NUM             reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    STRING          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 49 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)


state 189

    (50) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR . SEMI selection_stmt

    SEMI            shift and go to state 235


state 190

    (63) fun_declaration -> FUNCTION ID LPAREN params . RPAREN
    (64) fun_declaration -> FUNCTION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 236


state 191

    (150) typeclass -> ID IDVAR EQUAL NEW . constructor SEMI
    (152) constructor -> . ID LPAREN RPAREN
    (153) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 148

    constructor                    shift and go to state 237

state 192

    (65) fun_call -> ID LPAREN params RPAREN .

    SEMI            reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    DOT             reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    RBRACKET        reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    LESS            reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    LESSEQUAL       reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    GREATER         reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    GREATEREQUAL    reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    DEQUAL          reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    DISTINT         reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    SR_EQUAL        reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    SL_EQUAL        reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    AND_EQUAL       reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    OR_EQUAL        reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    XOR_EQUAL       reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    CONCAT_EQUAL    reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 65 (fun_call -> ID LPAREN params RPAREN .)


state 193

    (23) header_declaration -> REQUIRE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 238


state 194

    (24) header_declaration -> INCLUDE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 239


state 195

    (26) class_declaration -> CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 240


state 196

    (27) attributes -> attribute .
    (28) attributes -> attribute . attributes
    (29) attribute -> attribute . area var_declaration
    (31) attribute -> attribute . area fun_declaration
    (27) attributes -> . attribute
    (28) attributes -> . attribute attributes
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (29) attribute -> . attribute area var_declaration
    (30) attribute -> . area var_declaration
    (31) attribute -> . attribute area fun_declaration
    (32) attribute -> . area fun_declaration
    (33) attribute -> . fun_declaration
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    RBLOCK          reduce using rule 27 (attributes -> attribute .)
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    FUNCTION        shift and go to state 19

    attribute                      shift and go to state 196
    attributes                     shift and go to state 241
    area                           shift and go to state 242
    fun_declaration                shift and go to state 198

state 197

    (30) attribute -> area . var_declaration
    (32) attribute -> area . fun_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 84
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    ID              shift and go to state 82

    var_declaration                shift and go to state 243
    fun_declaration                shift and go to state 244
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 198

    (33) attribute -> fun_declaration .

    PRIVATE         reduce using rule 33 (attribute -> fun_declaration .)
    PUBLIC          reduce using rule 33 (attribute -> fun_declaration .)
    PROTECTED       reduce using rule 33 (attribute -> fun_declaration .)
    FUNCTION        reduce using rule 33 (attribute -> fun_declaration .)
    RBLOCK          reduce using rule 33 (attribute -> fun_declaration .)


state 199

    (87) selection_stmt -> IF LPAREN expression RPAREN . statement
    (88) selection_stmt -> IF LPAREN expression RPAREN . statement selection
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    FUNCTION        reduce using rule 154 (empty -> .)
    REQUIRE         reduce using rule 154 (empty -> .)
    INCLUDE         reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]

    expression                     shift and go to state 137
    statement                      shift and go to state 245
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 200

    (91) selection_stmt -> SWITCH LPAREN var RPAREN . statement
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    FUNCTION        reduce using rule 154 (empty -> .)
    REQUIRE         reduce using rule 154 (empty -> .)
    INCLUDE         reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]

    var                            shift and go to state 92
    statement                      shift and go to state 246
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 201

    (92) selection_stmt -> CASE NUM COLON statement . BREAK SEMI

    BREAK           shift and go to state 247


state 202

    (93) selection_stmt -> CASE STRING COLON statement . BREAK SEMI

    BREAK           shift and go to state 248


state 203

    (94) selection_stmt -> DEFAULT COLON statement BREAK . SEMI

    SEMI            shift and go to state 249


state 204

    (86) expression_stmt -> expression SEMI .

    BREAK           reduce using rule 86 (expression_stmt -> expression SEMI .)
    SEMI            reduce using rule 86 (expression_stmt -> expression SEMI .)
    ELSE            reduce using rule 86 (expression_stmt -> expression SEMI .)
    ELSEIF          reduce using rule 86 (expression_stmt -> expression SEMI .)
    IDVAR           reduce using rule 86 (expression_stmt -> expression SEMI .)
    TIMESTIMES      reduce using rule 86 (expression_stmt -> expression SEMI .)
    AMPERSANT       reduce using rule 86 (expression_stmt -> expression SEMI .)
    FUNCTION        reduce using rule 86 (expression_stmt -> expression SEMI .)
    PRIVATE         reduce using rule 86 (expression_stmt -> expression SEMI .)
    PUBLIC          reduce using rule 86 (expression_stmt -> expression SEMI .)
    PROTECTED       reduce using rule 86 (expression_stmt -> expression SEMI .)
    REQUIRE         reduce using rule 86 (expression_stmt -> expression SEMI .)
    INCLUDE         reduce using rule 86 (expression_stmt -> expression SEMI .)
    CLASS           reduce using rule 86 (expression_stmt -> expression SEMI .)
    IF              reduce using rule 86 (expression_stmt -> expression SEMI .)
    SWITCH          reduce using rule 86 (expression_stmt -> expression SEMI .)
    CASE            reduce using rule 86 (expression_stmt -> expression SEMI .)
    DEFAULT         reduce using rule 86 (expression_stmt -> expression SEMI .)
    FOR             reduce using rule 86 (expression_stmt -> expression SEMI .)
    WHILE           reduce using rule 86 (expression_stmt -> expression SEMI .)
    DO              reduce using rule 86 (expression_stmt -> expression SEMI .)
    ID              reduce using rule 86 (expression_stmt -> expression SEMI .)
    ECHO            reduce using rule 86 (expression_stmt -> expression SEMI .)
    CLOSETAG        reduce using rule 86 (expression_stmt -> expression SEMI .)
    LPAREN          reduce using rule 86 (expression_stmt -> expression SEMI .)
    NUM             reduce using rule 86 (expression_stmt -> expression SEMI .)
    STRING          reduce using rule 86 (expression_stmt -> expression SEMI .)
    TRUE            reduce using rule 86 (expression_stmt -> expression SEMI .)
    FALSE           reduce using rule 86 (expression_stmt -> expression SEMI .)
    RBLOCK          reduce using rule 86 (expression_stmt -> expression SEMI .)
    LBLOCK          reduce using rule 86 (expression_stmt -> expression SEMI .)
    RETURN          reduce using rule 86 (expression_stmt -> expression SEMI .)


state 205

    (74) compount_stmt -> LBLOCK echo_stmt . local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (75) local_declarations -> . local_declarations var_declaration
    (76) local_declarations -> . empty
    (154) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 40
    IDVAR           reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    LBLOCK          reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    SWITCH          reduce using rule 154 (empty -> .)
    CASE            reduce using rule 154 (empty -> .)
    DEFAULT         reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    CLASS           reduce using rule 154 (empty -> .)
    PRIVATE         reduce using rule 154 (empty -> .)
    PUBLIC          reduce using rule 154 (empty -> .)
    PROTECTED       reduce using rule 154 (empty -> .)
    LPAREN          reduce using rule 154 (empty -> .)
    NUM             reduce using rule 154 (empty -> .)
    STRING          reduce using rule 154 (empty -> .)
    TRUE            reduce using rule 154 (empty -> .)
    FALSE           reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)

  ! ECHO            [ reduce using rule 154 (empty -> .) ]

    local_declarations             shift and go to state 250
    empty                          shift and go to state 251

state 206

    (98) return_stmt -> RETURN SEMI .

    BREAK           reduce using rule 98 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 98 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 98 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    IDVAR           reduce using rule 98 (return_stmt -> RETURN SEMI .)
    TIMESTIMES      reduce using rule 98 (return_stmt -> RETURN SEMI .)
    AMPERSANT       reduce using rule 98 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 98 (return_stmt -> RETURN SEMI .)
    PRIVATE         reduce using rule 98 (return_stmt -> RETURN SEMI .)
    PUBLIC          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    PROTECTED       reduce using rule 98 (return_stmt -> RETURN SEMI .)
    REQUIRE         reduce using rule 98 (return_stmt -> RETURN SEMI .)
    INCLUDE         reduce using rule 98 (return_stmt -> RETURN SEMI .)
    CLASS           reduce using rule 98 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 98 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 98 (return_stmt -> RETURN SEMI .)
    DEFAULT         reduce using rule 98 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 98 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 98 (return_stmt -> RETURN SEMI .)
    DO              reduce using rule 98 (return_stmt -> RETURN SEMI .)
    ID              reduce using rule 98 (return_stmt -> RETURN SEMI .)
    ECHO            reduce using rule 98 (return_stmt -> RETURN SEMI .)
    CLOSETAG        reduce using rule 98 (return_stmt -> RETURN SEMI .)
    LPAREN          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    NUM             reduce using rule 98 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    TRUE            reduce using rule 98 (return_stmt -> RETURN SEMI .)
    FALSE           reduce using rule 98 (return_stmt -> RETURN SEMI .)
    RBLOCK          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    LBLOCK          reduce using rule 98 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 98 (return_stmt -> RETURN SEMI .)


state 207

    (99) return_stmt -> RETURN expression . SEMI
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    SEMI            shift and go to state 252
    AND             shift and go to state 151
    OR              shift and go to state 152


state 208

    (95) iteration_stmt -> FOR LPAREN var_declaration expression . SEMI additive_expression RPAREN statement
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    SEMI            shift and go to state 253
    AND             shift and go to state 151
    OR              shift and go to state 152


state 209

    (96) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    FUNCTION        reduce using rule 154 (empty -> .)
    REQUIRE         reduce using rule 154 (empty -> .)
    INCLUDE         reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]

    expression                     shift and go to state 137
    statement                      shift and go to state 254
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 210

    (97) iteration_stmt -> DO LBLOCK statement SEMI . RBLOCK WHILE LPAREN expression RPAREN

    RBLOCK          shift and go to state 255


state 211

    (25) class_declaration -> area CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 256


state 212

    (16) echo_params -> echo_param DOT echo_params .

    SEMI            reduce using rule 16 (echo_params -> echo_param DOT echo_params .)


state 213

    (151) typeclass -> IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 151 (typeclass -> IDVAR EQUAL NEW constructor SEMI .)


state 214

    (152) constructor -> ID LPAREN . RPAREN
    (153) constructor -> ID LPAREN . args RPAREN
    (143) args -> . args_list
    (144) args -> . empty
    (145) args -> . VOID
    (146) args_list -> . args_list COMMA expression
    (147) args_list -> . expression
    (154) empty -> .
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 257
    VOID            shift and go to state 218
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! RPAREN          [ reduce using rule 154 (empty -> .) ]

    args                           shift and go to state 258
    args_list                      shift and go to state 216
    empty                          shift and go to state 217
    expression                     shift and go to state 219
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 215

    (142) factor -> IDVAR LPAREN args . RPAREN

    RPAREN          shift and go to state 259


state 216

    (143) args -> args_list .
    (146) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 143 (args -> args_list .)
    COMMA           shift and go to state 260


state 217

    (144) args -> empty .

    RPAREN          reduce using rule 144 (args -> empty .)


state 218

    (145) args -> VOID .

    RPAREN          reduce using rule 145 (args -> VOID .)


state 219

    (147) args_list -> expression .
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    COMMA           reduce using rule 147 (args_list -> expression .)
    RPAREN          reduce using rule 147 (args_list -> expression .)
    AND             shift and go to state 151
    OR              shift and go to state 152


state 220

    (103) expression -> expression AND expression .
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RBRACKET        reduce using rule 103 (expression -> expression AND expression .)
    AND             reduce using rule 103 (expression -> expression AND expression .)
    OR              reduce using rule 103 (expression -> expression AND expression .)
    RPAREN          reduce using rule 103 (expression -> expression AND expression .)
    SEMI            reduce using rule 103 (expression -> expression AND expression .)
    COMMA           reduce using rule 103 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 151 ]
  ! OR              [ shift and go to state 152 ]


state 221

    (104) expression -> expression OR expression .
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RBRACKET        reduce using rule 104 (expression -> expression OR expression .)
    OR              reduce using rule 104 (expression -> expression OR expression .)
    RPAREN          reduce using rule 104 (expression -> expression OR expression .)
    SEMI            reduce using rule 104 (expression -> expression OR expression .)
    COMMA           reduce using rule 104 (expression -> expression OR expression .)
    AND             shift and go to state 151

  ! AND             [ reduce using rule 104 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 152 ]


state 222

    (100) expression -> assing_var EQUAL expression .
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RBRACKET        reduce using rule 100 (expression -> assing_var EQUAL expression .)
    RPAREN          reduce using rule 100 (expression -> assing_var EQUAL expression .)
    SEMI            reduce using rule 100 (expression -> assing_var EQUAL expression .)
    COMMA           reduce using rule 100 (expression -> assing_var EQUAL expression .)
    AND             shift and go to state 151
    OR              shift and go to state 152

  ! AND             [ reduce using rule 100 (expression -> assing_var EQUAL expression .) ]
  ! OR              [ reduce using rule 100 (expression -> assing_var EQUAL expression .) ]


state 223

    (102) expression -> assing_var EQUAL AMPERSANT . IDVAR

    IDVAR           shift and go to state 261


state 224

    (109) simple_expression -> additive_expression relop additive_expression .
    (126) additive_expression -> additive_expression . addop term
    (131) addop -> . PLUS
    (132) addop -> . MINUS

    RBRACKET        reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    AND             reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    SEMI            reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 109 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 171
    MINUS           shift and go to state 172

    addop                          shift and go to state 155

state 225

    (142) factor -> IDVAR . LPAREN args RPAREN
    (107) var -> IDVAR .
    (108) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 149
    ARROW           reduce using rule 107 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 107 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 107 (var -> IDVAR .)
    TIMES           reduce using rule 107 (var -> IDVAR .)
    DIVIDE          reduce using rule 107 (var -> IDVAR .)
    PLUS            reduce using rule 107 (var -> IDVAR .)
    MINUS           reduce using rule 107 (var -> IDVAR .)
    RBRACKET        reduce using rule 107 (var -> IDVAR .)
    AND             reduce using rule 107 (var -> IDVAR .)
    OR              reduce using rule 107 (var -> IDVAR .)
    SEMI            reduce using rule 107 (var -> IDVAR .)
    RPAREN          reduce using rule 107 (var -> IDVAR .)
    COMMA           reduce using rule 107 (var -> IDVAR .)
    LESS            reduce using rule 107 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 107 (var -> IDVAR .)
    GREATER         reduce using rule 107 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 107 (var -> IDVAR .)
    DEQUAL          reduce using rule 107 (var -> IDVAR .)
    DISTINT         reduce using rule 107 (var -> IDVAR .)
    ISEQUAL         reduce using rule 107 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 107 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 107 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 107 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 107 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 107 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 107 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 107 (var -> IDVAR .)
    LBRACKET        shift and go to state 43

  ! LPAREN          [ reduce using rule 107 (var -> IDVAR .) ]


state 226

    (126) additive_expression -> additive_expression addop term .
    (133) term -> term . mulop factor
    (135) mulop -> . TIMES
    (136) mulop -> . DIVIDE

    LESS            reduce using rule 126 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 126 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 126 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 126 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 126 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 126 (additive_expression -> additive_expression addop term .)
    ISEQUAL         reduce using rule 126 (additive_expression -> additive_expression addop term .)
    IS_IDENTICAL    reduce using rule 126 (additive_expression -> additive_expression addop term .)
    IS_NOT_IDENTICAL reduce using rule 126 (additive_expression -> additive_expression addop term .)
    SR_EQUAL        reduce using rule 126 (additive_expression -> additive_expression addop term .)
    SL_EQUAL        reduce using rule 126 (additive_expression -> additive_expression addop term .)
    AND_EQUAL       reduce using rule 126 (additive_expression -> additive_expression addop term .)
    OR_EQUAL        reduce using rule 126 (additive_expression -> additive_expression addop term .)
    XOR_EQUAL       reduce using rule 126 (additive_expression -> additive_expression addop term .)
    CONCAT_EQUAL    reduce using rule 126 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 126 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 126 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 126 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 126 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 126 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 126 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 126 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 126 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 177
    DIVIDE          shift and go to state 178

    mulop                          shift and go to state 176

state 227

    (137) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    SR_EQUAL        reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    SL_EQUAL        reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    AND_EQUAL       reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    OR_EQUAL        reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    XOR_EQUAL       reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    CONCAT_EQUAL    reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 137 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 137 (factor -> LPAREN expression RPAREN .)


state 228

    (133) term -> term mulop factor .

    MINUSMINUS      reduce using rule 133 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 133 (term -> term mulop factor .)
    TIMES           reduce using rule 133 (term -> term mulop factor .)
    DIVIDE          reduce using rule 133 (term -> term mulop factor .)
    LESS            reduce using rule 133 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 133 (term -> term mulop factor .)
    GREATER         reduce using rule 133 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 133 (term -> term mulop factor .)
    DEQUAL          reduce using rule 133 (term -> term mulop factor .)
    DISTINT         reduce using rule 133 (term -> term mulop factor .)
    ISEQUAL         reduce using rule 133 (term -> term mulop factor .)
    IS_IDENTICAL    reduce using rule 133 (term -> term mulop factor .)
    IS_NOT_IDENTICAL reduce using rule 133 (term -> term mulop factor .)
    SR_EQUAL        reduce using rule 133 (term -> term mulop factor .)
    SL_EQUAL        reduce using rule 133 (term -> term mulop factor .)
    AND_EQUAL       reduce using rule 133 (term -> term mulop factor .)
    OR_EQUAL        reduce using rule 133 (term -> term mulop factor .)
    XOR_EQUAL       reduce using rule 133 (term -> term mulop factor .)
    CONCAT_EQUAL    reduce using rule 133 (term -> term mulop factor .)
    PLUS            reduce using rule 133 (term -> term mulop factor .)
    MINUS           reduce using rule 133 (term -> term mulop factor .)
    RBRACKET        reduce using rule 133 (term -> term mulop factor .)
    AND             reduce using rule 133 (term -> term mulop factor .)
    OR              reduce using rule 133 (term -> term mulop factor .)
    SEMI            reduce using rule 133 (term -> term mulop factor .)
    COMMA           reduce using rule 133 (term -> term mulop factor .)
    RPAREN          reduce using rule 133 (term -> term mulop factor .)


state 229

    (41) var_declaration -> assing_var IGUAL NUM SEMI var_declaration .

    IDVAR           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TIMESTIMES      reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    AMPERSANT       reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FUNCTION        reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRIVATE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PUBLIC          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PROTECTED       reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    REQUIRE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    INCLUDE         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLASS           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    IF              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    SWITCH          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CASE            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DEFAULT         reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FOR             reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    WHILE           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DO              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ID              reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ECHO            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLOSETAG        reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LPAREN          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    NUM             reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    STRING          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TRUE            reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FALSE           reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RETURN          reduce using rule 41 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)


state 230

    (43) var_declaration -> assing_var IGUAL STRING SEMI var_declaration .

    IDVAR           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TIMESTIMES      reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    AMPERSANT       reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FUNCTION        reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRIVATE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PUBLIC          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PROTECTED       reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    REQUIRE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    INCLUDE         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLASS           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    IF              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    SWITCH          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CASE            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DEFAULT         reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FOR             reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    WHILE           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DO              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ID              reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ECHO            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLOSETAG        reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LPAREN          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    NUM             reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    STRING          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TRUE            reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FALSE           reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RETURN          reduce using rule 43 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)


state 231

    (45) var_declaration -> assing_var IGUAL boolean SEMI var_declaration .

    IDVAR           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TIMESTIMES      reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    AMPERSANT       reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FUNCTION        reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRIVATE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PUBLIC          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PROTECTED       reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    REQUIRE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    INCLUDE         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLASS           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    IF              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    SWITCH          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CASE            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DEFAULT         reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FOR             reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    WHILE           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DO              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ID              reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ECHO            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLOSETAG        reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LPAREN          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    NUM             reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    STRING          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TRUE            reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FALSE           reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LBLOCK          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RETURN          reduce using rule 45 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)


state 232

    (47) var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    IF              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CASE            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FOR             reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DO              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ID              reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    NUM             reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    STRING          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 47 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)


state 233

    (70) param_list -> param COMMA param_list .

    RPAREN          reduce using rule 70 (param_list -> param COMMA param_list .)


state 234

    (72) param -> IDVAR LBRACKET RBRACKET .

    COMMA           reduce using rule 72 (param -> IDVAR LBRACKET RBRACKET .)
    RPAREN          reduce using rule 72 (param -> IDVAR LBRACKET RBRACKET .)


state 235

    (50) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI . selection_stmt
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI

    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32

    selection_stmt                 shift and go to state 262

state 236

    (63) fun_declaration -> FUNCTION ID LPAREN params RPAREN .
    (64) fun_declaration -> FUNCTION ID LPAREN params RPAREN . compount_stmt
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

    IDVAR           reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    TIMESTIMES      reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    AMPERSANT       reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FUNCTION        reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRIVATE         reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PUBLIC          reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PROTECTED       reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    REQUIRE         reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    INCLUDE         reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLASS           reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    IF              reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SWITCH          reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CASE            reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DEFAULT         reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FOR             reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    WHILE           reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DO              reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ID              reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ECHO            reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLOSETAG        reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DOT             reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SEMI            reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 63 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 138

    compount_stmt                  shift and go to state 263

state 237

    (150) typeclass -> ID IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 264


state 238

    (23) header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 23 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)


state 239

    (24) header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 24 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)


state 240

    (26) class_declaration -> CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 26 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)


state 241

    (28) attributes -> attribute attributes .

    RBLOCK          reduce using rule 28 (attributes -> attribute attributes .)


state 242

    (29) attribute -> attribute area . var_declaration
    (31) attribute -> attribute area . fun_declaration
    (30) attribute -> area . var_declaration
    (32) attribute -> area . fun_declaration
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (63) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (64) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 84
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 19
    ID              shift and go to state 82

    var_declaration                shift and go to state 265
    fun_declaration                shift and go to state 266
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 243

    (30) attribute -> area var_declaration .

    PRIVATE         reduce using rule 30 (attribute -> area var_declaration .)
    PUBLIC          reduce using rule 30 (attribute -> area var_declaration .)
    PROTECTED       reduce using rule 30 (attribute -> area var_declaration .)
    FUNCTION        reduce using rule 30 (attribute -> area var_declaration .)
    RBLOCK          reduce using rule 30 (attribute -> area var_declaration .)


state 244

    (32) attribute -> area fun_declaration .

    PRIVATE         reduce using rule 32 (attribute -> area fun_declaration .)
    PUBLIC          reduce using rule 32 (attribute -> area fun_declaration .)
    PROTECTED       reduce using rule 32 (attribute -> area fun_declaration .)
    FUNCTION        reduce using rule 32 (attribute -> area fun_declaration .)
    RBLOCK          reduce using rule 32 (attribute -> area fun_declaration .)


state 245

    (87) selection_stmt -> IF LPAREN expression RPAREN statement .
    (88) selection_stmt -> IF LPAREN expression RPAREN statement . selection
    (89) selection -> . ELSE statement
    (90) selection -> . ELSEIF statement selection

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    IDVAR           reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUM             reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 268
    ELSEIF          shift and go to state 269

  ! ELSE            [ reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 87 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]

    selection                      shift and go to state 267

state 246

    (91) selection_stmt -> SWITCH LPAREN var RPAREN statement .

    IDVAR           reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TIMESTIMES      reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    AMPERSANT       reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FUNCTION        reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRIVATE         reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PUBLIC          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PROTECTED       reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    REQUIRE         reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    INCLUDE         reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLASS           reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    IF              reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SWITCH          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CASE            reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DEFAULT         reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FOR             reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    WHILE           reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DO              reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ID              reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ECHO            reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLOSETAG        reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    BREAK           reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SEMI            reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSE            reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSEIF          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LPAREN          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    NUM             reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    STRING          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TRUE            reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FALSE           reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RBLOCK          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LBLOCK          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RETURN          reduce using rule 91 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)


state 247

    (92) selection_stmt -> CASE NUM COLON statement BREAK . SEMI

    SEMI            shift and go to state 270


state 248

    (93) selection_stmt -> CASE STRING COLON statement BREAK . SEMI

    SEMI            shift and go to state 271


state 249

    (94) selection_stmt -> DEFAULT COLON statement BREAK SEMI .

    IDVAR           reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLASS           reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    IF              reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CASE            reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FOR             reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    WHILE           reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DO              reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ID              reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ECHO            reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    BREAK           reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SEMI            reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSE            reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    NUM             reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    STRING          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TRUE            reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FALSE           reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RETURN          reduce using rule 94 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)


state 250

    (74) compount_stmt -> LBLOCK echo_stmt local_declarations . echo_stmt statement_list echo_stmt RBLOCK
    (75) local_declarations -> local_declarations . var_declaration
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (37) var_declaration -> . IDVAR SEMI var_declaration
    (38) var_declaration -> . IDVAR SEMI
    (39) var_declaration -> . TIMESTIMES IDVAR SEMI
    (40) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (41) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL NUM SEMI
    (43) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL STRING SEMI
    (45) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (46) var_declaration -> . assing_var IGUAL boolean SEMI
    (47) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (48) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (49) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (50) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (51) var_declaration -> . AMPERSANT IDVAR SEMI
    (52) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (53) var_declaration -> . fun_call SEMI
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 84
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    ECHO            reduce using rule 154 (empty -> .)
    LBLOCK          reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    SWITCH          reduce using rule 154 (empty -> .)
    CASE            reduce using rule 154 (empty -> .)
    DEFAULT         reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    CLASS           reduce using rule 154 (empty -> .)
    PRIVATE         reduce using rule 154 (empty -> .)
    PUBLIC          reduce using rule 154 (empty -> .)
    PROTECTED       reduce using rule 154 (empty -> .)
    LPAREN          reduce using rule 154 (empty -> .)
    NUM             reduce using rule 154 (empty -> .)
    STRING          reduce using rule 154 (empty -> .)
    TRUE            reduce using rule 154 (empty -> .)
    FALSE           reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82

  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! IDVAR           [ reduce using rule 154 (empty -> .) ]

    echo_stmt                      shift and go to state 272
    var_declaration                shift and go to state 273
    empty                          shift and go to state 27
    assing_var                     shift and go to state 16
    fun_call                       shift and go to state 18
    var                            shift and go to state 30

state 251

    (76) local_declarations -> empty .

    IDVAR           reduce using rule 76 (local_declarations -> empty .)
    TIMESTIMES      reduce using rule 76 (local_declarations -> empty .)
    AMPERSANT       reduce using rule 76 (local_declarations -> empty .)
    ID              reduce using rule 76 (local_declarations -> empty .)
    ECHO            reduce using rule 76 (local_declarations -> empty .)
    LBLOCK          reduce using rule 76 (local_declarations -> empty .)
    IF              reduce using rule 76 (local_declarations -> empty .)
    SWITCH          reduce using rule 76 (local_declarations -> empty .)
    CASE            reduce using rule 76 (local_declarations -> empty .)
    DEFAULT         reduce using rule 76 (local_declarations -> empty .)
    FOR             reduce using rule 76 (local_declarations -> empty .)
    WHILE           reduce using rule 76 (local_declarations -> empty .)
    DO              reduce using rule 76 (local_declarations -> empty .)
    RETURN          reduce using rule 76 (local_declarations -> empty .)
    CLASS           reduce using rule 76 (local_declarations -> empty .)
    PRIVATE         reduce using rule 76 (local_declarations -> empty .)
    PUBLIC          reduce using rule 76 (local_declarations -> empty .)
    PROTECTED       reduce using rule 76 (local_declarations -> empty .)
    LPAREN          reduce using rule 76 (local_declarations -> empty .)
    NUM             reduce using rule 76 (local_declarations -> empty .)
    STRING          reduce using rule 76 (local_declarations -> empty .)
    TRUE            reduce using rule 76 (local_declarations -> empty .)
    FALSE           reduce using rule 76 (local_declarations -> empty .)
    RBLOCK          reduce using rule 76 (local_declarations -> empty .)


state 252

    (99) return_stmt -> RETURN expression SEMI .

    BREAK           reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    SEMI            reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    ELSE            reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    ELSEIF          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    IDVAR           reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    TIMESTIMES      reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    AMPERSANT       reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    PRIVATE         reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    PUBLIC          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    PROTECTED       reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    REQUIRE         reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    INCLUDE         reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    CLASS           reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    IF              reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    SWITCH          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    CASE            reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    FOR             reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    WHILE           reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    DO              reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    ID              reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    ECHO            reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    CLOSETAG        reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    LPAREN          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    NUM             reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    STRING          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    TRUE            reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    FALSE           reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    RBLOCK          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    LBLOCK          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)
    RETURN          reduce using rule 99 (return_stmt -> RETURN expression SEMI .)


state 253

    (95) iteration_stmt -> FOR LPAREN var_declaration expression SEMI . additive_expression RPAREN statement
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    IDVAR           shift and go to state 225
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    additive_expression            shift and go to state 274
    term                           shift and go to state 95
    fun_call                       shift and go to state 106
    factor                         shift and go to state 96
    assing_var                     shift and go to state 83
    var                            shift and go to state 107
    boolean                        shift and go to state 99

state 254

    (96) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    IDVAR           reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 96 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 255

    (97) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 275


state 256

    (25) class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 25 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)


state 257

    (152) constructor -> ID LPAREN RPAREN .

    SEMI            reduce using rule 152 (constructor -> ID LPAREN RPAREN .)


state 258

    (153) constructor -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 276


state 259

    (142) factor -> IDVAR LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    TIMES           reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    DIVIDE          reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    LESS            reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    GREATER         reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    DEQUAL          reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    DISTINT         reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    ISEQUAL         reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    IS_IDENTICAL    reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    SR_EQUAL        reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    SL_EQUAL        reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    AND_EQUAL       reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    OR_EQUAL        reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    XOR_EQUAL       reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    CONCAT_EQUAL    reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    PLUS            reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    MINUS           reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    RBRACKET        reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    AND             reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    OR              reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    SEMI            reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    COMMA           reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)
    RPAREN          reduce using rule 142 (factor -> IDVAR LPAREN args RPAREN .)


state 260

    (146) args_list -> args_list COMMA . expression
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 277
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 261

    (102) expression -> assing_var EQUAL AMPERSANT IDVAR .

    RBRACKET        reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    AND             reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    OR              reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    RPAREN          reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    SEMI            reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    COMMA           reduce using rule 102 (expression -> assing_var EQUAL AMPERSANT IDVAR .)


state 262

    (50) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .

    IDVAR           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TIMESTIMES      reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    AMPERSANT       reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FUNCTION        reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRIVATE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PUBLIC          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PROTECTED       reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    REQUIRE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    INCLUDE         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLASS           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    IF              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SWITCH          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CASE            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DEFAULT         reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FOR             reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    WHILE           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DO              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ID              reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ECHO            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLOSETAG        reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LPAREN          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    NUM             reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    STRING          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TRUE            reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FALSE           reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RBLOCK          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LBLOCK          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RETURN          reduce using rule 50 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)


state 263

    (64) fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .

    IDVAR           reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    TIMESTIMES      reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    AMPERSANT       reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FUNCTION        reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRIVATE         reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PUBLIC          reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PROTECTED       reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    REQUIRE         reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    INCLUDE         reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLASS           reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    IF              reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SWITCH          reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CASE            reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DEFAULT         reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FOR             reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    WHILE           reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DO              reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ECHO            reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLOSETAG        reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DOT             reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SEMI            reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RBLOCK          reduce using rule 64 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)


state 264

    (150) typeclass -> ID IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 150 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)


state 265

    (29) attribute -> attribute area var_declaration .
    (30) attribute -> area var_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 29 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 29 (attribute -> attribute area var_declaration .)
    PRIVATE         reduce using rule 29 (attribute -> attribute area var_declaration .)
    PUBLIC          reduce using rule 29 (attribute -> attribute area var_declaration .)
    PROTECTED       reduce using rule 29 (attribute -> attribute area var_declaration .)
    FUNCTION        reduce using rule 29 (attribute -> attribute area var_declaration .)
    RBLOCK          reduce using rule 29 (attribute -> attribute area var_declaration .)

  ! PRIVATE         [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! PUBLIC          [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! PROTECTED       [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! FUNCTION        [ reduce using rule 30 (attribute -> area var_declaration .) ]
  ! RBLOCK          [ reduce using rule 30 (attribute -> area var_declaration .) ]


state 266

    (31) attribute -> attribute area fun_declaration .
    (32) attribute -> area fun_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 31 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 31 (attribute -> attribute area fun_declaration .)
    PRIVATE         reduce using rule 31 (attribute -> attribute area fun_declaration .)
    PUBLIC          reduce using rule 31 (attribute -> attribute area fun_declaration .)
    PROTECTED       reduce using rule 31 (attribute -> attribute area fun_declaration .)
    FUNCTION        reduce using rule 31 (attribute -> attribute area fun_declaration .)
    RBLOCK          reduce using rule 31 (attribute -> attribute area fun_declaration .)

  ! PRIVATE         [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! PUBLIC          [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! PROTECTED       [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! FUNCTION        [ reduce using rule 32 (attribute -> area fun_declaration .) ]
  ! RBLOCK          [ reduce using rule 32 (attribute -> area fun_declaration .) ]


state 267

    (88) selection_stmt -> IF LPAREN expression RPAREN statement selection .

    IDVAR           reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TIMESTIMES      reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    AMPERSANT       reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FUNCTION        reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRIVATE         reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PUBLIC          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PROTECTED       reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    REQUIRE         reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    INCLUDE         reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLASS           reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    IF              reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SWITCH          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CASE            reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DEFAULT         reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FOR             reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    WHILE           reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DO              reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ID              reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ECHO            reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLOSETAG        reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    BREAK           reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SEMI            reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSE            reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSEIF          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LPAREN          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    NUM             reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    STRING          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TRUE            reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FALSE           reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RBLOCK          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LBLOCK          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RETURN          reduce using rule 88 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)


state 268

    (89) selection -> ELSE . statement
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    FUNCTION        reduce using rule 154 (empty -> .)
    REQUIRE         reduce using rule 154 (empty -> .)
    INCLUDE         reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]

    statement                      shift and go to state 278
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 269

    (90) selection -> ELSEIF . statement selection
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    statement                      shift and go to state 279
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 270

    (92) selection_stmt -> CASE NUM COLON statement BREAK SEMI .

    IDVAR           reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLASS           reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    IF              reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CASE            reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FOR             reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    WHILE           reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DO              reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ID              reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ECHO            reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    BREAK           reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SEMI            reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSE            reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    NUM             reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    STRING          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TRUE            reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FALSE           reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RETURN          reduce using rule 92 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)


state 271

    (93) selection_stmt -> CASE STRING COLON statement BREAK SEMI .

    IDVAR           reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLASS           reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    IF              reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CASE            reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FOR             reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    WHILE           reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DO              reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ID              reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ECHO            reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    BREAK           reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SEMI            reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSE            reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    NUM             reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    STRING          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TRUE            reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FALSE           reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RETURN          reduce using rule 93 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)


state 272

    (74) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt . statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (77) statement_list -> . statement_list statement
    (78) statement_list -> . empty
    (154) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 40
    LBLOCK          reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    SWITCH          reduce using rule 154 (empty -> .)
    CASE            reduce using rule 154 (empty -> .)
    DEFAULT         reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    DO              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    CLASS           reduce using rule 154 (empty -> .)
    PRIVATE         reduce using rule 154 (empty -> .)
    PUBLIC          reduce using rule 154 (empty -> .)
    PROTECTED       reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    IDVAR           reduce using rule 154 (empty -> .)
    LPAREN          reduce using rule 154 (empty -> .)
    NUM             reduce using rule 154 (empty -> .)
    STRING          reduce using rule 154 (empty -> .)
    TRUE            reduce using rule 154 (empty -> .)
    FALSE           reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)

  ! ECHO            [ reduce using rule 154 (empty -> .) ]

    statement_list                 shift and go to state 280
    empty                          shift and go to state 281

state 273

    (75) local_declarations -> local_declarations var_declaration .

    IDVAR           reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    TIMESTIMES      reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    AMPERSANT       reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    ID              reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    CLASS           reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    PUBLIC          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    PROTECTED       reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 75 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 75 (local_declarations -> local_declarations var_declaration .)


state 274

    (95) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression . RPAREN statement
    (126) additive_expression -> additive_expression . addop term
    (131) addop -> . PLUS
    (132) addop -> . MINUS

    RPAREN          shift and go to state 282
    PLUS            shift and go to state 171
    MINUS           shift and go to state 172

    addop                          shift and go to state 155

state 275

    (97) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 283


state 276

    (153) constructor -> ID LPAREN args RPAREN .

    SEMI            reduce using rule 153 (constructor -> ID LPAREN args RPAREN .)


state 277

    (146) args_list -> args_list COMMA expression .
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    COMMA           reduce using rule 146 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 146 (args_list -> args_list COMMA expression .)
    AND             shift and go to state 151
    OR              shift and go to state 152


state 278

    (89) selection -> ELSE statement .

    ELSE            reduce using rule 89 (selection -> ELSE statement .)
    ELSEIF          reduce using rule 89 (selection -> ELSE statement .)
    IDVAR           reduce using rule 89 (selection -> ELSE statement .)
    TIMESTIMES      reduce using rule 89 (selection -> ELSE statement .)
    AMPERSANT       reduce using rule 89 (selection -> ELSE statement .)
    FUNCTION        reduce using rule 89 (selection -> ELSE statement .)
    PRIVATE         reduce using rule 89 (selection -> ELSE statement .)
    PUBLIC          reduce using rule 89 (selection -> ELSE statement .)
    PROTECTED       reduce using rule 89 (selection -> ELSE statement .)
    REQUIRE         reduce using rule 89 (selection -> ELSE statement .)
    INCLUDE         reduce using rule 89 (selection -> ELSE statement .)
    CLASS           reduce using rule 89 (selection -> ELSE statement .)
    IF              reduce using rule 89 (selection -> ELSE statement .)
    SWITCH          reduce using rule 89 (selection -> ELSE statement .)
    CASE            reduce using rule 89 (selection -> ELSE statement .)
    DEFAULT         reduce using rule 89 (selection -> ELSE statement .)
    FOR             reduce using rule 89 (selection -> ELSE statement .)
    WHILE           reduce using rule 89 (selection -> ELSE statement .)
    DO              reduce using rule 89 (selection -> ELSE statement .)
    ID              reduce using rule 89 (selection -> ELSE statement .)
    ECHO            reduce using rule 89 (selection -> ELSE statement .)
    CLOSETAG        reduce using rule 89 (selection -> ELSE statement .)
    BREAK           reduce using rule 89 (selection -> ELSE statement .)
    SEMI            reduce using rule 89 (selection -> ELSE statement .)
    LPAREN          reduce using rule 89 (selection -> ELSE statement .)
    NUM             reduce using rule 89 (selection -> ELSE statement .)
    STRING          reduce using rule 89 (selection -> ELSE statement .)
    TRUE            reduce using rule 89 (selection -> ELSE statement .)
    FALSE           reduce using rule 89 (selection -> ELSE statement .)
    RBLOCK          reduce using rule 89 (selection -> ELSE statement .)
    LBLOCK          reduce using rule 89 (selection -> ELSE statement .)
    RETURN          reduce using rule 89 (selection -> ELSE statement .)


state 279

    (90) selection -> ELSEIF statement . selection
    (89) selection -> . ELSE statement
    (90) selection -> . ELSEIF statement selection

    ELSE            shift and go to state 268
    ELSEIF          shift and go to state 269

    selection                      shift and go to state 284

state 280

    (74) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list . echo_stmt RBLOCK
    (77) statement_list -> statement_list . statement
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (154) empty -> .
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBLOCK          reduce using rule 154 (empty -> .)
    ECHO            reduce using rule 154 (empty -> .)
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]

    echo_stmt                      shift and go to state 285
    statement                      shift and go to state 286
    empty                          shift and go to state 27
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    expression                     shift and go to state 137
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    area                           shift and go to state 140
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 281

    (78) statement_list -> empty .

    LBLOCK          reduce using rule 78 (statement_list -> empty .)
    IF              reduce using rule 78 (statement_list -> empty .)
    SWITCH          reduce using rule 78 (statement_list -> empty .)
    CASE            reduce using rule 78 (statement_list -> empty .)
    DEFAULT         reduce using rule 78 (statement_list -> empty .)
    FOR             reduce using rule 78 (statement_list -> empty .)
    WHILE           reduce using rule 78 (statement_list -> empty .)
    DO              reduce using rule 78 (statement_list -> empty .)
    RETURN          reduce using rule 78 (statement_list -> empty .)
    CLASS           reduce using rule 78 (statement_list -> empty .)
    PRIVATE         reduce using rule 78 (statement_list -> empty .)
    PUBLIC          reduce using rule 78 (statement_list -> empty .)
    PROTECTED       reduce using rule 78 (statement_list -> empty .)
    ID              reduce using rule 78 (statement_list -> empty .)
    IDVAR           reduce using rule 78 (statement_list -> empty .)
    LPAREN          reduce using rule 78 (statement_list -> empty .)
    NUM             reduce using rule 78 (statement_list -> empty .)
    STRING          reduce using rule 78 (statement_list -> empty .)
    TRUE            reduce using rule 78 (statement_list -> empty .)
    FALSE           reduce using rule 78 (statement_list -> empty .)
    RBLOCK          reduce using rule 78 (statement_list -> empty .)
    ECHO            reduce using rule 78 (statement_list -> empty .)


state 282

    (95) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN . statement
    (79) statement -> . expression_stmt
    (80) statement -> . compount_stmt
    (81) statement -> . selection_stmt
    (82) statement -> . iteration_stmt
    (83) statement -> . return_stmt
    (84) statement -> . class_declaration
    (85) statement -> . echo_stmt
    (86) expression_stmt -> . expression SEMI
    (74) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (87) selection_stmt -> . IF LPAREN expression RPAREN statement
    (88) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (91) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (92) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (93) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (94) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (95) iteration_stmt -> . FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement
    (96) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (97) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (98) return_stmt -> . RETURN SEMI
    (99) return_stmt -> . RETURN expression SEMI
    (25) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (26) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO echo_params SEMI
    (14) echo_stmt -> . empty
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (34) area -> . PRIVATE
    (35) area -> . PUBLIC
    (36) area -> . PROTECTED
    (154) empty -> .
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 138
    IF              shift and go to state 28
    SWITCH          shift and go to state 29
    CASE            shift and go to state 31
    DEFAULT         shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    DO              shift and go to state 35
    RETURN          shift and go to state 139
    CLASS           shift and go to state 26
    PRIVATE         shift and go to state 21
    PUBLIC          shift and go to state 22
    PROTECTED       shift and go to state 23
    ECHO            reduce using rule 154 (empty -> .)
    ELSE            reduce using rule 154 (empty -> .)
    ELSEIF          reduce using rule 154 (empty -> .)
    TIMESTIMES      reduce using rule 154 (empty -> .)
    AMPERSANT       reduce using rule 154 (empty -> .)
    FUNCTION        reduce using rule 154 (empty -> .)
    REQUIRE         reduce using rule 154 (empty -> .)
    INCLUDE         reduce using rule 154 (empty -> .)
    CLOSETAG        reduce using rule 154 (empty -> .)
    BREAK           reduce using rule 154 (empty -> .)
    SEMI            reduce using rule 154 (empty -> .)
    RBLOCK          reduce using rule 154 (empty -> .)
    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

  ! IDVAR           [ reduce using rule 154 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 154 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 154 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 154 (empty -> .) ]
  ! CLASS           [ reduce using rule 154 (empty -> .) ]
  ! IF              [ reduce using rule 154 (empty -> .) ]
  ! SWITCH          [ reduce using rule 154 (empty -> .) ]
  ! CASE            [ reduce using rule 154 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 154 (empty -> .) ]
  ! FOR             [ reduce using rule 154 (empty -> .) ]
  ! WHILE           [ reduce using rule 154 (empty -> .) ]
  ! DO              [ reduce using rule 154 (empty -> .) ]
  ! ID              [ reduce using rule 154 (empty -> .) ]
  ! LPAREN          [ reduce using rule 154 (empty -> .) ]
  ! NUM             [ reduce using rule 154 (empty -> .) ]
  ! STRING          [ reduce using rule 154 (empty -> .) ]
  ! TRUE            [ reduce using rule 154 (empty -> .) ]
  ! FALSE           [ reduce using rule 154 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 154 (empty -> .) ]
  ! RETURN          [ reduce using rule 154 (empty -> .) ]

    expression                     shift and go to state 137
    additive_expression            shift and go to state 93
    statement                      shift and go to state 287
    expression_stmt                shift and go to state 130
    compount_stmt                  shift and go to state 131
    selection_stmt                 shift and go to state 132
    iteration_stmt                 shift and go to state 133
    return_stmt                    shift and go to state 134
    class_declaration              shift and go to state 135
    echo_stmt                      shift and go to state 136
    var                            shift and go to state 92
    area                           shift and go to state 140
    empty                          shift and go to state 27
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 283

    (97) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN . expression RPAREN
    (100) expression -> . assing_var EQUAL expression
    (101) expression -> . simple_expression
    (102) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (103) expression -> . expression AND expression
    (104) expression -> . expression OR expression
    (105) expression -> . assing_var
    (106) expression -> . fun_call
    (54) assing_var -> . var
    (55) assing_var -> . var ARROW ID
    (109) simple_expression -> . additive_expression relop additive_expression
    (110) simple_expression -> . additive_expression
    (65) fun_call -> . ID LPAREN params RPAREN
    (66) fun_call -> . assing_var LPAREN params RPAREN
    (107) var -> . IDVAR
    (108) var -> . IDVAR LBRACKET expression RBRACKET
    (126) additive_expression -> . additive_expression addop term
    (127) additive_expression -> . term
    (128) additive_expression -> . term MINUSMINUS
    (129) additive_expression -> . term PLUSPLUS
    (130) additive_expression -> . fun_call
    (133) term -> . term mulop factor
    (134) term -> . factor
    (137) factor -> . LPAREN expression RPAREN
    (138) factor -> . var
    (139) factor -> . NUM
    (140) factor -> . STRING
    (141) factor -> . boolean
    (142) factor -> . IDVAR LPAREN args RPAREN
    (148) boolean -> . TRUE
    (149) boolean -> . FALSE

    ID              shift and go to state 82
    IDVAR           shift and go to state 87
    LPAREN          shift and go to state 94
    NUM             shift and go to state 97
    STRING          shift and go to state 98
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81

    expression                     shift and go to state 288
    assing_var                     shift and go to state 89
    simple_expression              shift and go to state 90
    fun_call                       shift and go to state 91
    var                            shift and go to state 92
    additive_expression            shift and go to state 93
    term                           shift and go to state 95
    factor                         shift and go to state 96
    boolean                        shift and go to state 99

state 284

    (90) selection -> ELSEIF statement selection .

    ELSE            reduce using rule 90 (selection -> ELSEIF statement selection .)
    ELSEIF          reduce using rule 90 (selection -> ELSEIF statement selection .)
    IDVAR           reduce using rule 90 (selection -> ELSEIF statement selection .)
    TIMESTIMES      reduce using rule 90 (selection -> ELSEIF statement selection .)
    AMPERSANT       reduce using rule 90 (selection -> ELSEIF statement selection .)
    FUNCTION        reduce using rule 90 (selection -> ELSEIF statement selection .)
    PRIVATE         reduce using rule 90 (selection -> ELSEIF statement selection .)
    PUBLIC          reduce using rule 90 (selection -> ELSEIF statement selection .)
    PROTECTED       reduce using rule 90 (selection -> ELSEIF statement selection .)
    REQUIRE         reduce using rule 90 (selection -> ELSEIF statement selection .)
    INCLUDE         reduce using rule 90 (selection -> ELSEIF statement selection .)
    CLASS           reduce using rule 90 (selection -> ELSEIF statement selection .)
    IF              reduce using rule 90 (selection -> ELSEIF statement selection .)
    SWITCH          reduce using rule 90 (selection -> ELSEIF statement selection .)
    CASE            reduce using rule 90 (selection -> ELSEIF statement selection .)
    DEFAULT         reduce using rule 90 (selection -> ELSEIF statement selection .)
    FOR             reduce using rule 90 (selection -> ELSEIF statement selection .)
    WHILE           reduce using rule 90 (selection -> ELSEIF statement selection .)
    DO              reduce using rule 90 (selection -> ELSEIF statement selection .)
    ID              reduce using rule 90 (selection -> ELSEIF statement selection .)
    ECHO            reduce using rule 90 (selection -> ELSEIF statement selection .)
    CLOSETAG        reduce using rule 90 (selection -> ELSEIF statement selection .)
    BREAK           reduce using rule 90 (selection -> ELSEIF statement selection .)
    SEMI            reduce using rule 90 (selection -> ELSEIF statement selection .)
    LPAREN          reduce using rule 90 (selection -> ELSEIF statement selection .)
    NUM             reduce using rule 90 (selection -> ELSEIF statement selection .)
    STRING          reduce using rule 90 (selection -> ELSEIF statement selection .)
    TRUE            reduce using rule 90 (selection -> ELSEIF statement selection .)
    FALSE           reduce using rule 90 (selection -> ELSEIF statement selection .)
    RBLOCK          reduce using rule 90 (selection -> ELSEIF statement selection .)
    LBLOCK          reduce using rule 90 (selection -> ELSEIF statement selection .)
    RETURN          reduce using rule 90 (selection -> ELSEIF statement selection .)


state 285

    (74) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt . RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO echo_params SEMI
    (85) statement -> echo_stmt .

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
    RBLOCK          shift and go to state 289
    ECHO            shift and go to state 40
    LBLOCK          reduce using rule 85 (statement -> echo_stmt .)
    IF              reduce using rule 85 (statement -> echo_stmt .)
    SWITCH          reduce using rule 85 (statement -> echo_stmt .)
    CASE            reduce using rule 85 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 85 (statement -> echo_stmt .)
    FOR             reduce using rule 85 (statement -> echo_stmt .)
    WHILE           reduce using rule 85 (statement -> echo_stmt .)
    DO              reduce using rule 85 (statement -> echo_stmt .)
    RETURN          reduce using rule 85 (statement -> echo_stmt .)
    CLASS           reduce using rule 85 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 85 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 85 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 85 (statement -> echo_stmt .)
    ID              reduce using rule 85 (statement -> echo_stmt .)
    IDVAR           reduce using rule 85 (statement -> echo_stmt .)
    LPAREN          reduce using rule 85 (statement -> echo_stmt .)
    NUM             reduce using rule 85 (statement -> echo_stmt .)
    STRING          reduce using rule 85 (statement -> echo_stmt .)
    TRUE            reduce using rule 85 (statement -> echo_stmt .)
    FALSE           reduce using rule 85 (statement -> echo_stmt .)

  ! RBLOCK          [ reduce using rule 85 (statement -> echo_stmt .) ]
  ! ECHO            [ reduce using rule 85 (statement -> echo_stmt .) ]


state 286

    (77) statement_list -> statement_list statement .

    LBLOCK          reduce using rule 77 (statement_list -> statement_list statement .)
    IF              reduce using rule 77 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 77 (statement_list -> statement_list statement .)
    CASE            reduce using rule 77 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 77 (statement_list -> statement_list statement .)
    FOR             reduce using rule 77 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 77 (statement_list -> statement_list statement .)
    DO              reduce using rule 77 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 77 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 77 (statement_list -> statement_list statement .)
    PRIVATE         reduce using rule 77 (statement_list -> statement_list statement .)
    PUBLIC          reduce using rule 77 (statement_list -> statement_list statement .)
    PROTECTED       reduce using rule 77 (statement_list -> statement_list statement .)
    ID              reduce using rule 77 (statement_list -> statement_list statement .)
    IDVAR           reduce using rule 77 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 77 (statement_list -> statement_list statement .)
    NUM             reduce using rule 77 (statement_list -> statement_list statement .)
    STRING          reduce using rule 77 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 77 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 77 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 77 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 77 (statement_list -> statement_list statement .)


state 287

    (95) iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .

    IDVAR           reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TIMESTIMES      reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    AMPERSANT       reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PRIVATE         reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PUBLIC          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    PROTECTED       reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    REQUIRE         reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    INCLUDE         reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLASS           reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    IF              reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SWITCH          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CASE            reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FOR             reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    WHILE           reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    DO              reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ID              reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ECHO            reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    CLOSETAG        reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    BREAK           reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    SEMI            reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSE            reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LPAREN          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    NUM             reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    STRING          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    TRUE            reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    FALSE           reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RBLOCK          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    LBLOCK          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)
    RETURN          reduce using rule 95 (iteration_stmt -> FOR LPAREN var_declaration expression SEMI additive_expression RPAREN statement .)


state 288

    (97) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression . RPAREN
    (103) expression -> expression . AND expression
    (104) expression -> expression . OR expression

    RPAREN          shift and go to state 290
    AND             shift and go to state 151
    OR              shift and go to state 152


state 289

    (74) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .

    BREAK           reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SEMI            reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSE            reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSEIF          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IDVAR           reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TIMESTIMES      reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    AMPERSANT       reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FUNCTION        reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRIVATE         reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PUBLIC          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PROTECTED       reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    REQUIRE         reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    INCLUDE         reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLASS           reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IF              reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SWITCH          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CASE            reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DEFAULT         reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FOR             reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    WHILE           reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DO              reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ID              reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ECHO            reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLOSETAG        reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LPAREN          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    NUM             reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    STRING          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TRUE            reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FALSE           reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RBLOCK          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LBLOCK          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RETURN          reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DOT             reduce using rule 74 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)


state 290

    (97) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .

    IDVAR           reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TIMESTIMES      reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRIVATE         reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PUBLIC          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PROTECTED       reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    REQUIRE         reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    INCLUDE         reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLASS           reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SWITCH          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CASE            reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DEFAULT         reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ID              reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ECHO            reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLOSETAG        reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SEMI            reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSEIF          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    NUM             reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LBLOCK          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 97 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDVAR in state 2 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 2 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 2 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 4 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 4 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 4 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 4 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 4 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 4 resolved as shift
WARNING: shift/reduce conflict for CASE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 10 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 87 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 101 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 102 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 103 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 104 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 104 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 136 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 199 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 199 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 199 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 199 resolved as shift
WARNING: shift/reduce conflict for IF in state 199 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 199 resolved as shift
WARNING: shift/reduce conflict for CASE in state 199 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 199 resolved as shift
WARNING: shift/reduce conflict for FOR in state 199 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 199 resolved as shift
WARNING: shift/reduce conflict for DO in state 199 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 199 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 199 resolved as shift
WARNING: shift/reduce conflict for ID in state 199 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 199 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 199 resolved as shift
WARNING: shift/reduce conflict for NUM in state 199 resolved as shift
WARNING: shift/reduce conflict for STRING in state 199 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 199 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 199 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 200 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 200 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 200 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 200 resolved as shift
WARNING: shift/reduce conflict for IF in state 200 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 200 resolved as shift
WARNING: shift/reduce conflict for CASE in state 200 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 200 resolved as shift
WARNING: shift/reduce conflict for FOR in state 200 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 200 resolved as shift
WARNING: shift/reduce conflict for DO in state 200 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 200 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 200 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 200 resolved as shift
WARNING: shift/reduce conflict for NUM in state 200 resolved as shift
WARNING: shift/reduce conflict for STRING in state 200 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 200 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 200 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 205 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 209 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 209 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 209 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 209 resolved as shift
WARNING: shift/reduce conflict for CASE in state 209 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 209 resolved as shift
WARNING: shift/reduce conflict for FOR in state 209 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 209 resolved as shift
WARNING: shift/reduce conflict for DO in state 209 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 209 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 209 resolved as shift
WARNING: shift/reduce conflict for ID in state 209 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 209 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 209 resolved as shift
WARNING: shift/reduce conflict for NUM in state 209 resolved as shift
WARNING: shift/reduce conflict for STRING in state 209 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 209 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 209 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 214 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 225 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 245 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 245 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 250 resolved as shift
WARNING: shift/reduce conflict for ID in state 250 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 268 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 268 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 268 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 268 resolved as shift
WARNING: shift/reduce conflict for IF in state 268 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 268 resolved as shift
WARNING: shift/reduce conflict for CASE in state 268 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 268 resolved as shift
WARNING: shift/reduce conflict for FOR in state 268 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 268 resolved as shift
WARNING: shift/reduce conflict for DO in state 268 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 268 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 268 resolved as shift
WARNING: shift/reduce conflict for ID in state 268 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 268 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 268 resolved as shift
WARNING: shift/reduce conflict for NUM in state 268 resolved as shift
WARNING: shift/reduce conflict for STRING in state 268 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 268 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 268 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 272 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 280 resolved as shift
WARNING: shift/reduce conflict for IF in state 280 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 280 resolved as shift
WARNING: shift/reduce conflict for CASE in state 280 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 280 resolved as shift
WARNING: shift/reduce conflict for FOR in state 280 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 280 resolved as shift
WARNING: shift/reduce conflict for DO in state 280 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 280 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 280 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 280 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 280 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 280 resolved as shift
WARNING: shift/reduce conflict for ID in state 280 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 280 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 280 resolved as shift
WARNING: shift/reduce conflict for NUM in state 280 resolved as shift
WARNING: shift/reduce conflict for STRING in state 280 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 280 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 280 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 282 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 282 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 282 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 282 resolved as shift
WARNING: shift/reduce conflict for IF in state 282 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 282 resolved as shift
WARNING: shift/reduce conflict for CASE in state 282 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 282 resolved as shift
WARNING: shift/reduce conflict for FOR in state 282 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 282 resolved as shift
WARNING: shift/reduce conflict for DO in state 282 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 282 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 282 resolved as shift
WARNING: shift/reduce conflict for ID in state 282 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 282 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 282 resolved as shift
WARNING: shift/reduce conflict for NUM in state 282 resolved as shift
WARNING: shift/reduce conflict for STRING in state 282 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 282 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 282 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 285 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 285 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (declaration_list -> declaration)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 91 resolved using rule (expression -> fun_call)
WARNING: rejected rule (additive_expression -> fun_call) in state 91
WARNING: reduce/reduce conflict in state 92 resolved using rule (assing_var -> var)
WARNING: rejected rule (factor -> var) in state 92
WARNING: reduce/reduce conflict in state 112 resolved using rule (param -> IDVAR)
WARNING: rejected rule (var -> IDVAR) in state 112
WARNING: reduce/reduce conflict in state 265 resolved using rule (attribute -> attribute area var_declaration)
WARNING: rejected rule (attribute -> area var_declaration) in state 265
WARNING: reduce/reduce conflict in state 266 resolved using rule (attribute -> attribute area fun_declaration)
WARNING: rejected rule (attribute -> area fun_declaration) in state 266
