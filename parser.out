Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    APOSTROPHE
    ARRAY
    AS
    CALLABLE
    CATCH
    CLONE
    CLOSETAGAL
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DECLARE
    DIE
    DOT
    DOT_DOT
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINALLY
    FOREACH
    GLOBAL
    GOTO
    HASHTAG
    IMPLEMENTS
    INCLUDE_ONCE
    INSTANCEOF
    INSTEADOF
    INTERFACE
    ISSET
    LIST
    MINUSEQUAL
    NAMESPACE
    PLUSEQUAL
    PRINT
    QUOTES
    REQUIRE_ONCE
    STATIC
    THROW
    TRAIT
    TRY
    UNSET
    USE
    VAR
    XOR
    __HALT_COMPILER

Grammar

Rule 0     S' -> program
Rule 1     program -> OPENTAG declaration_list CLOSETAG
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration declaration_list
Rule 4     declaration -> var_declaration
Rule 5     declaration -> fun_declaration
Rule 6     declaration -> area fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     declaration -> echo_stmt
Rule 10    declaration -> selection_stmt
Rule 11    declaration -> iteration_stmt
Rule 12    declaration -> typeclass
Rule 13    echo_stmt -> echo_stmt ECHO STRING SEMI
Rule 14    echo_stmt -> echo_stmt ECHO IDVAR SEMI
Rule 15    echo_stmt -> empty
Rule 16    echo_stmt -> echo_stmt ECHO NUM SEMI
Rule 17    echo_stmt -> echo_stmt ECHO boolean SEMI
Rule 18    echo_stmt -> echo_stmt ECHO fun_declaration SEMI
Rule 19    header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI
Rule 20    header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI
Rule 21    class_declaration -> area CLASS ID LBLOCK attributes RBLOCK
Rule 22    class_declaration -> CLASS ID LBLOCK attributes RBLOCK
Rule 23    attributes -> attribute
Rule 24    attributes -> attribute attributes
Rule 25    attribute -> attribute area var_declaration
Rule 26    attribute -> area var_declaration
Rule 27    attribute -> attribute area fun_declaration
Rule 28    attribute -> area fun_declaration
Rule 29    attribute -> fun_declaration
Rule 30    area -> PRIVATE
Rule 31    area -> PUBLIC
Rule 32    area -> PROTECTED
Rule 33    var_declaration -> IDVAR SEMI var_declaration
Rule 34    var_declaration -> IDVAR SEMI
Rule 35    var_declaration -> TIMESTIMES IDVAR SEMI
Rule 36    var_declaration -> TIMESTIMES IDVAR SEMI var_declaration
Rule 37    var_declaration -> assing_var IGUAL NUM SEMI var_declaration
Rule 38    var_declaration -> assing_var IGUAL NUM SEMI
Rule 39    var_declaration -> assing_var IGUAL STRING SEMI var_declaration
Rule 40    var_declaration -> assing_var IGUAL STRING SEMI
Rule 41    var_declaration -> assing_var IGUAL boolean SEMI var_declaration
Rule 42    var_declaration -> assing_var IGUAL boolean SEMI
Rule 43    var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration
Rule 44    var_declaration -> assing_var IGUAL IDVAR SEMI
Rule 45    var_declaration -> AMPERSANT IDVAR SEMI var_declaration
Rule 46    var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
Rule 47    var_declaration -> AMPERSANT IDVAR SEMI
Rule 48    var_declaration -> assing_var IGUAL simple_expression SEMI
Rule 49    assing_var -> var
Rule 50    assing_var -> var ARROW ID
Rule 51    IGUAL -> EQUAL
Rule 52    IGUAL -> MUL_EQUAL
Rule 53    IGUAL -> DIV_EQUAL
Rule 54    IGUAL -> CONCAT_EQUAL
Rule 55    IGUAL -> MOD_EQUAL
Rule 56    IGUAL -> PLUS_EQUAL
Rule 57    IGUAL -> MINUS_EQUAL
Rule 58    fun_declaration -> FUNCTION ID LPAREN params RPAREN
Rule 59    fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt
Rule 60    params -> param_list
Rule 61    params -> empty
Rule 62    param_list -> param_list COMMA param_list
Rule 63    param_list -> param
Rule 64    param -> IDVAR
Rule 65    param -> IDVAR LBRACKET RBRACKET
Rule 66    compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
Rule 67    local_declarations -> local_declarations var_declaration
Rule 68    local_declarations -> empty
Rule 69    statement_list -> statement_list statement
Rule 70    statement_list -> empty
Rule 71    statement -> expression_stmt
Rule 72    statement -> compount_stmt
Rule 73    statement -> selection_stmt
Rule 74    statement -> iteration_stmt
Rule 75    statement -> return_stmt
Rule 76    statement -> class_declaration
Rule 77    statement -> echo_stmt
Rule 78    expression_stmt -> expression SEMI
Rule 79    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 80    selection_stmt -> IF LPAREN expression RPAREN statement selection
Rule 81    selection -> ELSE statement
Rule 82    selection -> ELSEIF statement selection
Rule 83    selection_stmt -> SWITCH LPAREN var RPAREN statement
Rule 84    selection_stmt -> CASE NUM COLON statement BREAK SEMI
Rule 85    selection_stmt -> CASE STRING COLON statement BREAK SEMI
Rule 86    selection_stmt -> DEFAULT COLON statement BREAK SEMI
Rule 87    iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
Rule 88    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 89    iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
Rule 90    return_stmt -> RETURN SEMI
Rule 91    return_stmt -> RETURN expression SEMI
Rule 92    expression -> assing_var EQUAL expression
Rule 93    expression -> simple_expression
Rule 94    expression -> assing_var EQUAL AMPERSANT IDVAR
Rule 95    expression -> expression AND expression
Rule 96    expression -> expression OR expression
Rule 97    expression -> assing_var
Rule 98    var -> IDVAR
Rule 99    var -> IDVAR LBRACKET expression RBRACKET
Rule 100   simple_expression -> additive_expression relop additive_expression
Rule 101   simple_expression -> additive_expression
Rule 102   relop -> LESS
Rule 103   relop -> LESSEQUAL
Rule 104   relop -> GREATER
Rule 105   relop -> GREATEREQUAL
Rule 106   relop -> DEQUAL
Rule 107   relop -> DISTINT
Rule 108   relop -> ISEQUAL
Rule 109   relop -> IS_IDENTICAL
Rule 110   relop -> IS_NOT_IDENTICAL
Rule 111   relop -> SR_EQUAL
Rule 112   relop -> SL_EQUAL
Rule 113   relop -> AND_EQUAL
Rule 114   relop -> OR_EQUAL
Rule 115   relop -> XOR_EQUAL
Rule 116   relop -> CONCAT_EQUAL
Rule 117   additive_expression -> additive_expression addop term
Rule 118   additive_expression -> term
Rule 119   additive_expression -> term MINUSMINUS
Rule 120   additive_expression -> term PLUSPLUS
Rule 121   addop -> PLUS
Rule 122   addop -> MINUS
Rule 123   term -> term mulop factor
Rule 124   term -> factor
Rule 125   mulop -> TIMES
Rule 126   mulop -> DIVIDE
Rule 127   factor -> LPAREN expression RPAREN
Rule 128   factor -> var
Rule 129   factor -> NUM
Rule 130   factor -> STRING
Rule 131   factor -> boolean
Rule 132   factor -> IDVAR LPAREN args RPAREN
Rule 133   args -> args_list
Rule 134   args -> empty
Rule 135   args -> VOID
Rule 136   args_list -> args_list COMMA expression
Rule 137   args_list -> expression
Rule 138   boolean -> TRUE
Rule 139   boolean -> FALSE
Rule 140   typeclass -> ID IDVAR EQUAL NEW constructor SEMI
Rule 141   constructor -> ID LPAREN RPAREN
Rule 142   constructor -> ID LPAREN args RPAREN
Rule 143   empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 45 46 47 94
AND                  : 95
AND_EQUAL            : 113
APOSTROPHE           : 
ARRAY                : 
ARROW                : 50
AS                   : 
BREAK                : 84 85 86
CALLABLE             : 
CASE                 : 84 85
CATCH                : 
CLASS                : 21 22
CLONE                : 
CLOSETAG             : 1
CLOSETAGAL           : 
COLON                : 84 85 86
COMMA                : 62 136
COMMENTS             : 
COMMENTS_C99         : 
CONCAT_EQUAL         : 54 116
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 86
DEQUAL               : 106
DIE                  : 
DISTINT              : 107
DIVIDE               : 126
DIV_EQUAL            : 53
DO                   : 89
DOT                  : 
DOT_DOT              : 
ECHO                 : 13 14 16 17 18
ELSE                 : 81
ELSEIF               : 82
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUAL                : 51 92 94 140
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FALSE                : 139
FINALLY              : 
FOR                  : 87
FOREACH              : 
FUNCTION             : 58 59
GLOBAL               : 
GOTO                 : 
GREATER              : 104
GREATEREQUAL         : 105
HASHTAG              : 
ID                   : 21 22 50 58 59 140 141 142
IDVAR                : 14 33 34 35 36 43 44 45 46 46 47 64 65 94 98 99 132 140
IF                   : 79 80
IMPLEMENTS           : 
INCLUDE              : 20
INCLUDE_ONCE         : 
INSTANCEOF           : 
INSTEADOF            : 
INTERFACE            : 
ISEQUAL              : 108
ISSET                : 
IS_IDENTICAL         : 109
IS_NOT_IDENTICAL     : 110
LBLOCK               : 21 22 66 89
LBRACKET             : 65 99
LESS                 : 102
LESSEQUAL            : 103
LIST                 : 
LPAREN               : 19 20 58 59 79 80 83 87 88 89 127 132 141 142
MINUS                : 122
MINUSEQUAL           : 
MINUSMINUS           : 119
MINUS_EQUAL          : 57
MOD_EQUAL            : 55
MUL_EQUAL            : 52
NAMESPACE            : 
NEW                  : 140
NUM                  : 16 37 38 84 129
OPENTAG              : 1
OR                   : 96
OR_EQUAL             : 114
PLUS                 : 121
PLUSEQUAL            : 
PLUSPLUS             : 120
PLUS_EQUAL           : 56
PRINT                : 
PRIVATE              : 30
PROTECTED            : 32
PUBLIC               : 31
QUOTES               : 
RBLOCK               : 21 22 66 89
RBRACKET             : 65 99
REQUIRE              : 19
REQUIRE_ONCE         : 
RETURN               : 90 91
RPAREN               : 19 20 58 59 79 80 83 87 88 89 127 132 141 142
SEMI                 : 13 14 16 17 18 19 20 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 78 84 85 86 87 87 89 90 91 140
SL_EQUAL             : 112
SR_EQUAL             : 111
STATIC               : 
STRING               : 13 19 20 39 40 85 130
SWITCH               : 83
THROW                : 
TIMES                : 125
TIMESTIMES           : 35 36
TRAIT                : 
TRUE                 : 138
TRY                  : 
UNSET                : 
USE                  : 
VAR                  : 
VOID                 : 135
WHILE                : 88 89
XOR                  : 
XOR_EQUAL            : 115
__HALT_COMPILER      : 
error                : 

Nonterminals, with rules where they appear

IGUAL                : 37 38 39 40 41 42 43 44 46 48
additive_expression  : 87 100 100 101 117
addop                : 117
area                 : 6 21 25 26 27 28
args                 : 132 142
args_list            : 133 136
assing_var           : 37 38 39 40 41 42 43 44 48 92 94 97
attribute            : 23 24 25 27
attributes           : 21 22 24
boolean              : 17 41 42 131
class_declaration    : 8 76
compount_stmt        : 59 72
constructor          : 140
declaration          : 2 3
declaration_list     : 1 3
echo_stmt            : 9 13 14 16 17 18 66 66 66 77
empty                : 15 61 68 70 134
expression           : 78 79 80 87 88 89 91 92 95 95 96 96 99 127 136 137
expression_stmt      : 71
factor               : 123 124
fun_declaration      : 5 6 18 27 28 29
header_declaration   : 7
iteration_stmt       : 11 74
local_declarations   : 66 67
mulop                : 123
param                : 63
param_list           : 60 62 62
params               : 58 59
program              : 0
relop                : 100
return_stmt          : 75
selection            : 80 82
selection_stmt       : 10 46 73
simple_expression    : 48 93
statement            : 69 79 80 81 82 83 84 85 86 87 88 89
statement_list       : 66 69
term                 : 117 118 119 120 123
typeclass            : 12
var                  : 49 50 83 128
var_declaration      : 4 25 26 33 36 37 39 41 43 45 67 87

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OPENTAG declaration_list CLOSETAG

    OPENTAG         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OPENTAG . declaration_list CLOSETAG
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (19) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (20) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (140) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (143) empty -> .
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 18
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    REQUIRE         shift and go to state 23
    INCLUDE         shift and go to state 24
    CLASS           shift and go to state 25
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    ID              shift and go to state 19
    ECHO            reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 143 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 143 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 143 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    declaration_list               shift and go to state 3
    declaration                    shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    empty                          shift and go to state 26
    var                            shift and go to state 29

state 3

    (1) program -> OPENTAG declaration_list . CLOSETAG

    CLOSETAG        shift and go to state 35


state 4

    (2) declaration_list -> declaration .
    (3) declaration_list -> declaration . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration declaration_list
    (4) declaration -> . var_declaration
    (5) declaration -> . fun_declaration
    (6) declaration -> . area fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (9) declaration -> . echo_stmt
    (10) declaration -> . selection_stmt
    (11) declaration -> . iteration_stmt
    (12) declaration -> . typeclass
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (19) header_declaration -> . REQUIRE LPAREN STRING RPAREN SEMI
    (20) header_declaration -> . INCLUDE LPAREN STRING RPAREN SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (140) typeclass -> . ID IDVAR EQUAL NEW constructor SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (143) empty -> .
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for TIMESTIMES resolved as shift
  ! shift/reduce conflict for AMPERSANT resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for REQUIRE resolved as shift
  ! shift/reduce conflict for INCLUDE resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for CLOSETAG resolved using rule 2 (declaration_list -> declaration .)
    CLOSETAG        reduce using rule 2 (declaration_list -> declaration .)
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 18
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    REQUIRE         shift and go to state 23
    INCLUDE         shift and go to state 24
    CLASS           shift and go to state 25
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    ID              shift and go to state 19
    ECHO            reduce using rule 143 (empty -> .)

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! TIMESTIMES      [ reduce using rule 143 (empty -> .) ]
  ! AMPERSANT       [ reduce using rule 143 (empty -> .) ]
  ! FUNCTION        [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! REQUIRE         [ reduce using rule 143 (empty -> .) ]
  ! INCLUDE         [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]
  ! CLOSETAG        [ reduce using rule 143 (empty -> .) ]

    declaration                    shift and go to state 4
    declaration_list               shift and go to state 36
    var_declaration                shift and go to state 5
    fun_declaration                shift and go to state 6
    area                           shift and go to state 7
    header_declaration             shift and go to state 8
    class_declaration              shift and go to state 9
    echo_stmt                      shift and go to state 10
    selection_stmt                 shift and go to state 11
    iteration_stmt                 shift and go to state 12
    typeclass                      shift and go to state 13
    assing_var                     shift and go to state 16
    empty                          shift and go to state 26
    var                            shift and go to state 29

state 5

    (4) declaration -> var_declaration .

    IDVAR           reduce using rule 4 (declaration -> var_declaration .)
    TIMESTIMES      reduce using rule 4 (declaration -> var_declaration .)
    AMPERSANT       reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PROTECTED       reduce using rule 4 (declaration -> var_declaration .)
    REQUIRE         reduce using rule 4 (declaration -> var_declaration .)
    INCLUDE         reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    ID              reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    CLOSETAG        reduce using rule 4 (declaration -> var_declaration .)


state 6

    (5) declaration -> fun_declaration .

    IDVAR           reduce using rule 5 (declaration -> fun_declaration .)
    TIMESTIMES      reduce using rule 5 (declaration -> fun_declaration .)
    AMPERSANT       reduce using rule 5 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 5 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> fun_declaration .)
    PROTECTED       reduce using rule 5 (declaration -> fun_declaration .)
    REQUIRE         reduce using rule 5 (declaration -> fun_declaration .)
    INCLUDE         reduce using rule 5 (declaration -> fun_declaration .)
    CLASS           reduce using rule 5 (declaration -> fun_declaration .)
    IF              reduce using rule 5 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 5 (declaration -> fun_declaration .)
    CASE            reduce using rule 5 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> fun_declaration .)
    FOR             reduce using rule 5 (declaration -> fun_declaration .)
    WHILE           reduce using rule 5 (declaration -> fun_declaration .)
    DO              reduce using rule 5 (declaration -> fun_declaration .)
    ID              reduce using rule 5 (declaration -> fun_declaration .)
    ECHO            reduce using rule 5 (declaration -> fun_declaration .)
    CLOSETAG        reduce using rule 5 (declaration -> fun_declaration .)


state 7

    (6) declaration -> area . fun_declaration
    (21) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    CLASS           shift and go to state 38
    FUNCTION        shift and go to state 18

    fun_declaration                shift and go to state 37

state 8

    (7) declaration -> header_declaration .

    IDVAR           reduce using rule 7 (declaration -> header_declaration .)
    TIMESTIMES      reduce using rule 7 (declaration -> header_declaration .)
    AMPERSANT       reduce using rule 7 (declaration -> header_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PROTECTED       reduce using rule 7 (declaration -> header_declaration .)
    REQUIRE         reduce using rule 7 (declaration -> header_declaration .)
    INCLUDE         reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    ID              reduce using rule 7 (declaration -> header_declaration .)
    ECHO            reduce using rule 7 (declaration -> header_declaration .)
    CLOSETAG        reduce using rule 7 (declaration -> header_declaration .)


state 9

    (8) declaration -> class_declaration .

    IDVAR           reduce using rule 8 (declaration -> class_declaration .)
    TIMESTIMES      reduce using rule 8 (declaration -> class_declaration .)
    AMPERSANT       reduce using rule 8 (declaration -> class_declaration .)
    FUNCTION        reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PROTECTED       reduce using rule 8 (declaration -> class_declaration .)
    REQUIRE         reduce using rule 8 (declaration -> class_declaration .)
    INCLUDE         reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    ID              reduce using rule 8 (declaration -> class_declaration .)
    ECHO            reduce using rule 8 (declaration -> class_declaration .)
    CLOSETAG        reduce using rule 8 (declaration -> class_declaration .)


state 10

    (9) declaration -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    IDVAR           reduce using rule 9 (declaration -> echo_stmt .)
    TIMESTIMES      reduce using rule 9 (declaration -> echo_stmt .)
    AMPERSANT       reduce using rule 9 (declaration -> echo_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> echo_stmt .)
    PRIVATE         reduce using rule 9 (declaration -> echo_stmt .)
    PUBLIC          reduce using rule 9 (declaration -> echo_stmt .)
    PROTECTED       reduce using rule 9 (declaration -> echo_stmt .)
    REQUIRE         reduce using rule 9 (declaration -> echo_stmt .)
    INCLUDE         reduce using rule 9 (declaration -> echo_stmt .)
    CLASS           reduce using rule 9 (declaration -> echo_stmt .)
    IF              reduce using rule 9 (declaration -> echo_stmt .)
    SWITCH          reduce using rule 9 (declaration -> echo_stmt .)
    CASE            reduce using rule 9 (declaration -> echo_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> echo_stmt .)
    FOR             reduce using rule 9 (declaration -> echo_stmt .)
    WHILE           reduce using rule 9 (declaration -> echo_stmt .)
    DO              reduce using rule 9 (declaration -> echo_stmt .)
    ID              reduce using rule 9 (declaration -> echo_stmt .)
    CLOSETAG        reduce using rule 9 (declaration -> echo_stmt .)
    ECHO            shift and go to state 39

  ! ECHO            [ reduce using rule 9 (declaration -> echo_stmt .) ]


state 11

    (10) declaration -> selection_stmt .

    IDVAR           reduce using rule 10 (declaration -> selection_stmt .)
    TIMESTIMES      reduce using rule 10 (declaration -> selection_stmt .)
    AMPERSANT       reduce using rule 10 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 10 (declaration -> selection_stmt .)
    PRIVATE         reduce using rule 10 (declaration -> selection_stmt .)
    PUBLIC          reduce using rule 10 (declaration -> selection_stmt .)
    PROTECTED       reduce using rule 10 (declaration -> selection_stmt .)
    REQUIRE         reduce using rule 10 (declaration -> selection_stmt .)
    INCLUDE         reduce using rule 10 (declaration -> selection_stmt .)
    CLASS           reduce using rule 10 (declaration -> selection_stmt .)
    IF              reduce using rule 10 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 10 (declaration -> selection_stmt .)
    CASE            reduce using rule 10 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 10 (declaration -> selection_stmt .)
    FOR             reduce using rule 10 (declaration -> selection_stmt .)
    WHILE           reduce using rule 10 (declaration -> selection_stmt .)
    DO              reduce using rule 10 (declaration -> selection_stmt .)
    ID              reduce using rule 10 (declaration -> selection_stmt .)
    ECHO            reduce using rule 10 (declaration -> selection_stmt .)
    CLOSETAG        reduce using rule 10 (declaration -> selection_stmt .)


state 12

    (11) declaration -> iteration_stmt .

    IDVAR           reduce using rule 11 (declaration -> iteration_stmt .)
    TIMESTIMES      reduce using rule 11 (declaration -> iteration_stmt .)
    AMPERSANT       reduce using rule 11 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 11 (declaration -> iteration_stmt .)
    PRIVATE         reduce using rule 11 (declaration -> iteration_stmt .)
    PUBLIC          reduce using rule 11 (declaration -> iteration_stmt .)
    PROTECTED       reduce using rule 11 (declaration -> iteration_stmt .)
    REQUIRE         reduce using rule 11 (declaration -> iteration_stmt .)
    INCLUDE         reduce using rule 11 (declaration -> iteration_stmt .)
    CLASS           reduce using rule 11 (declaration -> iteration_stmt .)
    IF              reduce using rule 11 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 11 (declaration -> iteration_stmt .)
    CASE            reduce using rule 11 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 11 (declaration -> iteration_stmt .)
    FOR             reduce using rule 11 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 11 (declaration -> iteration_stmt .)
    DO              reduce using rule 11 (declaration -> iteration_stmt .)
    ID              reduce using rule 11 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 11 (declaration -> iteration_stmt .)
    CLOSETAG        reduce using rule 11 (declaration -> iteration_stmt .)


state 13

    (12) declaration -> typeclass .

    IDVAR           reduce using rule 12 (declaration -> typeclass .)
    TIMESTIMES      reduce using rule 12 (declaration -> typeclass .)
    AMPERSANT       reduce using rule 12 (declaration -> typeclass .)
    FUNCTION        reduce using rule 12 (declaration -> typeclass .)
    PRIVATE         reduce using rule 12 (declaration -> typeclass .)
    PUBLIC          reduce using rule 12 (declaration -> typeclass .)
    PROTECTED       reduce using rule 12 (declaration -> typeclass .)
    REQUIRE         reduce using rule 12 (declaration -> typeclass .)
    INCLUDE         reduce using rule 12 (declaration -> typeclass .)
    CLASS           reduce using rule 12 (declaration -> typeclass .)
    IF              reduce using rule 12 (declaration -> typeclass .)
    SWITCH          reduce using rule 12 (declaration -> typeclass .)
    CASE            reduce using rule 12 (declaration -> typeclass .)
    DEFAULT         reduce using rule 12 (declaration -> typeclass .)
    FOR             reduce using rule 12 (declaration -> typeclass .)
    WHILE           reduce using rule 12 (declaration -> typeclass .)
    DO              reduce using rule 12 (declaration -> typeclass .)
    ID              reduce using rule 12 (declaration -> typeclass .)
    ECHO            reduce using rule 12 (declaration -> typeclass .)
    CLOSETAG        reduce using rule 12 (declaration -> typeclass .)


state 14

    (33) var_declaration -> IDVAR . SEMI var_declaration
    (34) var_declaration -> IDVAR . SEMI
    (98) var -> IDVAR .
    (99) var -> IDVAR . LBRACKET expression RBRACKET

    SEMI            shift and go to state 40
    ARROW           reduce using rule 98 (var -> IDVAR .)
    EQUAL           reduce using rule 98 (var -> IDVAR .)
    MUL_EQUAL       reduce using rule 98 (var -> IDVAR .)
    DIV_EQUAL       reduce using rule 98 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 98 (var -> IDVAR .)
    MOD_EQUAL       reduce using rule 98 (var -> IDVAR .)
    PLUS_EQUAL      reduce using rule 98 (var -> IDVAR .)
    MINUS_EQUAL     reduce using rule 98 (var -> IDVAR .)
    LBRACKET        shift and go to state 41


state 15

    (35) var_declaration -> TIMESTIMES . IDVAR SEMI
    (36) var_declaration -> TIMESTIMES . IDVAR SEMI var_declaration

    IDVAR           shift and go to state 42


state 16

    (37) var_declaration -> assing_var . IGUAL NUM SEMI var_declaration
    (38) var_declaration -> assing_var . IGUAL NUM SEMI
    (39) var_declaration -> assing_var . IGUAL STRING SEMI var_declaration
    (40) var_declaration -> assing_var . IGUAL STRING SEMI
    (41) var_declaration -> assing_var . IGUAL boolean SEMI var_declaration
    (42) var_declaration -> assing_var . IGUAL boolean SEMI
    (43) var_declaration -> assing_var . IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> assing_var . IGUAL IDVAR SEMI
    (48) var_declaration -> assing_var . IGUAL simple_expression SEMI
    (51) IGUAL -> . EQUAL
    (52) IGUAL -> . MUL_EQUAL
    (53) IGUAL -> . DIV_EQUAL
    (54) IGUAL -> . CONCAT_EQUAL
    (55) IGUAL -> . MOD_EQUAL
    (56) IGUAL -> . PLUS_EQUAL
    (57) IGUAL -> . MINUS_EQUAL

    EQUAL           shift and go to state 44
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

    IGUAL                          shift and go to state 43

state 17

    (45) var_declaration -> AMPERSANT . IDVAR SEMI var_declaration
    (46) var_declaration -> AMPERSANT . IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> AMPERSANT . IDVAR SEMI

    IDVAR           shift and go to state 51


state 18

    (58) fun_declaration -> FUNCTION . ID LPAREN params RPAREN
    (59) fun_declaration -> FUNCTION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 52


state 19

    (140) typeclass -> ID . IDVAR EQUAL NEW constructor SEMI

    IDVAR           shift and go to state 53


state 20

    (30) area -> PRIVATE .

    CLASS           reduce using rule 30 (area -> PRIVATE .)
    FUNCTION        reduce using rule 30 (area -> PRIVATE .)
    IDVAR           reduce using rule 30 (area -> PRIVATE .)
    TIMESTIMES      reduce using rule 30 (area -> PRIVATE .)
    AMPERSANT       reduce using rule 30 (area -> PRIVATE .)


state 21

    (31) area -> PUBLIC .

    CLASS           reduce using rule 31 (area -> PUBLIC .)
    FUNCTION        reduce using rule 31 (area -> PUBLIC .)
    IDVAR           reduce using rule 31 (area -> PUBLIC .)
    TIMESTIMES      reduce using rule 31 (area -> PUBLIC .)
    AMPERSANT       reduce using rule 31 (area -> PUBLIC .)


state 22

    (32) area -> PROTECTED .

    CLASS           reduce using rule 32 (area -> PROTECTED .)
    FUNCTION        reduce using rule 32 (area -> PROTECTED .)
    IDVAR           reduce using rule 32 (area -> PROTECTED .)
    TIMESTIMES      reduce using rule 32 (area -> PROTECTED .)
    AMPERSANT       reduce using rule 32 (area -> PROTECTED .)


state 23

    (19) header_declaration -> REQUIRE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 54


state 24

    (20) header_declaration -> INCLUDE . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 55


state 25

    (22) class_declaration -> CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 56


state 26

    (15) echo_stmt -> empty .

    ECHO            reduce using rule 15 (echo_stmt -> empty .)
    IDVAR           reduce using rule 15 (echo_stmt -> empty .)
    TIMESTIMES      reduce using rule 15 (echo_stmt -> empty .)
    AMPERSANT       reduce using rule 15 (echo_stmt -> empty .)
    FUNCTION        reduce using rule 15 (echo_stmt -> empty .)
    PRIVATE         reduce using rule 15 (echo_stmt -> empty .)
    PUBLIC          reduce using rule 15 (echo_stmt -> empty .)
    PROTECTED       reduce using rule 15 (echo_stmt -> empty .)
    REQUIRE         reduce using rule 15 (echo_stmt -> empty .)
    INCLUDE         reduce using rule 15 (echo_stmt -> empty .)
    CLASS           reduce using rule 15 (echo_stmt -> empty .)
    IF              reduce using rule 15 (echo_stmt -> empty .)
    SWITCH          reduce using rule 15 (echo_stmt -> empty .)
    CASE            reduce using rule 15 (echo_stmt -> empty .)
    DEFAULT         reduce using rule 15 (echo_stmt -> empty .)
    FOR             reduce using rule 15 (echo_stmt -> empty .)
    WHILE           reduce using rule 15 (echo_stmt -> empty .)
    DO              reduce using rule 15 (echo_stmt -> empty .)
    ID              reduce using rule 15 (echo_stmt -> empty .)
    CLOSETAG        reduce using rule 15 (echo_stmt -> empty .)
    BREAK           reduce using rule 15 (echo_stmt -> empty .)
    SEMI            reduce using rule 15 (echo_stmt -> empty .)
    LBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    RETURN          reduce using rule 15 (echo_stmt -> empty .)
    LPAREN          reduce using rule 15 (echo_stmt -> empty .)
    NUM             reduce using rule 15 (echo_stmt -> empty .)
    STRING          reduce using rule 15 (echo_stmt -> empty .)
    TRUE            reduce using rule 15 (echo_stmt -> empty .)
    FALSE           reduce using rule 15 (echo_stmt -> empty .)
    RBLOCK          reduce using rule 15 (echo_stmt -> empty .)
    ELSE            reduce using rule 15 (echo_stmt -> empty .)
    ELSEIF          reduce using rule 15 (echo_stmt -> empty .)


state 27

    (79) selection_stmt -> IF . LPAREN expression RPAREN statement
    (80) selection_stmt -> IF . LPAREN expression RPAREN statement selection

    LPAREN          shift and go to state 57


state 28

    (83) selection_stmt -> SWITCH . LPAREN var RPAREN statement

    LPAREN          shift and go to state 58


state 29

    (49) assing_var -> var .
    (50) assing_var -> var . ARROW ID

    EQUAL           reduce using rule 49 (assing_var -> var .)
    MUL_EQUAL       reduce using rule 49 (assing_var -> var .)
    DIV_EQUAL       reduce using rule 49 (assing_var -> var .)
    CONCAT_EQUAL    reduce using rule 49 (assing_var -> var .)
    MOD_EQUAL       reduce using rule 49 (assing_var -> var .)
    PLUS_EQUAL      reduce using rule 49 (assing_var -> var .)
    MINUS_EQUAL     reduce using rule 49 (assing_var -> var .)
    ARROW           shift and go to state 59


state 30

    (84) selection_stmt -> CASE . NUM COLON statement BREAK SEMI
    (85) selection_stmt -> CASE . STRING COLON statement BREAK SEMI

    NUM             shift and go to state 60
    STRING          shift and go to state 61


state 31

    (86) selection_stmt -> DEFAULT . COLON statement BREAK SEMI

    COLON           shift and go to state 62


state 32

    (87) iteration_stmt -> FOR . LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement

    LPAREN          shift and go to state 63


state 33

    (88) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 64


state 34

    (89) iteration_stmt -> DO . LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN

    LBLOCK          shift and go to state 65


state 35

    (1) program -> OPENTAG declaration_list CLOSETAG .

    $end            reduce using rule 1 (program -> OPENTAG declaration_list CLOSETAG .)


state 36

    (3) declaration_list -> declaration declaration_list .

    CLOSETAG        reduce using rule 3 (declaration_list -> declaration declaration_list .)


state 37

    (6) declaration -> area fun_declaration .

    IDVAR           reduce using rule 6 (declaration -> area fun_declaration .)
    TIMESTIMES      reduce using rule 6 (declaration -> area fun_declaration .)
    AMPERSANT       reduce using rule 6 (declaration -> area fun_declaration .)
    FUNCTION        reduce using rule 6 (declaration -> area fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> area fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> area fun_declaration .)
    PROTECTED       reduce using rule 6 (declaration -> area fun_declaration .)
    REQUIRE         reduce using rule 6 (declaration -> area fun_declaration .)
    INCLUDE         reduce using rule 6 (declaration -> area fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> area fun_declaration .)
    IF              reduce using rule 6 (declaration -> area fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> area fun_declaration .)
    CASE            reduce using rule 6 (declaration -> area fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> area fun_declaration .)
    FOR             reduce using rule 6 (declaration -> area fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> area fun_declaration .)
    DO              reduce using rule 6 (declaration -> area fun_declaration .)
    ID              reduce using rule 6 (declaration -> area fun_declaration .)
    ECHO            reduce using rule 6 (declaration -> area fun_declaration .)
    CLOSETAG        reduce using rule 6 (declaration -> area fun_declaration .)


state 38

    (21) class_declaration -> area CLASS . ID LBLOCK attributes RBLOCK

    ID              shift and go to state 66


state 39

    (13) echo_stmt -> echo_stmt ECHO . STRING SEMI
    (14) echo_stmt -> echo_stmt ECHO . IDVAR SEMI
    (16) echo_stmt -> echo_stmt ECHO . NUM SEMI
    (17) echo_stmt -> echo_stmt ECHO . boolean SEMI
    (18) echo_stmt -> echo_stmt ECHO . fun_declaration SEMI
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    STRING          shift and go to state 67
    IDVAR           shift and go to state 68
    NUM             shift and go to state 69
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    FUNCTION        shift and go to state 18

    boolean                        shift and go to state 70
    fun_declaration                shift and go to state 71

state 40

    (33) var_declaration -> IDVAR SEMI . var_declaration
    (34) var_declaration -> IDVAR SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    TIMESTIMES      reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    AMPERSANT       reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    FUNCTION        reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    PRIVATE         reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    PUBLIC          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    PROTECTED       reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    REQUIRE         reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    INCLUDE         reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    CLASS           reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    IF              reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    SWITCH          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    CASE            reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    DEFAULT         reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    FOR             reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    WHILE           reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    DO              reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    ID              reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    ECHO            reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    CLOSETAG        reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    SEMI            reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    RBLOCK          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    LBLOCK          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    RETURN          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    LPAREN          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    NUM             reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    STRING          reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    TRUE            reduce using rule 34 (var_declaration -> IDVAR SEMI .)
    FALSE           reduce using rule 34 (var_declaration -> IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    var_declaration                shift and go to state 74
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 41

    (99) var -> IDVAR LBRACKET . expression RBRACKET
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 76
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 42

    (35) var_declaration -> TIMESTIMES IDVAR . SEMI
    (36) var_declaration -> TIMESTIMES IDVAR . SEMI var_declaration

    SEMI            shift and go to state 87


state 43

    (37) var_declaration -> assing_var IGUAL . NUM SEMI var_declaration
    (38) var_declaration -> assing_var IGUAL . NUM SEMI
    (39) var_declaration -> assing_var IGUAL . STRING SEMI var_declaration
    (40) var_declaration -> assing_var IGUAL . STRING SEMI
    (41) var_declaration -> assing_var IGUAL . boolean SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL . boolean SEMI
    (43) var_declaration -> assing_var IGUAL . IDVAR SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL . IDVAR SEMI
    (48) var_declaration -> assing_var IGUAL . simple_expression SEMI
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    NUM             shift and go to state 88
    STRING          shift and go to state 89
    IDVAR           shift and go to state 91
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    LPAREN          shift and go to state 83

    boolean                        shift and go to state 90
    simple_expression              shift and go to state 92
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    var                            shift and go to state 93

state 44

    (51) IGUAL -> EQUAL .

    NUM             reduce using rule 51 (IGUAL -> EQUAL .)
    STRING          reduce using rule 51 (IGUAL -> EQUAL .)
    IDVAR           reduce using rule 51 (IGUAL -> EQUAL .)
    TRUE            reduce using rule 51 (IGUAL -> EQUAL .)
    FALSE           reduce using rule 51 (IGUAL -> EQUAL .)
    LPAREN          reduce using rule 51 (IGUAL -> EQUAL .)


state 45

    (52) IGUAL -> MUL_EQUAL .

    NUM             reduce using rule 52 (IGUAL -> MUL_EQUAL .)
    STRING          reduce using rule 52 (IGUAL -> MUL_EQUAL .)
    IDVAR           reduce using rule 52 (IGUAL -> MUL_EQUAL .)
    TRUE            reduce using rule 52 (IGUAL -> MUL_EQUAL .)
    FALSE           reduce using rule 52 (IGUAL -> MUL_EQUAL .)
    LPAREN          reduce using rule 52 (IGUAL -> MUL_EQUAL .)


state 46

    (53) IGUAL -> DIV_EQUAL .

    NUM             reduce using rule 53 (IGUAL -> DIV_EQUAL .)
    STRING          reduce using rule 53 (IGUAL -> DIV_EQUAL .)
    IDVAR           reduce using rule 53 (IGUAL -> DIV_EQUAL .)
    TRUE            reduce using rule 53 (IGUAL -> DIV_EQUAL .)
    FALSE           reduce using rule 53 (IGUAL -> DIV_EQUAL .)
    LPAREN          reduce using rule 53 (IGUAL -> DIV_EQUAL .)


state 47

    (54) IGUAL -> CONCAT_EQUAL .

    NUM             reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)
    STRING          reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)
    TRUE            reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)
    FALSE           reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)
    LPAREN          reduce using rule 54 (IGUAL -> CONCAT_EQUAL .)


state 48

    (55) IGUAL -> MOD_EQUAL .

    NUM             reduce using rule 55 (IGUAL -> MOD_EQUAL .)
    STRING          reduce using rule 55 (IGUAL -> MOD_EQUAL .)
    IDVAR           reduce using rule 55 (IGUAL -> MOD_EQUAL .)
    TRUE            reduce using rule 55 (IGUAL -> MOD_EQUAL .)
    FALSE           reduce using rule 55 (IGUAL -> MOD_EQUAL .)
    LPAREN          reduce using rule 55 (IGUAL -> MOD_EQUAL .)


state 49

    (56) IGUAL -> PLUS_EQUAL .

    NUM             reduce using rule 56 (IGUAL -> PLUS_EQUAL .)
    STRING          reduce using rule 56 (IGUAL -> PLUS_EQUAL .)
    IDVAR           reduce using rule 56 (IGUAL -> PLUS_EQUAL .)
    TRUE            reduce using rule 56 (IGUAL -> PLUS_EQUAL .)
    FALSE           reduce using rule 56 (IGUAL -> PLUS_EQUAL .)
    LPAREN          reduce using rule 56 (IGUAL -> PLUS_EQUAL .)


state 50

    (57) IGUAL -> MINUS_EQUAL .

    NUM             reduce using rule 57 (IGUAL -> MINUS_EQUAL .)
    STRING          reduce using rule 57 (IGUAL -> MINUS_EQUAL .)
    IDVAR           reduce using rule 57 (IGUAL -> MINUS_EQUAL .)
    TRUE            reduce using rule 57 (IGUAL -> MINUS_EQUAL .)
    FALSE           reduce using rule 57 (IGUAL -> MINUS_EQUAL .)
    LPAREN          reduce using rule 57 (IGUAL -> MINUS_EQUAL .)


state 51

    (45) var_declaration -> AMPERSANT IDVAR . SEMI var_declaration
    (46) var_declaration -> AMPERSANT IDVAR . IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> AMPERSANT IDVAR . SEMI
    (51) IGUAL -> . EQUAL
    (52) IGUAL -> . MUL_EQUAL
    (53) IGUAL -> . DIV_EQUAL
    (54) IGUAL -> . CONCAT_EQUAL
    (55) IGUAL -> . MOD_EQUAL
    (56) IGUAL -> . PLUS_EQUAL
    (57) IGUAL -> . MINUS_EQUAL

    SEMI            shift and go to state 94
    EQUAL           shift and go to state 44
    MUL_EQUAL       shift and go to state 45
    DIV_EQUAL       shift and go to state 46
    CONCAT_EQUAL    shift and go to state 47
    MOD_EQUAL       shift and go to state 48
    PLUS_EQUAL      shift and go to state 49
    MINUS_EQUAL     shift and go to state 50

    IGUAL                          shift and go to state 95

state 52

    (58) fun_declaration -> FUNCTION ID . LPAREN params RPAREN
    (59) fun_declaration -> FUNCTION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 96


state 53

    (140) typeclass -> ID IDVAR . EQUAL NEW constructor SEMI

    EQUAL           shift and go to state 97


state 54

    (19) header_declaration -> REQUIRE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 98


state 55

    (20) header_declaration -> INCLUDE LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 99


state 56

    (22) class_declaration -> CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 100


state 57

    (79) selection_stmt -> IF LPAREN . expression RPAREN statement
    (80) selection_stmt -> IF LPAREN . expression RPAREN statement selection
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 101
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 58

    (83) selection_stmt -> SWITCH LPAREN . var RPAREN statement
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 103

    var                            shift and go to state 102

state 59

    (50) assing_var -> var ARROW . ID

    ID              shift and go to state 104


state 60

    (84) selection_stmt -> CASE NUM . COLON statement BREAK SEMI

    COLON           shift and go to state 105


state 61

    (85) selection_stmt -> CASE STRING . COLON statement BREAK SEMI

    COLON           shift and go to state 106


state 62

    (86) selection_stmt -> DEFAULT COLON . statement BREAK SEMI
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    statement                      shift and go to state 107
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 63

    (87) iteration_stmt -> FOR LPAREN . var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17

    var_declaration                shift and go to state 119
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 64

    (88) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 120
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 65

    (89) iteration_stmt -> DO LBLOCK . statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    statement                      shift and go to state 121
    expression                     shift and go to state 115
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 66

    (21) class_declaration -> area CLASS ID . LBLOCK attributes RBLOCK

    LBLOCK          shift and go to state 122


state 67

    (13) echo_stmt -> echo_stmt ECHO STRING . SEMI

    SEMI            shift and go to state 123


state 68

    (14) echo_stmt -> echo_stmt ECHO IDVAR . SEMI

    SEMI            shift and go to state 124


state 69

    (16) echo_stmt -> echo_stmt ECHO NUM . SEMI

    SEMI            shift and go to state 125


state 70

    (17) echo_stmt -> echo_stmt ECHO boolean . SEMI

    SEMI            shift and go to state 126


state 71

    (18) echo_stmt -> echo_stmt ECHO fun_declaration . SEMI

    SEMI            shift and go to state 127


state 72

    (138) boolean -> TRUE .

    SEMI            reduce using rule 138 (boolean -> TRUE .)
    MINUSMINUS      reduce using rule 138 (boolean -> TRUE .)
    PLUSPLUS        reduce using rule 138 (boolean -> TRUE .)
    TIMES           reduce using rule 138 (boolean -> TRUE .)
    DIVIDE          reduce using rule 138 (boolean -> TRUE .)
    LESS            reduce using rule 138 (boolean -> TRUE .)
    LESSEQUAL       reduce using rule 138 (boolean -> TRUE .)
    GREATER         reduce using rule 138 (boolean -> TRUE .)
    GREATEREQUAL    reduce using rule 138 (boolean -> TRUE .)
    DEQUAL          reduce using rule 138 (boolean -> TRUE .)
    DISTINT         reduce using rule 138 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 138 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 138 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 138 (boolean -> TRUE .)
    SR_EQUAL        reduce using rule 138 (boolean -> TRUE .)
    SL_EQUAL        reduce using rule 138 (boolean -> TRUE .)
    AND_EQUAL       reduce using rule 138 (boolean -> TRUE .)
    OR_EQUAL        reduce using rule 138 (boolean -> TRUE .)
    XOR_EQUAL       reduce using rule 138 (boolean -> TRUE .)
    CONCAT_EQUAL    reduce using rule 138 (boolean -> TRUE .)
    PLUS            reduce using rule 138 (boolean -> TRUE .)
    MINUS           reduce using rule 138 (boolean -> TRUE .)
    RBRACKET        reduce using rule 138 (boolean -> TRUE .)
    AND             reduce using rule 138 (boolean -> TRUE .)
    OR              reduce using rule 138 (boolean -> TRUE .)
    RPAREN          reduce using rule 138 (boolean -> TRUE .)
    COMMA           reduce using rule 138 (boolean -> TRUE .)


state 73

    (139) boolean -> FALSE .

    SEMI            reduce using rule 139 (boolean -> FALSE .)
    MINUSMINUS      reduce using rule 139 (boolean -> FALSE .)
    PLUSPLUS        reduce using rule 139 (boolean -> FALSE .)
    TIMES           reduce using rule 139 (boolean -> FALSE .)
    DIVIDE          reduce using rule 139 (boolean -> FALSE .)
    LESS            reduce using rule 139 (boolean -> FALSE .)
    LESSEQUAL       reduce using rule 139 (boolean -> FALSE .)
    GREATER         reduce using rule 139 (boolean -> FALSE .)
    GREATEREQUAL    reduce using rule 139 (boolean -> FALSE .)
    DEQUAL          reduce using rule 139 (boolean -> FALSE .)
    DISTINT         reduce using rule 139 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 139 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 139 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 139 (boolean -> FALSE .)
    SR_EQUAL        reduce using rule 139 (boolean -> FALSE .)
    SL_EQUAL        reduce using rule 139 (boolean -> FALSE .)
    AND_EQUAL       reduce using rule 139 (boolean -> FALSE .)
    OR_EQUAL        reduce using rule 139 (boolean -> FALSE .)
    XOR_EQUAL       reduce using rule 139 (boolean -> FALSE .)
    CONCAT_EQUAL    reduce using rule 139 (boolean -> FALSE .)
    PLUS            reduce using rule 139 (boolean -> FALSE .)
    MINUS           reduce using rule 139 (boolean -> FALSE .)
    RBRACKET        reduce using rule 139 (boolean -> FALSE .)
    AND             reduce using rule 139 (boolean -> FALSE .)
    OR              reduce using rule 139 (boolean -> FALSE .)
    RPAREN          reduce using rule 139 (boolean -> FALSE .)
    COMMA           reduce using rule 139 (boolean -> FALSE .)


state 74

    (33) var_declaration -> IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    IF              reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    CASE            reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    FOR             reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    DO              reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    ID              reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    NUM             reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    STRING          reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 33 (var_declaration -> IDVAR SEMI var_declaration .)


state 75

    (98) var -> IDVAR .
    (99) var -> IDVAR . LBRACKET expression RBRACKET
    (132) factor -> IDVAR . LPAREN args RPAREN

    ARROW           reduce using rule 98 (var -> IDVAR .)
    EQUAL           reduce using rule 98 (var -> IDVAR .)
    RBRACKET        reduce using rule 98 (var -> IDVAR .)
    AND             reduce using rule 98 (var -> IDVAR .)
    OR              reduce using rule 98 (var -> IDVAR .)
    MINUSMINUS      reduce using rule 98 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 98 (var -> IDVAR .)
    TIMES           reduce using rule 98 (var -> IDVAR .)
    DIVIDE          reduce using rule 98 (var -> IDVAR .)
    LESS            reduce using rule 98 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 98 (var -> IDVAR .)
    GREATER         reduce using rule 98 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 98 (var -> IDVAR .)
    DEQUAL          reduce using rule 98 (var -> IDVAR .)
    DISTINT         reduce using rule 98 (var -> IDVAR .)
    ISEQUAL         reduce using rule 98 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 98 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 98 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 98 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 98 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 98 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 98 (var -> IDVAR .)
    PLUS            reduce using rule 98 (var -> IDVAR .)
    MINUS           reduce using rule 98 (var -> IDVAR .)
    RPAREN          reduce using rule 98 (var -> IDVAR .)
    SEMI            reduce using rule 98 (var -> IDVAR .)
    COMMA           reduce using rule 98 (var -> IDVAR .)
    LBRACKET        shift and go to state 41
    LPAREN          shift and go to state 128


state 76

    (99) var -> IDVAR LBRACKET expression . RBRACKET
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RBRACKET        shift and go to state 129
    AND             shift and go to state 130
    OR              shift and go to state 131


state 77

    (92) expression -> assing_var . EQUAL expression
    (94) expression -> assing_var . EQUAL AMPERSANT IDVAR
    (97) expression -> assing_var .

    EQUAL           shift and go to state 132
    RBRACKET        reduce using rule 97 (expression -> assing_var .)
    AND             reduce using rule 97 (expression -> assing_var .)
    OR              reduce using rule 97 (expression -> assing_var .)
    RPAREN          reduce using rule 97 (expression -> assing_var .)
    SEMI            reduce using rule 97 (expression -> assing_var .)
    COMMA           reduce using rule 97 (expression -> assing_var .)


state 78

    (93) expression -> simple_expression .

    RBRACKET        reduce using rule 93 (expression -> simple_expression .)
    AND             reduce using rule 93 (expression -> simple_expression .)
    OR              reduce using rule 93 (expression -> simple_expression .)
    RPAREN          reduce using rule 93 (expression -> simple_expression .)
    SEMI            reduce using rule 93 (expression -> simple_expression .)
    COMMA           reduce using rule 93 (expression -> simple_expression .)


state 79

    (49) assing_var -> var .
    (50) assing_var -> var . ARROW ID
    (128) factor -> var .

  ! reduce/reduce conflict for RBRACKET resolved using rule 49 (assing_var -> var .)
  ! reduce/reduce conflict for AND resolved using rule 49 (assing_var -> var .)
  ! reduce/reduce conflict for OR resolved using rule 49 (assing_var -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (assing_var -> var .)
  ! reduce/reduce conflict for SEMI resolved using rule 49 (assing_var -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (assing_var -> var .)
    EQUAL           reduce using rule 49 (assing_var -> var .)
    RBRACKET        reduce using rule 49 (assing_var -> var .)
    AND             reduce using rule 49 (assing_var -> var .)
    OR              reduce using rule 49 (assing_var -> var .)
    RPAREN          reduce using rule 49 (assing_var -> var .)
    SEMI            reduce using rule 49 (assing_var -> var .)
    COMMA           reduce using rule 49 (assing_var -> var .)
    ARROW           shift and go to state 59
    MINUSMINUS      reduce using rule 128 (factor -> var .)
    PLUSPLUS        reduce using rule 128 (factor -> var .)
    TIMES           reduce using rule 128 (factor -> var .)
    DIVIDE          reduce using rule 128 (factor -> var .)
    LESS            reduce using rule 128 (factor -> var .)
    LESSEQUAL       reduce using rule 128 (factor -> var .)
    GREATER         reduce using rule 128 (factor -> var .)
    GREATEREQUAL    reduce using rule 128 (factor -> var .)
    DEQUAL          reduce using rule 128 (factor -> var .)
    DISTINT         reduce using rule 128 (factor -> var .)
    ISEQUAL         reduce using rule 128 (factor -> var .)
    IS_IDENTICAL    reduce using rule 128 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 128 (factor -> var .)
    SR_EQUAL        reduce using rule 128 (factor -> var .)
    SL_EQUAL        reduce using rule 128 (factor -> var .)
    AND_EQUAL       reduce using rule 128 (factor -> var .)
    OR_EQUAL        reduce using rule 128 (factor -> var .)
    XOR_EQUAL       reduce using rule 128 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 128 (factor -> var .)
    PLUS            reduce using rule 128 (factor -> var .)
    MINUS           reduce using rule 128 (factor -> var .)

  ! RBRACKET        [ reduce using rule 128 (factor -> var .) ]
  ! AND             [ reduce using rule 128 (factor -> var .) ]
  ! OR              [ reduce using rule 128 (factor -> var .) ]
  ! RPAREN          [ reduce using rule 128 (factor -> var .) ]
  ! SEMI            [ reduce using rule 128 (factor -> var .) ]
  ! COMMA           [ reduce using rule 128 (factor -> var .) ]


state 80

    (100) simple_expression -> additive_expression . relop additive_expression
    (101) simple_expression -> additive_expression .
    (117) additive_expression -> additive_expression . addop term
    (102) relop -> . LESS
    (103) relop -> . LESSEQUAL
    (104) relop -> . GREATER
    (105) relop -> . GREATEREQUAL
    (106) relop -> . DEQUAL
    (107) relop -> . DISTINT
    (108) relop -> . ISEQUAL
    (109) relop -> . IS_IDENTICAL
    (110) relop -> . IS_NOT_IDENTICAL
    (111) relop -> . SR_EQUAL
    (112) relop -> . SL_EQUAL
    (113) relop -> . AND_EQUAL
    (114) relop -> . OR_EQUAL
    (115) relop -> . XOR_EQUAL
    (116) relop -> . CONCAT_EQUAL
    (121) addop -> . PLUS
    (122) addop -> . MINUS

    RBRACKET        reduce using rule 101 (simple_expression -> additive_expression .)
    AND             reduce using rule 101 (simple_expression -> additive_expression .)
    OR              reduce using rule 101 (simple_expression -> additive_expression .)
    SEMI            reduce using rule 101 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 101 (simple_expression -> additive_expression .)
    COMMA           reduce using rule 101 (simple_expression -> additive_expression .)
    LESS            shift and go to state 135
    LESSEQUAL       shift and go to state 136
    GREATER         shift and go to state 137
    GREATEREQUAL    shift and go to state 138
    DEQUAL          shift and go to state 139
    DISTINT         shift and go to state 140
    ISEQUAL         shift and go to state 141
    IS_IDENTICAL    shift and go to state 142
    IS_NOT_IDENTICAL shift and go to state 143
    SR_EQUAL        shift and go to state 144
    SL_EQUAL        shift and go to state 145
    AND_EQUAL       shift and go to state 146
    OR_EQUAL        shift and go to state 147
    XOR_EQUAL       shift and go to state 148
    CONCAT_EQUAL    shift and go to state 149
    PLUS            shift and go to state 150
    MINUS           shift and go to state 151

    relop                          shift and go to state 133
    addop                          shift and go to state 134

state 81

    (118) additive_expression -> term .
    (119) additive_expression -> term . MINUSMINUS
    (120) additive_expression -> term . PLUSPLUS
    (123) term -> term . mulop factor
    (125) mulop -> . TIMES
    (126) mulop -> . DIVIDE

    LESS            reduce using rule 118 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 118 (additive_expression -> term .)
    GREATER         reduce using rule 118 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 118 (additive_expression -> term .)
    DEQUAL          reduce using rule 118 (additive_expression -> term .)
    DISTINT         reduce using rule 118 (additive_expression -> term .)
    ISEQUAL         reduce using rule 118 (additive_expression -> term .)
    IS_IDENTICAL    reduce using rule 118 (additive_expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 118 (additive_expression -> term .)
    SR_EQUAL        reduce using rule 118 (additive_expression -> term .)
    SL_EQUAL        reduce using rule 118 (additive_expression -> term .)
    AND_EQUAL       reduce using rule 118 (additive_expression -> term .)
    OR_EQUAL        reduce using rule 118 (additive_expression -> term .)
    XOR_EQUAL       reduce using rule 118 (additive_expression -> term .)
    CONCAT_EQUAL    reduce using rule 118 (additive_expression -> term .)
    PLUS            reduce using rule 118 (additive_expression -> term .)
    MINUS           reduce using rule 118 (additive_expression -> term .)
    RBRACKET        reduce using rule 118 (additive_expression -> term .)
    AND             reduce using rule 118 (additive_expression -> term .)
    OR              reduce using rule 118 (additive_expression -> term .)
    SEMI            reduce using rule 118 (additive_expression -> term .)
    RPAREN          reduce using rule 118 (additive_expression -> term .)
    COMMA           reduce using rule 118 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 152
    PLUSPLUS        shift and go to state 153
    TIMES           shift and go to state 155
    DIVIDE          shift and go to state 156

    mulop                          shift and go to state 154

state 82

    (124) term -> factor .

    MINUSMINUS      reduce using rule 124 (term -> factor .)
    PLUSPLUS        reduce using rule 124 (term -> factor .)
    TIMES           reduce using rule 124 (term -> factor .)
    DIVIDE          reduce using rule 124 (term -> factor .)
    LESS            reduce using rule 124 (term -> factor .)
    LESSEQUAL       reduce using rule 124 (term -> factor .)
    GREATER         reduce using rule 124 (term -> factor .)
    GREATEREQUAL    reduce using rule 124 (term -> factor .)
    DEQUAL          reduce using rule 124 (term -> factor .)
    DISTINT         reduce using rule 124 (term -> factor .)
    ISEQUAL         reduce using rule 124 (term -> factor .)
    IS_IDENTICAL    reduce using rule 124 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 124 (term -> factor .)
    SR_EQUAL        reduce using rule 124 (term -> factor .)
    SL_EQUAL        reduce using rule 124 (term -> factor .)
    AND_EQUAL       reduce using rule 124 (term -> factor .)
    OR_EQUAL        reduce using rule 124 (term -> factor .)
    XOR_EQUAL       reduce using rule 124 (term -> factor .)
    CONCAT_EQUAL    reduce using rule 124 (term -> factor .)
    PLUS            reduce using rule 124 (term -> factor .)
    MINUS           reduce using rule 124 (term -> factor .)
    RBRACKET        reduce using rule 124 (term -> factor .)
    AND             reduce using rule 124 (term -> factor .)
    OR              reduce using rule 124 (term -> factor .)
    SEMI            reduce using rule 124 (term -> factor .)
    RPAREN          reduce using rule 124 (term -> factor .)
    COMMA           reduce using rule 124 (term -> factor .)


state 83

    (127) factor -> LPAREN . expression RPAREN
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 157
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 84

    (129) factor -> NUM .

    MINUSMINUS      reduce using rule 129 (factor -> NUM .)
    PLUSPLUS        reduce using rule 129 (factor -> NUM .)
    TIMES           reduce using rule 129 (factor -> NUM .)
    DIVIDE          reduce using rule 129 (factor -> NUM .)
    LESS            reduce using rule 129 (factor -> NUM .)
    LESSEQUAL       reduce using rule 129 (factor -> NUM .)
    GREATER         reduce using rule 129 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 129 (factor -> NUM .)
    DEQUAL          reduce using rule 129 (factor -> NUM .)
    DISTINT         reduce using rule 129 (factor -> NUM .)
    ISEQUAL         reduce using rule 129 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 129 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 129 (factor -> NUM .)
    SR_EQUAL        reduce using rule 129 (factor -> NUM .)
    SL_EQUAL        reduce using rule 129 (factor -> NUM .)
    AND_EQUAL       reduce using rule 129 (factor -> NUM .)
    OR_EQUAL        reduce using rule 129 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 129 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 129 (factor -> NUM .)
    PLUS            reduce using rule 129 (factor -> NUM .)
    MINUS           reduce using rule 129 (factor -> NUM .)
    RBRACKET        reduce using rule 129 (factor -> NUM .)
    AND             reduce using rule 129 (factor -> NUM .)
    OR              reduce using rule 129 (factor -> NUM .)
    RPAREN          reduce using rule 129 (factor -> NUM .)
    SEMI            reduce using rule 129 (factor -> NUM .)
    COMMA           reduce using rule 129 (factor -> NUM .)


state 85

    (130) factor -> STRING .

    MINUSMINUS      reduce using rule 130 (factor -> STRING .)
    PLUSPLUS        reduce using rule 130 (factor -> STRING .)
    TIMES           reduce using rule 130 (factor -> STRING .)
    DIVIDE          reduce using rule 130 (factor -> STRING .)
    LESS            reduce using rule 130 (factor -> STRING .)
    LESSEQUAL       reduce using rule 130 (factor -> STRING .)
    GREATER         reduce using rule 130 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 130 (factor -> STRING .)
    DEQUAL          reduce using rule 130 (factor -> STRING .)
    DISTINT         reduce using rule 130 (factor -> STRING .)
    ISEQUAL         reduce using rule 130 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 130 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 130 (factor -> STRING .)
    SR_EQUAL        reduce using rule 130 (factor -> STRING .)
    SL_EQUAL        reduce using rule 130 (factor -> STRING .)
    AND_EQUAL       reduce using rule 130 (factor -> STRING .)
    OR_EQUAL        reduce using rule 130 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 130 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 130 (factor -> STRING .)
    PLUS            reduce using rule 130 (factor -> STRING .)
    MINUS           reduce using rule 130 (factor -> STRING .)
    RBRACKET        reduce using rule 130 (factor -> STRING .)
    AND             reduce using rule 130 (factor -> STRING .)
    OR              reduce using rule 130 (factor -> STRING .)
    RPAREN          reduce using rule 130 (factor -> STRING .)
    SEMI            reduce using rule 130 (factor -> STRING .)
    COMMA           reduce using rule 130 (factor -> STRING .)


state 86

    (131) factor -> boolean .

    MINUSMINUS      reduce using rule 131 (factor -> boolean .)
    PLUSPLUS        reduce using rule 131 (factor -> boolean .)
    TIMES           reduce using rule 131 (factor -> boolean .)
    DIVIDE          reduce using rule 131 (factor -> boolean .)
    LESS            reduce using rule 131 (factor -> boolean .)
    LESSEQUAL       reduce using rule 131 (factor -> boolean .)
    GREATER         reduce using rule 131 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 131 (factor -> boolean .)
    DEQUAL          reduce using rule 131 (factor -> boolean .)
    DISTINT         reduce using rule 131 (factor -> boolean .)
    ISEQUAL         reduce using rule 131 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 131 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 131 (factor -> boolean .)
    SR_EQUAL        reduce using rule 131 (factor -> boolean .)
    SL_EQUAL        reduce using rule 131 (factor -> boolean .)
    AND_EQUAL       reduce using rule 131 (factor -> boolean .)
    OR_EQUAL        reduce using rule 131 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 131 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 131 (factor -> boolean .)
    PLUS            reduce using rule 131 (factor -> boolean .)
    MINUS           reduce using rule 131 (factor -> boolean .)
    RBRACKET        reduce using rule 131 (factor -> boolean .)
    AND             reduce using rule 131 (factor -> boolean .)
    OR              reduce using rule 131 (factor -> boolean .)
    RPAREN          reduce using rule 131 (factor -> boolean .)
    SEMI            reduce using rule 131 (factor -> boolean .)
    COMMA           reduce using rule 131 (factor -> boolean .)


state 87

    (35) var_declaration -> TIMESTIMES IDVAR SEMI .
    (36) var_declaration -> TIMESTIMES IDVAR SEMI . var_declaration
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TIMESTIMES      reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    AMPERSANT       reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FUNCTION        reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PRIVATE         reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PUBLIC          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    PROTECTED       reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    REQUIRE         reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    INCLUDE         reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLASS           reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    IF              reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SWITCH          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CASE            reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DEFAULT         reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FOR             reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    WHILE           reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    DO              reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ID              reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    ECHO            reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    CLOSETAG        reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    SEMI            reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RBLOCK          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LBLOCK          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    RETURN          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    LPAREN          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    NUM             reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    STRING          reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    TRUE            reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)
    FALSE           reduce using rule 35 (var_declaration -> TIMESTIMES IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    var_declaration                shift and go to state 158
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 88

    (37) var_declaration -> assing_var IGUAL NUM . SEMI var_declaration
    (38) var_declaration -> assing_var IGUAL NUM . SEMI
    (129) factor -> NUM .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 159
    MINUSMINUS      reduce using rule 129 (factor -> NUM .)
    PLUSPLUS        reduce using rule 129 (factor -> NUM .)
    TIMES           reduce using rule 129 (factor -> NUM .)
    DIVIDE          reduce using rule 129 (factor -> NUM .)
    LESS            reduce using rule 129 (factor -> NUM .)
    LESSEQUAL       reduce using rule 129 (factor -> NUM .)
    GREATER         reduce using rule 129 (factor -> NUM .)
    GREATEREQUAL    reduce using rule 129 (factor -> NUM .)
    DEQUAL          reduce using rule 129 (factor -> NUM .)
    DISTINT         reduce using rule 129 (factor -> NUM .)
    ISEQUAL         reduce using rule 129 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 129 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 129 (factor -> NUM .)
    SR_EQUAL        reduce using rule 129 (factor -> NUM .)
    SL_EQUAL        reduce using rule 129 (factor -> NUM .)
    AND_EQUAL       reduce using rule 129 (factor -> NUM .)
    OR_EQUAL        reduce using rule 129 (factor -> NUM .)
    XOR_EQUAL       reduce using rule 129 (factor -> NUM .)
    CONCAT_EQUAL    reduce using rule 129 (factor -> NUM .)
    PLUS            reduce using rule 129 (factor -> NUM .)
    MINUS           reduce using rule 129 (factor -> NUM .)

  ! SEMI            [ reduce using rule 129 (factor -> NUM .) ]


state 89

    (39) var_declaration -> assing_var IGUAL STRING . SEMI var_declaration
    (40) var_declaration -> assing_var IGUAL STRING . SEMI
    (130) factor -> STRING .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 160
    MINUSMINUS      reduce using rule 130 (factor -> STRING .)
    PLUSPLUS        reduce using rule 130 (factor -> STRING .)
    TIMES           reduce using rule 130 (factor -> STRING .)
    DIVIDE          reduce using rule 130 (factor -> STRING .)
    LESS            reduce using rule 130 (factor -> STRING .)
    LESSEQUAL       reduce using rule 130 (factor -> STRING .)
    GREATER         reduce using rule 130 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 130 (factor -> STRING .)
    DEQUAL          reduce using rule 130 (factor -> STRING .)
    DISTINT         reduce using rule 130 (factor -> STRING .)
    ISEQUAL         reduce using rule 130 (factor -> STRING .)
    IS_IDENTICAL    reduce using rule 130 (factor -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 130 (factor -> STRING .)
    SR_EQUAL        reduce using rule 130 (factor -> STRING .)
    SL_EQUAL        reduce using rule 130 (factor -> STRING .)
    AND_EQUAL       reduce using rule 130 (factor -> STRING .)
    OR_EQUAL        reduce using rule 130 (factor -> STRING .)
    XOR_EQUAL       reduce using rule 130 (factor -> STRING .)
    CONCAT_EQUAL    reduce using rule 130 (factor -> STRING .)
    PLUS            reduce using rule 130 (factor -> STRING .)
    MINUS           reduce using rule 130 (factor -> STRING .)

  ! SEMI            [ reduce using rule 130 (factor -> STRING .) ]


state 90

    (41) var_declaration -> assing_var IGUAL boolean . SEMI var_declaration
    (42) var_declaration -> assing_var IGUAL boolean . SEMI
    (131) factor -> boolean .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 161
    MINUSMINUS      reduce using rule 131 (factor -> boolean .)
    PLUSPLUS        reduce using rule 131 (factor -> boolean .)
    TIMES           reduce using rule 131 (factor -> boolean .)
    DIVIDE          reduce using rule 131 (factor -> boolean .)
    LESS            reduce using rule 131 (factor -> boolean .)
    LESSEQUAL       reduce using rule 131 (factor -> boolean .)
    GREATER         reduce using rule 131 (factor -> boolean .)
    GREATEREQUAL    reduce using rule 131 (factor -> boolean .)
    DEQUAL          reduce using rule 131 (factor -> boolean .)
    DISTINT         reduce using rule 131 (factor -> boolean .)
    ISEQUAL         reduce using rule 131 (factor -> boolean .)
    IS_IDENTICAL    reduce using rule 131 (factor -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 131 (factor -> boolean .)
    SR_EQUAL        reduce using rule 131 (factor -> boolean .)
    SL_EQUAL        reduce using rule 131 (factor -> boolean .)
    AND_EQUAL       reduce using rule 131 (factor -> boolean .)
    OR_EQUAL        reduce using rule 131 (factor -> boolean .)
    XOR_EQUAL       reduce using rule 131 (factor -> boolean .)
    CONCAT_EQUAL    reduce using rule 131 (factor -> boolean .)
    PLUS            reduce using rule 131 (factor -> boolean .)
    MINUS           reduce using rule 131 (factor -> boolean .)

  ! SEMI            [ reduce using rule 131 (factor -> boolean .) ]


state 91

    (43) var_declaration -> assing_var IGUAL IDVAR . SEMI var_declaration
    (44) var_declaration -> assing_var IGUAL IDVAR . SEMI
    (132) factor -> IDVAR . LPAREN args RPAREN
    (98) var -> IDVAR .
    (99) var -> IDVAR . LBRACKET expression RBRACKET

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 162
    LPAREN          shift and go to state 128
    MINUSMINUS      reduce using rule 98 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 98 (var -> IDVAR .)
    TIMES           reduce using rule 98 (var -> IDVAR .)
    DIVIDE          reduce using rule 98 (var -> IDVAR .)
    LESS            reduce using rule 98 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 98 (var -> IDVAR .)
    GREATER         reduce using rule 98 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 98 (var -> IDVAR .)
    DEQUAL          reduce using rule 98 (var -> IDVAR .)
    DISTINT         reduce using rule 98 (var -> IDVAR .)
    ISEQUAL         reduce using rule 98 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 98 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 98 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 98 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 98 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 98 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 98 (var -> IDVAR .)
    PLUS            reduce using rule 98 (var -> IDVAR .)
    MINUS           reduce using rule 98 (var -> IDVAR .)
    LBRACKET        shift and go to state 41

  ! SEMI            [ reduce using rule 98 (var -> IDVAR .) ]


state 92

    (48) var_declaration -> assing_var IGUAL simple_expression . SEMI

    SEMI            shift and go to state 163


state 93

    (128) factor -> var .

    MINUSMINUS      reduce using rule 128 (factor -> var .)
    PLUSPLUS        reduce using rule 128 (factor -> var .)
    TIMES           reduce using rule 128 (factor -> var .)
    DIVIDE          reduce using rule 128 (factor -> var .)
    LESS            reduce using rule 128 (factor -> var .)
    LESSEQUAL       reduce using rule 128 (factor -> var .)
    GREATER         reduce using rule 128 (factor -> var .)
    GREATEREQUAL    reduce using rule 128 (factor -> var .)
    DEQUAL          reduce using rule 128 (factor -> var .)
    DISTINT         reduce using rule 128 (factor -> var .)
    ISEQUAL         reduce using rule 128 (factor -> var .)
    IS_IDENTICAL    reduce using rule 128 (factor -> var .)
    IS_NOT_IDENTICAL reduce using rule 128 (factor -> var .)
    SR_EQUAL        reduce using rule 128 (factor -> var .)
    SL_EQUAL        reduce using rule 128 (factor -> var .)
    AND_EQUAL       reduce using rule 128 (factor -> var .)
    OR_EQUAL        reduce using rule 128 (factor -> var .)
    XOR_EQUAL       reduce using rule 128 (factor -> var .)
    CONCAT_EQUAL    reduce using rule 128 (factor -> var .)
    PLUS            reduce using rule 128 (factor -> var .)
    MINUS           reduce using rule 128 (factor -> var .)
    SEMI            reduce using rule 128 (factor -> var .)
    RBRACKET        reduce using rule 128 (factor -> var .)
    AND             reduce using rule 128 (factor -> var .)
    OR              reduce using rule 128 (factor -> var .)
    RPAREN          reduce using rule 128 (factor -> var .)
    COMMA           reduce using rule 128 (factor -> var .)


state 94

    (45) var_declaration -> AMPERSANT IDVAR SEMI . var_declaration
    (47) var_declaration -> AMPERSANT IDVAR SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TIMESTIMES      reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    AMPERSANT       reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FUNCTION        reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PRIVATE         reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PUBLIC          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    PROTECTED       reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    REQUIRE         reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    INCLUDE         reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLASS           reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    IF              reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SWITCH          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CASE            reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DEFAULT         reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FOR             reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    WHILE           reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    DO              reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ID              reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    ECHO            reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    CLOSETAG        reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    SEMI            reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RBLOCK          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LBLOCK          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    RETURN          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    LPAREN          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    NUM             reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    STRING          reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    TRUE            reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)
    FALSE           reduce using rule 47 (var_declaration -> AMPERSANT IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    var_declaration                shift and go to state 164
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 95

    (46) var_declaration -> AMPERSANT IDVAR IGUAL . IDVAR SEMI selection_stmt

    IDVAR           shift and go to state 165


state 96

    (58) fun_declaration -> FUNCTION ID LPAREN . params RPAREN
    (59) fun_declaration -> FUNCTION ID LPAREN . params RPAREN compount_stmt
    (60) params -> . param_list
    (61) params -> . empty
    (62) param_list -> . param_list COMMA param_list
    (63) param_list -> . param
    (143) empty -> .
    (64) param -> . IDVAR
    (65) param -> . IDVAR LBRACKET RBRACKET

    RPAREN          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 170

    params                         shift and go to state 166
    param_list                     shift and go to state 167
    empty                          shift and go to state 168
    param                          shift and go to state 169

state 97

    (140) typeclass -> ID IDVAR EQUAL . NEW constructor SEMI

    NEW             shift and go to state 171


state 98

    (19) header_declaration -> REQUIRE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 172


state 99

    (20) header_declaration -> INCLUDE LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 173


state 100

    (22) class_declaration -> CLASS ID LBLOCK . attributes RBLOCK
    (23) attributes -> . attribute
    (24) attributes -> . attribute attributes
    (25) attribute -> . attribute area var_declaration
    (26) attribute -> . area var_declaration
    (27) attribute -> . attribute area fun_declaration
    (28) attribute -> . area fun_declaration
    (29) attribute -> . fun_declaration
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    FUNCTION        shift and go to state 18

    attributes                     shift and go to state 174
    attribute                      shift and go to state 175
    area                           shift and go to state 176
    fun_declaration                shift and go to state 177

state 101

    (79) selection_stmt -> IF LPAREN expression . RPAREN statement
    (80) selection_stmt -> IF LPAREN expression . RPAREN statement selection
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RPAREN          shift and go to state 178
    AND             shift and go to state 130
    OR              shift and go to state 131


state 102

    (83) selection_stmt -> SWITCH LPAREN var . RPAREN statement

    RPAREN          shift and go to state 179


state 103

    (98) var -> IDVAR .
    (99) var -> IDVAR . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 98 (var -> IDVAR .)
    LBRACKET        shift and go to state 41


state 104

    (50) assing_var -> var ARROW ID .

    EQUAL           reduce using rule 50 (assing_var -> var ARROW ID .)
    MUL_EQUAL       reduce using rule 50 (assing_var -> var ARROW ID .)
    DIV_EQUAL       reduce using rule 50 (assing_var -> var ARROW ID .)
    CONCAT_EQUAL    reduce using rule 50 (assing_var -> var ARROW ID .)
    MOD_EQUAL       reduce using rule 50 (assing_var -> var ARROW ID .)
    PLUS_EQUAL      reduce using rule 50 (assing_var -> var ARROW ID .)
    MINUS_EQUAL     reduce using rule 50 (assing_var -> var ARROW ID .)
    RBRACKET        reduce using rule 50 (assing_var -> var ARROW ID .)
    AND             reduce using rule 50 (assing_var -> var ARROW ID .)
    OR              reduce using rule 50 (assing_var -> var ARROW ID .)
    RPAREN          reduce using rule 50 (assing_var -> var ARROW ID .)
    SEMI            reduce using rule 50 (assing_var -> var ARROW ID .)
    COMMA           reduce using rule 50 (assing_var -> var ARROW ID .)


state 105

    (84) selection_stmt -> CASE NUM COLON . statement BREAK SEMI
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    statement                      shift and go to state 180
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 106

    (85) selection_stmt -> CASE STRING COLON . statement BREAK SEMI
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    statement                      shift and go to state 181
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 107

    (86) selection_stmt -> DEFAULT COLON statement . BREAK SEMI

    BREAK           shift and go to state 182


state 108

    (71) statement -> expression_stmt .

    BREAK           reduce using rule 71 (statement -> expression_stmt .)
    SEMI            reduce using rule 71 (statement -> expression_stmt .)
    ELSE            reduce using rule 71 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 71 (statement -> expression_stmt .)
    IDVAR           reduce using rule 71 (statement -> expression_stmt .)
    TIMESTIMES      reduce using rule 71 (statement -> expression_stmt .)
    AMPERSANT       reduce using rule 71 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 71 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 71 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 71 (statement -> expression_stmt .)
    PROTECTED       reduce using rule 71 (statement -> expression_stmt .)
    REQUIRE         reduce using rule 71 (statement -> expression_stmt .)
    INCLUDE         reduce using rule 71 (statement -> expression_stmt .)
    CLASS           reduce using rule 71 (statement -> expression_stmt .)
    IF              reduce using rule 71 (statement -> expression_stmt .)
    SWITCH          reduce using rule 71 (statement -> expression_stmt .)
    CASE            reduce using rule 71 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 71 (statement -> expression_stmt .)
    FOR             reduce using rule 71 (statement -> expression_stmt .)
    WHILE           reduce using rule 71 (statement -> expression_stmt .)
    DO              reduce using rule 71 (statement -> expression_stmt .)
    ID              reduce using rule 71 (statement -> expression_stmt .)
    ECHO            reduce using rule 71 (statement -> expression_stmt .)
    CLOSETAG        reduce using rule 71 (statement -> expression_stmt .)
    RBLOCK          reduce using rule 71 (statement -> expression_stmt .)
    LBLOCK          reduce using rule 71 (statement -> expression_stmt .)
    RETURN          reduce using rule 71 (statement -> expression_stmt .)
    LPAREN          reduce using rule 71 (statement -> expression_stmt .)
    NUM             reduce using rule 71 (statement -> expression_stmt .)
    STRING          reduce using rule 71 (statement -> expression_stmt .)
    TRUE            reduce using rule 71 (statement -> expression_stmt .)
    FALSE           reduce using rule 71 (statement -> expression_stmt .)


state 109

    (72) statement -> compount_stmt .

    BREAK           reduce using rule 72 (statement -> compount_stmt .)
    SEMI            reduce using rule 72 (statement -> compount_stmt .)
    ELSE            reduce using rule 72 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 72 (statement -> compount_stmt .)
    IDVAR           reduce using rule 72 (statement -> compount_stmt .)
    TIMESTIMES      reduce using rule 72 (statement -> compount_stmt .)
    AMPERSANT       reduce using rule 72 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 72 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 72 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 72 (statement -> compount_stmt .)
    PROTECTED       reduce using rule 72 (statement -> compount_stmt .)
    REQUIRE         reduce using rule 72 (statement -> compount_stmt .)
    INCLUDE         reduce using rule 72 (statement -> compount_stmt .)
    CLASS           reduce using rule 72 (statement -> compount_stmt .)
    IF              reduce using rule 72 (statement -> compount_stmt .)
    SWITCH          reduce using rule 72 (statement -> compount_stmt .)
    CASE            reduce using rule 72 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 72 (statement -> compount_stmt .)
    FOR             reduce using rule 72 (statement -> compount_stmt .)
    WHILE           reduce using rule 72 (statement -> compount_stmt .)
    DO              reduce using rule 72 (statement -> compount_stmt .)
    ID              reduce using rule 72 (statement -> compount_stmt .)
    ECHO            reduce using rule 72 (statement -> compount_stmt .)
    CLOSETAG        reduce using rule 72 (statement -> compount_stmt .)
    RBLOCK          reduce using rule 72 (statement -> compount_stmt .)
    LBLOCK          reduce using rule 72 (statement -> compount_stmt .)
    RETURN          reduce using rule 72 (statement -> compount_stmt .)
    LPAREN          reduce using rule 72 (statement -> compount_stmt .)
    NUM             reduce using rule 72 (statement -> compount_stmt .)
    STRING          reduce using rule 72 (statement -> compount_stmt .)
    TRUE            reduce using rule 72 (statement -> compount_stmt .)
    FALSE           reduce using rule 72 (statement -> compount_stmt .)


state 110

    (73) statement -> selection_stmt .

    BREAK           reduce using rule 73 (statement -> selection_stmt .)
    SEMI            reduce using rule 73 (statement -> selection_stmt .)
    ELSE            reduce using rule 73 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 73 (statement -> selection_stmt .)
    IDVAR           reduce using rule 73 (statement -> selection_stmt .)
    TIMESTIMES      reduce using rule 73 (statement -> selection_stmt .)
    AMPERSANT       reduce using rule 73 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 73 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 73 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 73 (statement -> selection_stmt .)
    PROTECTED       reduce using rule 73 (statement -> selection_stmt .)
    REQUIRE         reduce using rule 73 (statement -> selection_stmt .)
    INCLUDE         reduce using rule 73 (statement -> selection_stmt .)
    CLASS           reduce using rule 73 (statement -> selection_stmt .)
    IF              reduce using rule 73 (statement -> selection_stmt .)
    SWITCH          reduce using rule 73 (statement -> selection_stmt .)
    CASE            reduce using rule 73 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 73 (statement -> selection_stmt .)
    FOR             reduce using rule 73 (statement -> selection_stmt .)
    WHILE           reduce using rule 73 (statement -> selection_stmt .)
    DO              reduce using rule 73 (statement -> selection_stmt .)
    ID              reduce using rule 73 (statement -> selection_stmt .)
    ECHO            reduce using rule 73 (statement -> selection_stmt .)
    CLOSETAG        reduce using rule 73 (statement -> selection_stmt .)
    RBLOCK          reduce using rule 73 (statement -> selection_stmt .)
    LBLOCK          reduce using rule 73 (statement -> selection_stmt .)
    RETURN          reduce using rule 73 (statement -> selection_stmt .)
    LPAREN          reduce using rule 73 (statement -> selection_stmt .)
    NUM             reduce using rule 73 (statement -> selection_stmt .)
    STRING          reduce using rule 73 (statement -> selection_stmt .)
    TRUE            reduce using rule 73 (statement -> selection_stmt .)
    FALSE           reduce using rule 73 (statement -> selection_stmt .)


state 111

    (74) statement -> iteration_stmt .

    BREAK           reduce using rule 74 (statement -> iteration_stmt .)
    SEMI            reduce using rule 74 (statement -> iteration_stmt .)
    ELSE            reduce using rule 74 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 74 (statement -> iteration_stmt .)
    IDVAR           reduce using rule 74 (statement -> iteration_stmt .)
    TIMESTIMES      reduce using rule 74 (statement -> iteration_stmt .)
    AMPERSANT       reduce using rule 74 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 74 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 74 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 74 (statement -> iteration_stmt .)
    PROTECTED       reduce using rule 74 (statement -> iteration_stmt .)
    REQUIRE         reduce using rule 74 (statement -> iteration_stmt .)
    INCLUDE         reduce using rule 74 (statement -> iteration_stmt .)
    CLASS           reduce using rule 74 (statement -> iteration_stmt .)
    IF              reduce using rule 74 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 74 (statement -> iteration_stmt .)
    CASE            reduce using rule 74 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 74 (statement -> iteration_stmt .)
    FOR             reduce using rule 74 (statement -> iteration_stmt .)
    WHILE           reduce using rule 74 (statement -> iteration_stmt .)
    DO              reduce using rule 74 (statement -> iteration_stmt .)
    ID              reduce using rule 74 (statement -> iteration_stmt .)
    ECHO            reduce using rule 74 (statement -> iteration_stmt .)
    CLOSETAG        reduce using rule 74 (statement -> iteration_stmt .)
    RBLOCK          reduce using rule 74 (statement -> iteration_stmt .)
    LBLOCK          reduce using rule 74 (statement -> iteration_stmt .)
    RETURN          reduce using rule 74 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 74 (statement -> iteration_stmt .)
    NUM             reduce using rule 74 (statement -> iteration_stmt .)
    STRING          reduce using rule 74 (statement -> iteration_stmt .)
    TRUE            reduce using rule 74 (statement -> iteration_stmt .)
    FALSE           reduce using rule 74 (statement -> iteration_stmt .)


state 112

    (75) statement -> return_stmt .

    BREAK           reduce using rule 75 (statement -> return_stmt .)
    SEMI            reduce using rule 75 (statement -> return_stmt .)
    ELSE            reduce using rule 75 (statement -> return_stmt .)
    ELSEIF          reduce using rule 75 (statement -> return_stmt .)
    IDVAR           reduce using rule 75 (statement -> return_stmt .)
    TIMESTIMES      reduce using rule 75 (statement -> return_stmt .)
    AMPERSANT       reduce using rule 75 (statement -> return_stmt .)
    FUNCTION        reduce using rule 75 (statement -> return_stmt .)
    PRIVATE         reduce using rule 75 (statement -> return_stmt .)
    PUBLIC          reduce using rule 75 (statement -> return_stmt .)
    PROTECTED       reduce using rule 75 (statement -> return_stmt .)
    REQUIRE         reduce using rule 75 (statement -> return_stmt .)
    INCLUDE         reduce using rule 75 (statement -> return_stmt .)
    CLASS           reduce using rule 75 (statement -> return_stmt .)
    IF              reduce using rule 75 (statement -> return_stmt .)
    SWITCH          reduce using rule 75 (statement -> return_stmt .)
    CASE            reduce using rule 75 (statement -> return_stmt .)
    DEFAULT         reduce using rule 75 (statement -> return_stmt .)
    FOR             reduce using rule 75 (statement -> return_stmt .)
    WHILE           reduce using rule 75 (statement -> return_stmt .)
    DO              reduce using rule 75 (statement -> return_stmt .)
    ID              reduce using rule 75 (statement -> return_stmt .)
    ECHO            reduce using rule 75 (statement -> return_stmt .)
    CLOSETAG        reduce using rule 75 (statement -> return_stmt .)
    RBLOCK          reduce using rule 75 (statement -> return_stmt .)
    LBLOCK          reduce using rule 75 (statement -> return_stmt .)
    RETURN          reduce using rule 75 (statement -> return_stmt .)
    LPAREN          reduce using rule 75 (statement -> return_stmt .)
    NUM             reduce using rule 75 (statement -> return_stmt .)
    STRING          reduce using rule 75 (statement -> return_stmt .)
    TRUE            reduce using rule 75 (statement -> return_stmt .)
    FALSE           reduce using rule 75 (statement -> return_stmt .)


state 113

    (76) statement -> class_declaration .

    BREAK           reduce using rule 76 (statement -> class_declaration .)
    SEMI            reduce using rule 76 (statement -> class_declaration .)
    ELSE            reduce using rule 76 (statement -> class_declaration .)
    ELSEIF          reduce using rule 76 (statement -> class_declaration .)
    IDVAR           reduce using rule 76 (statement -> class_declaration .)
    TIMESTIMES      reduce using rule 76 (statement -> class_declaration .)
    AMPERSANT       reduce using rule 76 (statement -> class_declaration .)
    FUNCTION        reduce using rule 76 (statement -> class_declaration .)
    PRIVATE         reduce using rule 76 (statement -> class_declaration .)
    PUBLIC          reduce using rule 76 (statement -> class_declaration .)
    PROTECTED       reduce using rule 76 (statement -> class_declaration .)
    REQUIRE         reduce using rule 76 (statement -> class_declaration .)
    INCLUDE         reduce using rule 76 (statement -> class_declaration .)
    CLASS           reduce using rule 76 (statement -> class_declaration .)
    IF              reduce using rule 76 (statement -> class_declaration .)
    SWITCH          reduce using rule 76 (statement -> class_declaration .)
    CASE            reduce using rule 76 (statement -> class_declaration .)
    DEFAULT         reduce using rule 76 (statement -> class_declaration .)
    FOR             reduce using rule 76 (statement -> class_declaration .)
    WHILE           reduce using rule 76 (statement -> class_declaration .)
    DO              reduce using rule 76 (statement -> class_declaration .)
    ID              reduce using rule 76 (statement -> class_declaration .)
    ECHO            reduce using rule 76 (statement -> class_declaration .)
    CLOSETAG        reduce using rule 76 (statement -> class_declaration .)
    RBLOCK          reduce using rule 76 (statement -> class_declaration .)
    LBLOCK          reduce using rule 76 (statement -> class_declaration .)
    RETURN          reduce using rule 76 (statement -> class_declaration .)
    LPAREN          reduce using rule 76 (statement -> class_declaration .)
    NUM             reduce using rule 76 (statement -> class_declaration .)
    STRING          reduce using rule 76 (statement -> class_declaration .)
    TRUE            reduce using rule 76 (statement -> class_declaration .)
    FALSE           reduce using rule 76 (statement -> class_declaration .)


state 114

    (77) statement -> echo_stmt .
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI

  ! shift/reduce conflict for ECHO resolved as shift
    BREAK           reduce using rule 77 (statement -> echo_stmt .)
    SEMI            reduce using rule 77 (statement -> echo_stmt .)
    ELSE            reduce using rule 77 (statement -> echo_stmt .)
    ELSEIF          reduce using rule 77 (statement -> echo_stmt .)
    IDVAR           reduce using rule 77 (statement -> echo_stmt .)
    TIMESTIMES      reduce using rule 77 (statement -> echo_stmt .)
    AMPERSANT       reduce using rule 77 (statement -> echo_stmt .)
    FUNCTION        reduce using rule 77 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 77 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 77 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 77 (statement -> echo_stmt .)
    REQUIRE         reduce using rule 77 (statement -> echo_stmt .)
    INCLUDE         reduce using rule 77 (statement -> echo_stmt .)
    CLASS           reduce using rule 77 (statement -> echo_stmt .)
    IF              reduce using rule 77 (statement -> echo_stmt .)
    SWITCH          reduce using rule 77 (statement -> echo_stmt .)
    CASE            reduce using rule 77 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 77 (statement -> echo_stmt .)
    FOR             reduce using rule 77 (statement -> echo_stmt .)
    WHILE           reduce using rule 77 (statement -> echo_stmt .)
    DO              reduce using rule 77 (statement -> echo_stmt .)
    ID              reduce using rule 77 (statement -> echo_stmt .)
    CLOSETAG        reduce using rule 77 (statement -> echo_stmt .)
    RBLOCK          reduce using rule 77 (statement -> echo_stmt .)
    LBLOCK          reduce using rule 77 (statement -> echo_stmt .)
    RETURN          reduce using rule 77 (statement -> echo_stmt .)
    LPAREN          reduce using rule 77 (statement -> echo_stmt .)
    NUM             reduce using rule 77 (statement -> echo_stmt .)
    STRING          reduce using rule 77 (statement -> echo_stmt .)
    TRUE            reduce using rule 77 (statement -> echo_stmt .)
    FALSE           reduce using rule 77 (statement -> echo_stmt .)
    ECHO            shift and go to state 39

  ! ECHO            [ reduce using rule 77 (statement -> echo_stmt .) ]


state 115

    (78) expression_stmt -> expression . SEMI
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    SEMI            shift and go to state 183
    AND             shift and go to state 130
    OR              shift and go to state 131


state 116

    (66) compount_stmt -> LBLOCK . echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (143) empty -> .

    ECHO            reduce using rule 143 (empty -> .)
    IDVAR           reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    LBLOCK          reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    SWITCH          reduce using rule 143 (empty -> .)
    CASE            reduce using rule 143 (empty -> .)
    DEFAULT         reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    CLASS           reduce using rule 143 (empty -> .)
    PRIVATE         reduce using rule 143 (empty -> .)
    PUBLIC          reduce using rule 143 (empty -> .)
    PROTECTED       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)
    NUM             reduce using rule 143 (empty -> .)
    STRING          reduce using rule 143 (empty -> .)
    TRUE            reduce using rule 143 (empty -> .)
    FALSE           reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)

    echo_stmt                      shift and go to state 184
    empty                          shift and go to state 26

state 117

    (90) return_stmt -> RETURN . SEMI
    (91) return_stmt -> RETURN . expression SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    SEMI            shift and go to state 185
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 186
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 118

    (21) class_declaration -> area . CLASS ID LBLOCK attributes RBLOCK

    CLASS           shift and go to state 38


state 119

    (87) iteration_stmt -> FOR LPAREN var_declaration . SEMI expression SEMI additive_expression RPAREN statement

    SEMI            shift and go to state 187


state 120

    (88) iteration_stmt -> WHILE LPAREN expression . RPAREN statement
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RPAREN          shift and go to state 188
    AND             shift and go to state 130
    OR              shift and go to state 131


state 121

    (89) iteration_stmt -> DO LBLOCK statement . SEMI RBLOCK WHILE LPAREN expression RPAREN

    SEMI            shift and go to state 189


state 122

    (21) class_declaration -> area CLASS ID LBLOCK . attributes RBLOCK
    (23) attributes -> . attribute
    (24) attributes -> . attribute attributes
    (25) attribute -> . attribute area var_declaration
    (26) attribute -> . area var_declaration
    (27) attribute -> . attribute area fun_declaration
    (28) attribute -> . area fun_declaration
    (29) attribute -> . fun_declaration
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    FUNCTION        shift and go to state 18

    area                           shift and go to state 176
    attributes                     shift and go to state 190
    attribute                      shift and go to state 175
    fun_declaration                shift and go to state 177

state 123

    (13) echo_stmt -> echo_stmt ECHO STRING SEMI .

    ECHO            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    IDVAR           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    TIMESTIMES      reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    AMPERSANT       reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FUNCTION        reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PRIVATE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PUBLIC          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    PROTECTED       reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    REQUIRE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    INCLUDE         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CLASS           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    IF              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    SWITCH          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CASE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    DEFAULT         reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FOR             reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    WHILE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    DO              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ID              reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    CLOSETAG        reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    BREAK           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    SEMI            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    LBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    RETURN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    LPAREN          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    NUM             reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    STRING          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    TRUE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    FALSE           reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    RBLOCK          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ELSE            reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)
    ELSEIF          reduce using rule 13 (echo_stmt -> echo_stmt ECHO STRING SEMI .)


state 124

    (14) echo_stmt -> echo_stmt ECHO IDVAR SEMI .

    ECHO            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    IDVAR           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    TIMESTIMES      reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    AMPERSANT       reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FUNCTION        reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PRIVATE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PUBLIC          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    PROTECTED       reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    REQUIRE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    INCLUDE         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CLASS           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    IF              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    SWITCH          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CASE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    DEFAULT         reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FOR             reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    WHILE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    DO              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ID              reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    CLOSETAG        reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    BREAK           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    SEMI            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    LBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    RETURN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    LPAREN          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    NUM             reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    STRING          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    TRUE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    FALSE           reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    RBLOCK          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ELSE            reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)
    ELSEIF          reduce using rule 14 (echo_stmt -> echo_stmt ECHO IDVAR SEMI .)


state 125

    (16) echo_stmt -> echo_stmt ECHO NUM SEMI .

    ECHO            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    IDVAR           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    TIMESTIMES      reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    AMPERSANT       reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FUNCTION        reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PRIVATE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PUBLIC          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    PROTECTED       reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    REQUIRE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    INCLUDE         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CLASS           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    IF              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    SWITCH          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CASE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    DEFAULT         reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FOR             reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    WHILE           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    DO              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ID              reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    CLOSETAG        reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    BREAK           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    SEMI            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    LBLOCK          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    RETURN          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    LPAREN          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    NUM             reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    STRING          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    TRUE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    FALSE           reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    RBLOCK          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ELSE            reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)
    ELSEIF          reduce using rule 16 (echo_stmt -> echo_stmt ECHO NUM SEMI .)


state 126

    (17) echo_stmt -> echo_stmt ECHO boolean SEMI .

    ECHO            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    IDVAR           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    TIMESTIMES      reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    AMPERSANT       reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FUNCTION        reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PRIVATE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PUBLIC          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    PROTECTED       reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    REQUIRE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    INCLUDE         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CLASS           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    IF              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    SWITCH          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CASE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    DEFAULT         reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FOR             reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    WHILE           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    DO              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ID              reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    CLOSETAG        reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    BREAK           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    SEMI            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    LBLOCK          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    RETURN          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    LPAREN          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    NUM             reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    STRING          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    TRUE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    FALSE           reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    RBLOCK          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ELSE            reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)
    ELSEIF          reduce using rule 17 (echo_stmt -> echo_stmt ECHO boolean SEMI .)


state 127

    (18) echo_stmt -> echo_stmt ECHO fun_declaration SEMI .

    ECHO            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    IDVAR           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    TIMESTIMES      reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    AMPERSANT       reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FUNCTION        reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PRIVATE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PUBLIC          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    PROTECTED       reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    REQUIRE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    INCLUDE         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CLASS           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    IF              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    SWITCH          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CASE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    DEFAULT         reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FOR             reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    WHILE           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    DO              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ID              reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    CLOSETAG        reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    BREAK           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    SEMI            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    LBLOCK          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    RETURN          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    LPAREN          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    NUM             reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    STRING          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    TRUE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    FALSE           reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    RBLOCK          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ELSE            reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)
    ELSEIF          reduce using rule 18 (echo_stmt -> echo_stmt ECHO fun_declaration SEMI .)


state 128

    (132) factor -> IDVAR LPAREN . args RPAREN
    (133) args -> . args_list
    (134) args -> . empty
    (135) args -> . VOID
    (136) args_list -> . args_list COMMA expression
    (137) args_list -> . expression
    (143) empty -> .
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    VOID            shift and go to state 194
    RPAREN          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    args                           shift and go to state 191
    args_list                      shift and go to state 192
    empty                          shift and go to state 193
    expression                     shift and go to state 195
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 129

    (99) var -> IDVAR LBRACKET expression RBRACKET .

    ARROW           reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    MUL_EQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIV_EQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    CONCAT_EQUAL    reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    MOD_EQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS_EQUAL      reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS_EQUAL     reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND             reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR              reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESS            reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    DEQUAL          reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    DISTINT         reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    ISEQUAL         reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_IDENTICAL    reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    SR_EQUAL        reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    SL_EQUAL        reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    AND_EQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    OR_EQUAL        reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    XOR_EQUAL       reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 99 (var -> IDVAR LBRACKET expression RBRACKET .)


state 130

    (95) expression -> expression AND . expression
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 196
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 131

    (96) expression -> expression OR . expression
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 197
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 132

    (92) expression -> assing_var EQUAL . expression
    (94) expression -> assing_var EQUAL . AMPERSANT IDVAR
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    AMPERSANT       shift and go to state 199
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    assing_var                     shift and go to state 77
    expression                     shift and go to state 198
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 133

    (100) simple_expression -> additive_expression relop . additive_expression
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    IDVAR           shift and go to state 201
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    additive_expression            shift and go to state 200
    term                           shift and go to state 81
    factor                         shift and go to state 82
    var                            shift and go to state 93
    boolean                        shift and go to state 86

state 134

    (117) additive_expression -> additive_expression addop . term
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    IDVAR           shift and go to state 201
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    term                           shift and go to state 202
    factor                         shift and go to state 82
    var                            shift and go to state 93
    boolean                        shift and go to state 86

state 135

    (102) relop -> LESS .

    LPAREN          reduce using rule 102 (relop -> LESS .)
    NUM             reduce using rule 102 (relop -> LESS .)
    STRING          reduce using rule 102 (relop -> LESS .)
    IDVAR           reduce using rule 102 (relop -> LESS .)
    TRUE            reduce using rule 102 (relop -> LESS .)
    FALSE           reduce using rule 102 (relop -> LESS .)


state 136

    (103) relop -> LESSEQUAL .

    LPAREN          reduce using rule 103 (relop -> LESSEQUAL .)
    NUM             reduce using rule 103 (relop -> LESSEQUAL .)
    STRING          reduce using rule 103 (relop -> LESSEQUAL .)
    IDVAR           reduce using rule 103 (relop -> LESSEQUAL .)
    TRUE            reduce using rule 103 (relop -> LESSEQUAL .)
    FALSE           reduce using rule 103 (relop -> LESSEQUAL .)


state 137

    (104) relop -> GREATER .

    LPAREN          reduce using rule 104 (relop -> GREATER .)
    NUM             reduce using rule 104 (relop -> GREATER .)
    STRING          reduce using rule 104 (relop -> GREATER .)
    IDVAR           reduce using rule 104 (relop -> GREATER .)
    TRUE            reduce using rule 104 (relop -> GREATER .)
    FALSE           reduce using rule 104 (relop -> GREATER .)


state 138

    (105) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 105 (relop -> GREATEREQUAL .)
    NUM             reduce using rule 105 (relop -> GREATEREQUAL .)
    STRING          reduce using rule 105 (relop -> GREATEREQUAL .)
    IDVAR           reduce using rule 105 (relop -> GREATEREQUAL .)
    TRUE            reduce using rule 105 (relop -> GREATEREQUAL .)
    FALSE           reduce using rule 105 (relop -> GREATEREQUAL .)


state 139

    (106) relop -> DEQUAL .

    LPAREN          reduce using rule 106 (relop -> DEQUAL .)
    NUM             reduce using rule 106 (relop -> DEQUAL .)
    STRING          reduce using rule 106 (relop -> DEQUAL .)
    IDVAR           reduce using rule 106 (relop -> DEQUAL .)
    TRUE            reduce using rule 106 (relop -> DEQUAL .)
    FALSE           reduce using rule 106 (relop -> DEQUAL .)


state 140

    (107) relop -> DISTINT .

    LPAREN          reduce using rule 107 (relop -> DISTINT .)
    NUM             reduce using rule 107 (relop -> DISTINT .)
    STRING          reduce using rule 107 (relop -> DISTINT .)
    IDVAR           reduce using rule 107 (relop -> DISTINT .)
    TRUE            reduce using rule 107 (relop -> DISTINT .)
    FALSE           reduce using rule 107 (relop -> DISTINT .)


state 141

    (108) relop -> ISEQUAL .

    LPAREN          reduce using rule 108 (relop -> ISEQUAL .)
    NUM             reduce using rule 108 (relop -> ISEQUAL .)
    STRING          reduce using rule 108 (relop -> ISEQUAL .)
    IDVAR           reduce using rule 108 (relop -> ISEQUAL .)
    TRUE            reduce using rule 108 (relop -> ISEQUAL .)
    FALSE           reduce using rule 108 (relop -> ISEQUAL .)


state 142

    (109) relop -> IS_IDENTICAL .

    LPAREN          reduce using rule 109 (relop -> IS_IDENTICAL .)
    NUM             reduce using rule 109 (relop -> IS_IDENTICAL .)
    STRING          reduce using rule 109 (relop -> IS_IDENTICAL .)
    IDVAR           reduce using rule 109 (relop -> IS_IDENTICAL .)
    TRUE            reduce using rule 109 (relop -> IS_IDENTICAL .)
    FALSE           reduce using rule 109 (relop -> IS_IDENTICAL .)


state 143

    (110) relop -> IS_NOT_IDENTICAL .

    LPAREN          reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)
    STRING          reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)
    IDVAR           reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)
    TRUE            reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)
    FALSE           reduce using rule 110 (relop -> IS_NOT_IDENTICAL .)


state 144

    (111) relop -> SR_EQUAL .

    LPAREN          reduce using rule 111 (relop -> SR_EQUAL .)
    NUM             reduce using rule 111 (relop -> SR_EQUAL .)
    STRING          reduce using rule 111 (relop -> SR_EQUAL .)
    IDVAR           reduce using rule 111 (relop -> SR_EQUAL .)
    TRUE            reduce using rule 111 (relop -> SR_EQUAL .)
    FALSE           reduce using rule 111 (relop -> SR_EQUAL .)


state 145

    (112) relop -> SL_EQUAL .

    LPAREN          reduce using rule 112 (relop -> SL_EQUAL .)
    NUM             reduce using rule 112 (relop -> SL_EQUAL .)
    STRING          reduce using rule 112 (relop -> SL_EQUAL .)
    IDVAR           reduce using rule 112 (relop -> SL_EQUAL .)
    TRUE            reduce using rule 112 (relop -> SL_EQUAL .)
    FALSE           reduce using rule 112 (relop -> SL_EQUAL .)


state 146

    (113) relop -> AND_EQUAL .

    LPAREN          reduce using rule 113 (relop -> AND_EQUAL .)
    NUM             reduce using rule 113 (relop -> AND_EQUAL .)
    STRING          reduce using rule 113 (relop -> AND_EQUAL .)
    IDVAR           reduce using rule 113 (relop -> AND_EQUAL .)
    TRUE            reduce using rule 113 (relop -> AND_EQUAL .)
    FALSE           reduce using rule 113 (relop -> AND_EQUAL .)


state 147

    (114) relop -> OR_EQUAL .

    LPAREN          reduce using rule 114 (relop -> OR_EQUAL .)
    NUM             reduce using rule 114 (relop -> OR_EQUAL .)
    STRING          reduce using rule 114 (relop -> OR_EQUAL .)
    IDVAR           reduce using rule 114 (relop -> OR_EQUAL .)
    TRUE            reduce using rule 114 (relop -> OR_EQUAL .)
    FALSE           reduce using rule 114 (relop -> OR_EQUAL .)


state 148

    (115) relop -> XOR_EQUAL .

    LPAREN          reduce using rule 115 (relop -> XOR_EQUAL .)
    NUM             reduce using rule 115 (relop -> XOR_EQUAL .)
    STRING          reduce using rule 115 (relop -> XOR_EQUAL .)
    IDVAR           reduce using rule 115 (relop -> XOR_EQUAL .)
    TRUE            reduce using rule 115 (relop -> XOR_EQUAL .)
    FALSE           reduce using rule 115 (relop -> XOR_EQUAL .)


state 149

    (116) relop -> CONCAT_EQUAL .

    LPAREN          reduce using rule 116 (relop -> CONCAT_EQUAL .)
    NUM             reduce using rule 116 (relop -> CONCAT_EQUAL .)
    STRING          reduce using rule 116 (relop -> CONCAT_EQUAL .)
    IDVAR           reduce using rule 116 (relop -> CONCAT_EQUAL .)
    TRUE            reduce using rule 116 (relop -> CONCAT_EQUAL .)
    FALSE           reduce using rule 116 (relop -> CONCAT_EQUAL .)


state 150

    (121) addop -> PLUS .

    LPAREN          reduce using rule 121 (addop -> PLUS .)
    NUM             reduce using rule 121 (addop -> PLUS .)
    STRING          reduce using rule 121 (addop -> PLUS .)
    IDVAR           reduce using rule 121 (addop -> PLUS .)
    TRUE            reduce using rule 121 (addop -> PLUS .)
    FALSE           reduce using rule 121 (addop -> PLUS .)


state 151

    (122) addop -> MINUS .

    LPAREN          reduce using rule 122 (addop -> MINUS .)
    NUM             reduce using rule 122 (addop -> MINUS .)
    STRING          reduce using rule 122 (addop -> MINUS .)
    IDVAR           reduce using rule 122 (addop -> MINUS .)
    TRUE            reduce using rule 122 (addop -> MINUS .)
    FALSE           reduce using rule 122 (addop -> MINUS .)


state 152

    (119) additive_expression -> term MINUSMINUS .

    LESS            reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    LESSEQUAL       reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    GREATER         reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    GREATEREQUAL    reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    DEQUAL          reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    DISTINT         reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    ISEQUAL         reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    IS_IDENTICAL    reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    IS_NOT_IDENTICAL reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    SR_EQUAL        reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    SL_EQUAL        reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    AND_EQUAL       reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    OR_EQUAL        reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    XOR_EQUAL       reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    CONCAT_EQUAL    reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    RBRACKET        reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    AND             reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    OR              reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    SEMI            reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    RPAREN          reduce using rule 119 (additive_expression -> term MINUSMINUS .)
    COMMA           reduce using rule 119 (additive_expression -> term MINUSMINUS .)


state 153

    (120) additive_expression -> term PLUSPLUS .

    LESS            reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    LESSEQUAL       reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    GREATER         reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    GREATEREQUAL    reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    DEQUAL          reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    DISTINT         reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    ISEQUAL         reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    IS_IDENTICAL    reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    IS_NOT_IDENTICAL reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    SR_EQUAL        reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    SL_EQUAL        reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    AND_EQUAL       reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    OR_EQUAL        reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    XOR_EQUAL       reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    CONCAT_EQUAL    reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    RBRACKET        reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    AND             reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    OR              reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    SEMI            reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    RPAREN          reduce using rule 120 (additive_expression -> term PLUSPLUS .)
    COMMA           reduce using rule 120 (additive_expression -> term PLUSPLUS .)


state 154

    (123) term -> term mulop . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    IDVAR           shift and go to state 201
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    factor                         shift and go to state 203
    var                            shift and go to state 93
    boolean                        shift and go to state 86

state 155

    (125) mulop -> TIMES .

    LPAREN          reduce using rule 125 (mulop -> TIMES .)
    NUM             reduce using rule 125 (mulop -> TIMES .)
    STRING          reduce using rule 125 (mulop -> TIMES .)
    IDVAR           reduce using rule 125 (mulop -> TIMES .)
    TRUE            reduce using rule 125 (mulop -> TIMES .)
    FALSE           reduce using rule 125 (mulop -> TIMES .)


state 156

    (126) mulop -> DIVIDE .

    LPAREN          reduce using rule 126 (mulop -> DIVIDE .)
    NUM             reduce using rule 126 (mulop -> DIVIDE .)
    STRING          reduce using rule 126 (mulop -> DIVIDE .)
    IDVAR           reduce using rule 126 (mulop -> DIVIDE .)
    TRUE            reduce using rule 126 (mulop -> DIVIDE .)
    FALSE           reduce using rule 126 (mulop -> DIVIDE .)


state 157

    (127) factor -> LPAREN expression . RPAREN
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RPAREN          shift and go to state 204
    AND             shift and go to state 130
    OR              shift and go to state 131


state 158

    (36) var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    IF              reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CASE            reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FOR             reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    DO              reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ID              reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    NUM             reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    STRING          reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 36 (var_declaration -> TIMESTIMES IDVAR SEMI var_declaration .)


state 159

    (37) var_declaration -> assing_var IGUAL NUM SEMI . var_declaration
    (38) var_declaration -> assing_var IGUAL NUM SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TIMESTIMES      reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    AMPERSANT       reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FUNCTION        reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PRIVATE         reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PUBLIC          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    PROTECTED       reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    REQUIRE         reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    INCLUDE         reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLASS           reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    IF              reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    SWITCH          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CASE            reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DEFAULT         reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FOR             reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    WHILE           reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    DO              reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ID              reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    ECHO            reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    CLOSETAG        reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    SEMI            reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RBLOCK          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LBLOCK          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    RETURN          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    LPAREN          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    NUM             reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    STRING          reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    TRUE            reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)
    FALSE           reduce using rule 38 (var_declaration -> assing_var IGUAL NUM SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 205
    var                            shift and go to state 29

state 160

    (39) var_declaration -> assing_var IGUAL STRING SEMI . var_declaration
    (40) var_declaration -> assing_var IGUAL STRING SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TIMESTIMES      reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    AMPERSANT       reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FUNCTION        reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PRIVATE         reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PUBLIC          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    PROTECTED       reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    REQUIRE         reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    INCLUDE         reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLASS           reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    IF              reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    SWITCH          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CASE            reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DEFAULT         reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FOR             reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    WHILE           reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    DO              reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ID              reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    ECHO            reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    CLOSETAG        reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    SEMI            reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RBLOCK          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LBLOCK          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    RETURN          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    LPAREN          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    NUM             reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    STRING          reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    TRUE            reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)
    FALSE           reduce using rule 40 (var_declaration -> assing_var IGUAL STRING SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 206
    var                            shift and go to state 29

state 161

    (41) var_declaration -> assing_var IGUAL boolean SEMI . var_declaration
    (42) var_declaration -> assing_var IGUAL boolean SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TIMESTIMES      reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    AMPERSANT       reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FUNCTION        reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PRIVATE         reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PUBLIC          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    PROTECTED       reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    REQUIRE         reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    INCLUDE         reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLASS           reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    IF              reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    SWITCH          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CASE            reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DEFAULT         reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FOR             reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    WHILE           reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    DO              reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ID              reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    ECHO            reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    CLOSETAG        reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    SEMI            reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LBLOCK          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    RETURN          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    LPAREN          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    NUM             reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    STRING          reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    TRUE            reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)
    FALSE           reduce using rule 42 (var_declaration -> assing_var IGUAL boolean SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 207
    var                            shift and go to state 29

state 162

    (43) var_declaration -> assing_var IGUAL IDVAR SEMI . var_declaration
    (44) var_declaration -> assing_var IGUAL IDVAR SEMI .
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TIMESTIMES      reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    AMPERSANT       reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FUNCTION        reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PRIVATE         reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PUBLIC          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    PROTECTED       reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    REQUIRE         reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    INCLUDE         reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLASS           reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    IF              reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    SWITCH          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CASE            reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DEFAULT         reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FOR             reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    WHILE           reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    DO              reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ID              reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    ECHO            reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    CLOSETAG        reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    SEMI            reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LBLOCK          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    RETURN          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    LPAREN          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    NUM             reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    STRING          reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    TRUE            reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)
    FALSE           reduce using rule 44 (var_declaration -> assing_var IGUAL IDVAR SEMI .)

  ! IDVAR           [ shift and go to state 14 ]
  ! TIMESTIMES      [ shift and go to state 15 ]
  ! AMPERSANT       [ shift and go to state 17 ]

    assing_var                     shift and go to state 16
    var_declaration                shift and go to state 208
    var                            shift and go to state 29

state 163

    (48) var_declaration -> assing_var IGUAL simple_expression SEMI .

    IDVAR           reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TIMESTIMES      reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    AMPERSANT       reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FUNCTION        reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PRIVATE         reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PUBLIC          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    PROTECTED       reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    REQUIRE         reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    INCLUDE         reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLASS           reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    IF              reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    SWITCH          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CASE            reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DEFAULT         reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FOR             reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    WHILE           reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    DO              reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ID              reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    ECHO            reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    CLOSETAG        reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    SEMI            reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LBLOCK          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    RETURN          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    LPAREN          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    NUM             reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    STRING          reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    TRUE            reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)
    FALSE           reduce using rule 48 (var_declaration -> assing_var IGUAL simple_expression SEMI .)


state 164

    (45) var_declaration -> AMPERSANT IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    IF              reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CASE            reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FOR             reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    DO              reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ID              reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    NUM             reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    STRING          reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 45 (var_declaration -> AMPERSANT IDVAR SEMI var_declaration .)


state 165

    (46) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR . SEMI selection_stmt

    SEMI            shift and go to state 209


state 166

    (58) fun_declaration -> FUNCTION ID LPAREN params . RPAREN
    (59) fun_declaration -> FUNCTION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 210


state 167

    (60) params -> param_list .
    (62) param_list -> param_list . COMMA param_list

    RPAREN          reduce using rule 60 (params -> param_list .)
    COMMA           shift and go to state 211


state 168

    (61) params -> empty .

    RPAREN          reduce using rule 61 (params -> empty .)


state 169

    (63) param_list -> param .

    COMMA           reduce using rule 63 (param_list -> param .)
    RPAREN          reduce using rule 63 (param_list -> param .)


state 170

    (64) param -> IDVAR .
    (65) param -> IDVAR . LBRACKET RBRACKET

    COMMA           reduce using rule 64 (param -> IDVAR .)
    RPAREN          reduce using rule 64 (param -> IDVAR .)
    LBRACKET        shift and go to state 212


state 171

    (140) typeclass -> ID IDVAR EQUAL NEW . constructor SEMI
    (141) constructor -> . ID LPAREN RPAREN
    (142) constructor -> . ID LPAREN args RPAREN

    ID              shift and go to state 213

    constructor                    shift and go to state 214

state 172

    (19) header_declaration -> REQUIRE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 215


state 173

    (20) header_declaration -> INCLUDE LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 216


state 174

    (22) class_declaration -> CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 217


state 175

    (23) attributes -> attribute .
    (24) attributes -> attribute . attributes
    (25) attribute -> attribute . area var_declaration
    (27) attribute -> attribute . area fun_declaration
    (23) attributes -> . attribute
    (24) attributes -> . attribute attributes
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (25) attribute -> . attribute area var_declaration
    (26) attribute -> . area var_declaration
    (27) attribute -> . attribute area fun_declaration
    (28) attribute -> . area fun_declaration
    (29) attribute -> . fun_declaration
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt

    RBLOCK          reduce using rule 23 (attributes -> attribute .)
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    FUNCTION        shift and go to state 18

    attribute                      shift and go to state 175
    attributes                     shift and go to state 218
    area                           shift and go to state 219
    fun_declaration                shift and go to state 177

state 176

    (26) attribute -> area . var_declaration
    (28) attribute -> area . fun_declaration
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 18

    var_declaration                shift and go to state 220
    fun_declaration                shift and go to state 221
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 177

    (29) attribute -> fun_declaration .

    PRIVATE         reduce using rule 29 (attribute -> fun_declaration .)
    PUBLIC          reduce using rule 29 (attribute -> fun_declaration .)
    PROTECTED       reduce using rule 29 (attribute -> fun_declaration .)
    FUNCTION        reduce using rule 29 (attribute -> fun_declaration .)
    RBLOCK          reduce using rule 29 (attribute -> fun_declaration .)


state 178

    (79) selection_stmt -> IF LPAREN expression RPAREN . statement
    (80) selection_stmt -> IF LPAREN expression RPAREN . statement selection
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    FUNCTION        reduce using rule 143 (empty -> .)
    REQUIRE         reduce using rule 143 (empty -> .)
    INCLUDE         reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    expression                     shift and go to state 115
    statement                      shift and go to state 222
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 179

    (83) selection_stmt -> SWITCH LPAREN var RPAREN . statement
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    FUNCTION        reduce using rule 143 (empty -> .)
    REQUIRE         reduce using rule 143 (empty -> .)
    INCLUDE         reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    var                            shift and go to state 79
    statement                      shift and go to state 223
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 180

    (84) selection_stmt -> CASE NUM COLON statement . BREAK SEMI

    BREAK           shift and go to state 224


state 181

    (85) selection_stmt -> CASE STRING COLON statement . BREAK SEMI

    BREAK           shift and go to state 225


state 182

    (86) selection_stmt -> DEFAULT COLON statement BREAK . SEMI

    SEMI            shift and go to state 226


state 183

    (78) expression_stmt -> expression SEMI .

    BREAK           reduce using rule 78 (expression_stmt -> expression SEMI .)
    SEMI            reduce using rule 78 (expression_stmt -> expression SEMI .)
    ELSE            reduce using rule 78 (expression_stmt -> expression SEMI .)
    ELSEIF          reduce using rule 78 (expression_stmt -> expression SEMI .)
    IDVAR           reduce using rule 78 (expression_stmt -> expression SEMI .)
    TIMESTIMES      reduce using rule 78 (expression_stmt -> expression SEMI .)
    AMPERSANT       reduce using rule 78 (expression_stmt -> expression SEMI .)
    FUNCTION        reduce using rule 78 (expression_stmt -> expression SEMI .)
    PRIVATE         reduce using rule 78 (expression_stmt -> expression SEMI .)
    PUBLIC          reduce using rule 78 (expression_stmt -> expression SEMI .)
    PROTECTED       reduce using rule 78 (expression_stmt -> expression SEMI .)
    REQUIRE         reduce using rule 78 (expression_stmt -> expression SEMI .)
    INCLUDE         reduce using rule 78 (expression_stmt -> expression SEMI .)
    CLASS           reduce using rule 78 (expression_stmt -> expression SEMI .)
    IF              reduce using rule 78 (expression_stmt -> expression SEMI .)
    SWITCH          reduce using rule 78 (expression_stmt -> expression SEMI .)
    CASE            reduce using rule 78 (expression_stmt -> expression SEMI .)
    DEFAULT         reduce using rule 78 (expression_stmt -> expression SEMI .)
    FOR             reduce using rule 78 (expression_stmt -> expression SEMI .)
    WHILE           reduce using rule 78 (expression_stmt -> expression SEMI .)
    DO              reduce using rule 78 (expression_stmt -> expression SEMI .)
    ID              reduce using rule 78 (expression_stmt -> expression SEMI .)
    ECHO            reduce using rule 78 (expression_stmt -> expression SEMI .)
    CLOSETAG        reduce using rule 78 (expression_stmt -> expression SEMI .)
    RBLOCK          reduce using rule 78 (expression_stmt -> expression SEMI .)
    LBLOCK          reduce using rule 78 (expression_stmt -> expression SEMI .)
    RETURN          reduce using rule 78 (expression_stmt -> expression SEMI .)
    LPAREN          reduce using rule 78 (expression_stmt -> expression SEMI .)
    NUM             reduce using rule 78 (expression_stmt -> expression SEMI .)
    STRING          reduce using rule 78 (expression_stmt -> expression SEMI .)
    TRUE            reduce using rule 78 (expression_stmt -> expression SEMI .)
    FALSE           reduce using rule 78 (expression_stmt -> expression SEMI .)


state 184

    (66) compount_stmt -> LBLOCK echo_stmt . local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (67) local_declarations -> . local_declarations var_declaration
    (68) local_declarations -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 39
    IDVAR           reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    LBLOCK          reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    SWITCH          reduce using rule 143 (empty -> .)
    CASE            reduce using rule 143 (empty -> .)
    DEFAULT         reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    CLASS           reduce using rule 143 (empty -> .)
    PRIVATE         reduce using rule 143 (empty -> .)
    PUBLIC          reduce using rule 143 (empty -> .)
    PROTECTED       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)
    NUM             reduce using rule 143 (empty -> .)
    STRING          reduce using rule 143 (empty -> .)
    TRUE            reduce using rule 143 (empty -> .)
    FALSE           reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)

  ! ECHO            [ reduce using rule 143 (empty -> .) ]

    local_declarations             shift and go to state 227
    empty                          shift and go to state 228

state 185

    (90) return_stmt -> RETURN SEMI .

    BREAK           reduce using rule 90 (return_stmt -> RETURN SEMI .)
    SEMI            reduce using rule 90 (return_stmt -> RETURN SEMI .)
    ELSE            reduce using rule 90 (return_stmt -> RETURN SEMI .)
    ELSEIF          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    IDVAR           reduce using rule 90 (return_stmt -> RETURN SEMI .)
    TIMESTIMES      reduce using rule 90 (return_stmt -> RETURN SEMI .)
    AMPERSANT       reduce using rule 90 (return_stmt -> RETURN SEMI .)
    FUNCTION        reduce using rule 90 (return_stmt -> RETURN SEMI .)
    PRIVATE         reduce using rule 90 (return_stmt -> RETURN SEMI .)
    PUBLIC          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    PROTECTED       reduce using rule 90 (return_stmt -> RETURN SEMI .)
    REQUIRE         reduce using rule 90 (return_stmt -> RETURN SEMI .)
    INCLUDE         reduce using rule 90 (return_stmt -> RETURN SEMI .)
    CLASS           reduce using rule 90 (return_stmt -> RETURN SEMI .)
    IF              reduce using rule 90 (return_stmt -> RETURN SEMI .)
    SWITCH          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    CASE            reduce using rule 90 (return_stmt -> RETURN SEMI .)
    DEFAULT         reduce using rule 90 (return_stmt -> RETURN SEMI .)
    FOR             reduce using rule 90 (return_stmt -> RETURN SEMI .)
    WHILE           reduce using rule 90 (return_stmt -> RETURN SEMI .)
    DO              reduce using rule 90 (return_stmt -> RETURN SEMI .)
    ID              reduce using rule 90 (return_stmt -> RETURN SEMI .)
    ECHO            reduce using rule 90 (return_stmt -> RETURN SEMI .)
    CLOSETAG        reduce using rule 90 (return_stmt -> RETURN SEMI .)
    RBLOCK          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    LBLOCK          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    RETURN          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    LPAREN          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    NUM             reduce using rule 90 (return_stmt -> RETURN SEMI .)
    STRING          reduce using rule 90 (return_stmt -> RETURN SEMI .)
    TRUE            reduce using rule 90 (return_stmt -> RETURN SEMI .)
    FALSE           reduce using rule 90 (return_stmt -> RETURN SEMI .)


state 186

    (91) return_stmt -> RETURN expression . SEMI
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    SEMI            shift and go to state 229
    AND             shift and go to state 130
    OR              shift and go to state 131


state 187

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI . expression SEMI additive_expression RPAREN statement
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 230
    additive_expression            shift and go to state 80
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 188

    (88) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    FUNCTION        reduce using rule 143 (empty -> .)
    REQUIRE         reduce using rule 143 (empty -> .)
    INCLUDE         reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    expression                     shift and go to state 115
    statement                      shift and go to state 231
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 189

    (89) iteration_stmt -> DO LBLOCK statement SEMI . RBLOCK WHILE LPAREN expression RPAREN

    RBLOCK          shift and go to state 232


state 190

    (21) class_declaration -> area CLASS ID LBLOCK attributes . RBLOCK

    RBLOCK          shift and go to state 233


state 191

    (132) factor -> IDVAR LPAREN args . RPAREN

    RPAREN          shift and go to state 234


state 192

    (133) args -> args_list .
    (136) args_list -> args_list . COMMA expression

    RPAREN          reduce using rule 133 (args -> args_list .)
    COMMA           shift and go to state 235


state 193

    (134) args -> empty .

    RPAREN          reduce using rule 134 (args -> empty .)


state 194

    (135) args -> VOID .

    RPAREN          reduce using rule 135 (args -> VOID .)


state 195

    (137) args_list -> expression .
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    COMMA           reduce using rule 137 (args_list -> expression .)
    RPAREN          reduce using rule 137 (args_list -> expression .)
    AND             shift and go to state 130
    OR              shift and go to state 131


state 196

    (95) expression -> expression AND expression .
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RBRACKET        reduce using rule 95 (expression -> expression AND expression .)
    AND             reduce using rule 95 (expression -> expression AND expression .)
    OR              reduce using rule 95 (expression -> expression AND expression .)
    RPAREN          reduce using rule 95 (expression -> expression AND expression .)
    SEMI            reduce using rule 95 (expression -> expression AND expression .)
    COMMA           reduce using rule 95 (expression -> expression AND expression .)

  ! AND             [ shift and go to state 130 ]
  ! OR              [ shift and go to state 131 ]


state 197

    (96) expression -> expression OR expression .
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RBRACKET        reduce using rule 96 (expression -> expression OR expression .)
    OR              reduce using rule 96 (expression -> expression OR expression .)
    RPAREN          reduce using rule 96 (expression -> expression OR expression .)
    SEMI            reduce using rule 96 (expression -> expression OR expression .)
    COMMA           reduce using rule 96 (expression -> expression OR expression .)
    AND             shift and go to state 130

  ! AND             [ reduce using rule 96 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 131 ]


state 198

    (92) expression -> assing_var EQUAL expression .
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RBRACKET        reduce using rule 92 (expression -> assing_var EQUAL expression .)
    RPAREN          reduce using rule 92 (expression -> assing_var EQUAL expression .)
    SEMI            reduce using rule 92 (expression -> assing_var EQUAL expression .)
    COMMA           reduce using rule 92 (expression -> assing_var EQUAL expression .)
    AND             shift and go to state 130
    OR              shift and go to state 131

  ! AND             [ reduce using rule 92 (expression -> assing_var EQUAL expression .) ]
  ! OR              [ reduce using rule 92 (expression -> assing_var EQUAL expression .) ]


state 199

    (94) expression -> assing_var EQUAL AMPERSANT . IDVAR

    IDVAR           shift and go to state 236


state 200

    (100) simple_expression -> additive_expression relop additive_expression .
    (117) additive_expression -> additive_expression . addop term
    (121) addop -> . PLUS
    (122) addop -> . MINUS

    RBRACKET        reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    AND             reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    SEMI            reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    COMMA           reduce using rule 100 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 150
    MINUS           shift and go to state 151

    addop                          shift and go to state 134

state 201

    (132) factor -> IDVAR . LPAREN args RPAREN
    (98) var -> IDVAR .
    (99) var -> IDVAR . LBRACKET expression RBRACKET

    LPAREN          shift and go to state 128
    MINUSMINUS      reduce using rule 98 (var -> IDVAR .)
    PLUSPLUS        reduce using rule 98 (var -> IDVAR .)
    TIMES           reduce using rule 98 (var -> IDVAR .)
    DIVIDE          reduce using rule 98 (var -> IDVAR .)
    PLUS            reduce using rule 98 (var -> IDVAR .)
    MINUS           reduce using rule 98 (var -> IDVAR .)
    RBRACKET        reduce using rule 98 (var -> IDVAR .)
    AND             reduce using rule 98 (var -> IDVAR .)
    OR              reduce using rule 98 (var -> IDVAR .)
    SEMI            reduce using rule 98 (var -> IDVAR .)
    RPAREN          reduce using rule 98 (var -> IDVAR .)
    COMMA           reduce using rule 98 (var -> IDVAR .)
    LESS            reduce using rule 98 (var -> IDVAR .)
    LESSEQUAL       reduce using rule 98 (var -> IDVAR .)
    GREATER         reduce using rule 98 (var -> IDVAR .)
    GREATEREQUAL    reduce using rule 98 (var -> IDVAR .)
    DEQUAL          reduce using rule 98 (var -> IDVAR .)
    DISTINT         reduce using rule 98 (var -> IDVAR .)
    ISEQUAL         reduce using rule 98 (var -> IDVAR .)
    IS_IDENTICAL    reduce using rule 98 (var -> IDVAR .)
    IS_NOT_IDENTICAL reduce using rule 98 (var -> IDVAR .)
    SR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    SL_EQUAL        reduce using rule 98 (var -> IDVAR .)
    AND_EQUAL       reduce using rule 98 (var -> IDVAR .)
    OR_EQUAL        reduce using rule 98 (var -> IDVAR .)
    XOR_EQUAL       reduce using rule 98 (var -> IDVAR .)
    CONCAT_EQUAL    reduce using rule 98 (var -> IDVAR .)
    LBRACKET        shift and go to state 41


state 202

    (117) additive_expression -> additive_expression addop term .
    (123) term -> term . mulop factor
    (125) mulop -> . TIMES
    (126) mulop -> . DIVIDE

    LESS            reduce using rule 117 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 117 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 117 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 117 (additive_expression -> additive_expression addop term .)
    DEQUAL          reduce using rule 117 (additive_expression -> additive_expression addop term .)
    DISTINT         reduce using rule 117 (additive_expression -> additive_expression addop term .)
    ISEQUAL         reduce using rule 117 (additive_expression -> additive_expression addop term .)
    IS_IDENTICAL    reduce using rule 117 (additive_expression -> additive_expression addop term .)
    IS_NOT_IDENTICAL reduce using rule 117 (additive_expression -> additive_expression addop term .)
    SR_EQUAL        reduce using rule 117 (additive_expression -> additive_expression addop term .)
    SL_EQUAL        reduce using rule 117 (additive_expression -> additive_expression addop term .)
    AND_EQUAL       reduce using rule 117 (additive_expression -> additive_expression addop term .)
    OR_EQUAL        reduce using rule 117 (additive_expression -> additive_expression addop term .)
    XOR_EQUAL       reduce using rule 117 (additive_expression -> additive_expression addop term .)
    CONCAT_EQUAL    reduce using rule 117 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 117 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 117 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 117 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 117 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 117 (additive_expression -> additive_expression addop term .)
    SEMI            reduce using rule 117 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 117 (additive_expression -> additive_expression addop term .)
    COMMA           reduce using rule 117 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 155
    DIVIDE          shift and go to state 156

    mulop                          shift and go to state 154

state 203

    (123) term -> term mulop factor .

    MINUSMINUS      reduce using rule 123 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 123 (term -> term mulop factor .)
    TIMES           reduce using rule 123 (term -> term mulop factor .)
    DIVIDE          reduce using rule 123 (term -> term mulop factor .)
    LESS            reduce using rule 123 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 123 (term -> term mulop factor .)
    GREATER         reduce using rule 123 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 123 (term -> term mulop factor .)
    DEQUAL          reduce using rule 123 (term -> term mulop factor .)
    DISTINT         reduce using rule 123 (term -> term mulop factor .)
    ISEQUAL         reduce using rule 123 (term -> term mulop factor .)
    IS_IDENTICAL    reduce using rule 123 (term -> term mulop factor .)
    IS_NOT_IDENTICAL reduce using rule 123 (term -> term mulop factor .)
    SR_EQUAL        reduce using rule 123 (term -> term mulop factor .)
    SL_EQUAL        reduce using rule 123 (term -> term mulop factor .)
    AND_EQUAL       reduce using rule 123 (term -> term mulop factor .)
    OR_EQUAL        reduce using rule 123 (term -> term mulop factor .)
    XOR_EQUAL       reduce using rule 123 (term -> term mulop factor .)
    CONCAT_EQUAL    reduce using rule 123 (term -> term mulop factor .)
    PLUS            reduce using rule 123 (term -> term mulop factor .)
    MINUS           reduce using rule 123 (term -> term mulop factor .)
    RBRACKET        reduce using rule 123 (term -> term mulop factor .)
    AND             reduce using rule 123 (term -> term mulop factor .)
    OR              reduce using rule 123 (term -> term mulop factor .)
    SEMI            reduce using rule 123 (term -> term mulop factor .)
    RPAREN          reduce using rule 123 (term -> term mulop factor .)
    COMMA           reduce using rule 123 (term -> term mulop factor .)


state 204

    (127) factor -> LPAREN expression RPAREN .

    MINUSMINUS      reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    DEQUAL          reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    DISTINT         reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    SR_EQUAL        reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    SL_EQUAL        reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    AND_EQUAL       reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    OR_EQUAL        reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    XOR_EQUAL       reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    CONCAT_EQUAL    reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 127 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 127 (factor -> LPAREN expression RPAREN .)


state 205

    (37) var_declaration -> assing_var IGUAL NUM SEMI var_declaration .

    IDVAR           reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TIMESTIMES      reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    AMPERSANT       reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FUNCTION        reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PRIVATE         reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PUBLIC          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    PROTECTED       reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    REQUIRE         reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    INCLUDE         reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLASS           reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    IF              reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    SWITCH          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CASE            reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DEFAULT         reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FOR             reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    WHILE           reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    DO              reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ID              reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    ECHO            reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    CLOSETAG        reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    SEMI            reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RBLOCK          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LBLOCK          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    RETURN          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    LPAREN          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    NUM             reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    STRING          reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    TRUE            reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)
    FALSE           reduce using rule 37 (var_declaration -> assing_var IGUAL NUM SEMI var_declaration .)


state 206

    (39) var_declaration -> assing_var IGUAL STRING SEMI var_declaration .

    IDVAR           reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TIMESTIMES      reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    AMPERSANT       reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FUNCTION        reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PRIVATE         reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PUBLIC          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    PROTECTED       reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    REQUIRE         reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    INCLUDE         reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLASS           reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    IF              reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    SWITCH          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CASE            reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DEFAULT         reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FOR             reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    WHILE           reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    DO              reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ID              reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    ECHO            reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    CLOSETAG        reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    SEMI            reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RBLOCK          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LBLOCK          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    RETURN          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    LPAREN          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    NUM             reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    STRING          reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    TRUE            reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)
    FALSE           reduce using rule 39 (var_declaration -> assing_var IGUAL STRING SEMI var_declaration .)


state 207

    (41) var_declaration -> assing_var IGUAL boolean SEMI var_declaration .

    IDVAR           reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TIMESTIMES      reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    AMPERSANT       reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FUNCTION        reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PRIVATE         reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PUBLIC          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    PROTECTED       reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    REQUIRE         reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    INCLUDE         reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLASS           reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    IF              reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    SWITCH          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CASE            reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DEFAULT         reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FOR             reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    WHILE           reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    DO              reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ID              reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    ECHO            reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    CLOSETAG        reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    SEMI            reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LBLOCK          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    RETURN          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    LPAREN          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    NUM             reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    STRING          reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    TRUE            reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)
    FALSE           reduce using rule 41 (var_declaration -> assing_var IGUAL boolean SEMI var_declaration .)


state 208

    (43) var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .

    IDVAR           reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TIMESTIMES      reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    AMPERSANT       reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FUNCTION        reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PRIVATE         reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PUBLIC          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    PROTECTED       reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    REQUIRE         reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    INCLUDE         reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLASS           reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    IF              reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    SWITCH          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CASE            reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DEFAULT         reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FOR             reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    WHILE           reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    DO              reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ID              reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    ECHO            reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    CLOSETAG        reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    SEMI            reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LBLOCK          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    RETURN          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    LPAREN          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    NUM             reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    STRING          reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    TRUE            reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)
    FALSE           reduce using rule 43 (var_declaration -> assing_var IGUAL IDVAR SEMI var_declaration .)


state 209

    (46) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI . selection_stmt
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI

    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31

    selection_stmt                 shift and go to state 237

state 210

    (58) fun_declaration -> FUNCTION ID LPAREN params RPAREN .
    (59) fun_declaration -> FUNCTION ID LPAREN params RPAREN . compount_stmt
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK

    IDVAR           reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    TIMESTIMES      reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    AMPERSANT       reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FUNCTION        reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PRIVATE         reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PUBLIC          reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    PROTECTED       reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    REQUIRE         reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    INCLUDE         reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLASS           reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    IF              reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SWITCH          reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CASE            reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DEFAULT         reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    FOR             reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    WHILE           reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    DO              reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ID              reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    ECHO            reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    CLOSETAG        reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    SEMI            reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 58 (fun_declaration -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 116

    compount_stmt                  shift and go to state 238

state 211

    (62) param_list -> param_list COMMA . param_list
    (62) param_list -> . param_list COMMA param_list
    (63) param_list -> . param
    (64) param -> . IDVAR
    (65) param -> . IDVAR LBRACKET RBRACKET

    IDVAR           shift and go to state 170

    param_list                     shift and go to state 239
    param                          shift and go to state 169

state 212

    (65) param -> IDVAR LBRACKET . RBRACKET

    RBRACKET        shift and go to state 240


state 213

    (141) constructor -> ID . LPAREN RPAREN
    (142) constructor -> ID . LPAREN args RPAREN

    LPAREN          shift and go to state 241


state 214

    (140) typeclass -> ID IDVAR EQUAL NEW constructor . SEMI

    SEMI            shift and go to state 242


state 215

    (19) header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 19 (header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI .)


state 216

    (20) header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .

    IDVAR           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    TIMESTIMES      reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    AMPERSANT       reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FUNCTION        reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PRIVATE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PUBLIC          reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    PROTECTED       reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    REQUIRE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    INCLUDE         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLASS           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    IF              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    SWITCH          reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CASE            reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DEFAULT         reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    FOR             reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    WHILE           reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    DO              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ID              reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    ECHO            reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)
    CLOSETAG        reduce using rule 20 (header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI .)


state 217

    (22) class_declaration -> CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 22 (class_declaration -> CLASS ID LBLOCK attributes RBLOCK .)


state 218

    (24) attributes -> attribute attributes .

    RBLOCK          reduce using rule 24 (attributes -> attribute attributes .)


state 219

    (25) attribute -> attribute area . var_declaration
    (27) attribute -> attribute area . fun_declaration
    (26) attribute -> area . var_declaration
    (28) attribute -> area . fun_declaration
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (58) fun_declaration -> . FUNCTION ID LPAREN params RPAREN
    (59) fun_declaration -> . FUNCTION ID LPAREN params RPAREN compount_stmt
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    FUNCTION        shift and go to state 18

    var_declaration                shift and go to state 243
    fun_declaration                shift and go to state 244
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 220

    (26) attribute -> area var_declaration .

    PRIVATE         reduce using rule 26 (attribute -> area var_declaration .)
    PUBLIC          reduce using rule 26 (attribute -> area var_declaration .)
    PROTECTED       reduce using rule 26 (attribute -> area var_declaration .)
    FUNCTION        reduce using rule 26 (attribute -> area var_declaration .)
    RBLOCK          reduce using rule 26 (attribute -> area var_declaration .)


state 221

    (28) attribute -> area fun_declaration .

    PRIVATE         reduce using rule 28 (attribute -> area fun_declaration .)
    PUBLIC          reduce using rule 28 (attribute -> area fun_declaration .)
    PROTECTED       reduce using rule 28 (attribute -> area fun_declaration .)
    FUNCTION        reduce using rule 28 (attribute -> area fun_declaration .)
    RBLOCK          reduce using rule 28 (attribute -> area fun_declaration .)


state 222

    (79) selection_stmt -> IF LPAREN expression RPAREN statement .
    (80) selection_stmt -> IF LPAREN expression RPAREN statement . selection
    (81) selection -> . ELSE statement
    (82) selection -> . ELSEIF statement selection

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    IDVAR           reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DO              reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUM             reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 246
    ELSEIF          shift and go to state 247

  ! ELSE            [ reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 79 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]

    selection                      shift and go to state 245

state 223

    (83) selection_stmt -> SWITCH LPAREN var RPAREN statement .

    IDVAR           reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TIMESTIMES      reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    AMPERSANT       reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FUNCTION        reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PRIVATE         reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PUBLIC          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    PROTECTED       reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    REQUIRE         reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    INCLUDE         reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLASS           reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    IF              reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SWITCH          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CASE            reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DEFAULT         reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FOR             reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    WHILE           reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    DO              reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ID              reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ECHO            reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    CLOSETAG        reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    BREAK           reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    SEMI            reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSE            reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    ELSEIF          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RBLOCK          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LBLOCK          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    RETURN          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    LPAREN          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    NUM             reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    STRING          reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    TRUE            reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)
    FALSE           reduce using rule 83 (selection_stmt -> SWITCH LPAREN var RPAREN statement .)


state 224

    (84) selection_stmt -> CASE NUM COLON statement BREAK . SEMI

    SEMI            shift and go to state 248


state 225

    (85) selection_stmt -> CASE STRING COLON statement BREAK . SEMI

    SEMI            shift and go to state 249


state 226

    (86) selection_stmt -> DEFAULT COLON statement BREAK SEMI .

    IDVAR           reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLASS           reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    IF              reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CASE            reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FOR             reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    WHILE           reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    DO              reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ID              reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ECHO            reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    BREAK           reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    SEMI            reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSE            reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    RETURN          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    NUM             reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    STRING          reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    TRUE            reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)
    FALSE           reduce using rule 86 (selection_stmt -> DEFAULT COLON statement BREAK SEMI .)


state 227

    (66) compount_stmt -> LBLOCK echo_stmt local_declarations . echo_stmt statement_list echo_stmt RBLOCK
    (67) local_declarations -> local_declarations . var_declaration
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (33) var_declaration -> . IDVAR SEMI var_declaration
    (34) var_declaration -> . IDVAR SEMI
    (35) var_declaration -> . TIMESTIMES IDVAR SEMI
    (36) var_declaration -> . TIMESTIMES IDVAR SEMI var_declaration
    (37) var_declaration -> . assing_var IGUAL NUM SEMI var_declaration
    (38) var_declaration -> . assing_var IGUAL NUM SEMI
    (39) var_declaration -> . assing_var IGUAL STRING SEMI var_declaration
    (40) var_declaration -> . assing_var IGUAL STRING SEMI
    (41) var_declaration -> . assing_var IGUAL boolean SEMI var_declaration
    (42) var_declaration -> . assing_var IGUAL boolean SEMI
    (43) var_declaration -> . assing_var IGUAL IDVAR SEMI var_declaration
    (44) var_declaration -> . assing_var IGUAL IDVAR SEMI
    (45) var_declaration -> . AMPERSANT IDVAR SEMI var_declaration
    (46) var_declaration -> . AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt
    (47) var_declaration -> . AMPERSANT IDVAR SEMI
    (48) var_declaration -> . assing_var IGUAL simple_expression SEMI
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET

  ! shift/reduce conflict for IDVAR resolved as shift
    IDVAR           shift and go to state 14
    TIMESTIMES      shift and go to state 15
    AMPERSANT       shift and go to state 17
    ECHO            reduce using rule 143 (empty -> .)
    LBLOCK          reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    SWITCH          reduce using rule 143 (empty -> .)
    CASE            reduce using rule 143 (empty -> .)
    DEFAULT         reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    CLASS           reduce using rule 143 (empty -> .)
    PRIVATE         reduce using rule 143 (empty -> .)
    PUBLIC          reduce using rule 143 (empty -> .)
    PROTECTED       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)
    NUM             reduce using rule 143 (empty -> .)
    STRING          reduce using rule 143 (empty -> .)
    TRUE            reduce using rule 143 (empty -> .)
    FALSE           reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]

    echo_stmt                      shift and go to state 250
    var_declaration                shift and go to state 251
    empty                          shift and go to state 26
    assing_var                     shift and go to state 16
    var                            shift and go to state 29

state 228

    (68) local_declarations -> empty .

    IDVAR           reduce using rule 68 (local_declarations -> empty .)
    TIMESTIMES      reduce using rule 68 (local_declarations -> empty .)
    AMPERSANT       reduce using rule 68 (local_declarations -> empty .)
    ECHO            reduce using rule 68 (local_declarations -> empty .)
    LBLOCK          reduce using rule 68 (local_declarations -> empty .)
    IF              reduce using rule 68 (local_declarations -> empty .)
    SWITCH          reduce using rule 68 (local_declarations -> empty .)
    CASE            reduce using rule 68 (local_declarations -> empty .)
    DEFAULT         reduce using rule 68 (local_declarations -> empty .)
    FOR             reduce using rule 68 (local_declarations -> empty .)
    WHILE           reduce using rule 68 (local_declarations -> empty .)
    DO              reduce using rule 68 (local_declarations -> empty .)
    RETURN          reduce using rule 68 (local_declarations -> empty .)
    CLASS           reduce using rule 68 (local_declarations -> empty .)
    PRIVATE         reduce using rule 68 (local_declarations -> empty .)
    PUBLIC          reduce using rule 68 (local_declarations -> empty .)
    PROTECTED       reduce using rule 68 (local_declarations -> empty .)
    LPAREN          reduce using rule 68 (local_declarations -> empty .)
    NUM             reduce using rule 68 (local_declarations -> empty .)
    STRING          reduce using rule 68 (local_declarations -> empty .)
    TRUE            reduce using rule 68 (local_declarations -> empty .)
    FALSE           reduce using rule 68 (local_declarations -> empty .)
    RBLOCK          reduce using rule 68 (local_declarations -> empty .)


state 229

    (91) return_stmt -> RETURN expression SEMI .

    BREAK           reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    SEMI            reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    ELSE            reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    ELSEIF          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    IDVAR           reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    TIMESTIMES      reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    AMPERSANT       reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    FUNCTION        reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    PRIVATE         reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    PUBLIC          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    PROTECTED       reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    REQUIRE         reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    INCLUDE         reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    CLASS           reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    IF              reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    SWITCH          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    CASE            reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    FOR             reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    WHILE           reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    DO              reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    ID              reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    ECHO            reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    CLOSETAG        reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    RBLOCK          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    LBLOCK          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    RETURN          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    LPAREN          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    NUM             reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    STRING          reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    TRUE            reduce using rule 91 (return_stmt -> RETURN expression SEMI .)
    FALSE           reduce using rule 91 (return_stmt -> RETURN expression SEMI .)


state 230

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI expression . SEMI additive_expression RPAREN statement
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    SEMI            shift and go to state 252
    AND             shift and go to state 130
    OR              shift and go to state 131


state 231

    (88) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    IDVAR           reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TIMESTIMES      reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    AMPERSANT       reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PRIVATE         reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PUBLIC          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    PROTECTED       reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    REQUIRE         reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    INCLUDE         reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DO              reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CLOSETAG        reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RBLOCK          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LBLOCK          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUM             reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    TRUE            reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FALSE           reduce using rule 88 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 232

    (89) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK . WHILE LPAREN expression RPAREN

    WHILE           shift and go to state 253


state 233

    (21) class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .

    IDVAR           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TIMESTIMES      reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    AMPERSANT       reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FUNCTION        reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PRIVATE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PUBLIC          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    PROTECTED       reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    REQUIRE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    INCLUDE         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLASS           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    IF              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SWITCH          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CASE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DEFAULT         reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FOR             reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    WHILE           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    DO              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ID              reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ECHO            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    CLOSETAG        reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    BREAK           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    SEMI            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    ELSEIF          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RBLOCK          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LBLOCK          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    RETURN          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    LPAREN          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    NUM             reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    STRING          reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    TRUE            reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)
    FALSE           reduce using rule 21 (class_declaration -> area CLASS ID LBLOCK attributes RBLOCK .)


state 234

    (132) factor -> IDVAR LPAREN args RPAREN .

    MINUSMINUS      reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    PLUSPLUS        reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    TIMES           reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    DIVIDE          reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    LESS            reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    LESSEQUAL       reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    GREATER         reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    GREATEREQUAL    reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    DEQUAL          reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    DISTINT         reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    ISEQUAL         reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    IS_IDENTICAL    reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    SR_EQUAL        reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    SL_EQUAL        reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    AND_EQUAL       reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    OR_EQUAL        reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    XOR_EQUAL       reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    CONCAT_EQUAL    reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    PLUS            reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    MINUS           reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    RBRACKET        reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    AND             reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    OR              reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    SEMI            reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    RPAREN          reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)
    COMMA           reduce using rule 132 (factor -> IDVAR LPAREN args RPAREN .)


state 235

    (136) args_list -> args_list COMMA . expression
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 254
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 236

    (94) expression -> assing_var EQUAL AMPERSANT IDVAR .

    RBRACKET        reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    AND             reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    OR              reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    RPAREN          reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    SEMI            reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)
    COMMA           reduce using rule 94 (expression -> assing_var EQUAL AMPERSANT IDVAR .)


state 237

    (46) var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .

    IDVAR           reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TIMESTIMES      reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    AMPERSANT       reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FUNCTION        reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PRIVATE         reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PUBLIC          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    PROTECTED       reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    REQUIRE         reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    INCLUDE         reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLASS           reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    IF              reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SWITCH          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CASE            reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DEFAULT         reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FOR             reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    WHILE           reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    DO              reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ID              reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    ECHO            reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    CLOSETAG        reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    SEMI            reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RBLOCK          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LBLOCK          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    RETURN          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    LPAREN          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    NUM             reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    STRING          reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    TRUE            reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)
    FALSE           reduce using rule 46 (var_declaration -> AMPERSANT IDVAR IGUAL IDVAR SEMI selection_stmt .)


state 238

    (59) fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .

    IDVAR           reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    TIMESTIMES      reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    AMPERSANT       reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FUNCTION        reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PRIVATE         reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PUBLIC          reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    PROTECTED       reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    REQUIRE         reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    INCLUDE         reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLASS           reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    IF              reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SWITCH          reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CASE            reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DEFAULT         reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    FOR             reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    WHILE           reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    DO              reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    ECHO            reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    CLOSETAG        reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    SEMI            reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)
    RBLOCK          reduce using rule 59 (fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt .)


state 239

    (62) param_list -> param_list COMMA param_list .
    (62) param_list -> param_list . COMMA param_list

    COMMA           reduce using rule 62 (param_list -> param_list COMMA param_list .)
    RPAREN          reduce using rule 62 (param_list -> param_list COMMA param_list .)

  ! COMMA           [ shift and go to state 211 ]


state 240

    (65) param -> IDVAR LBRACKET RBRACKET .

    COMMA           reduce using rule 65 (param -> IDVAR LBRACKET RBRACKET .)
    RPAREN          reduce using rule 65 (param -> IDVAR LBRACKET RBRACKET .)


state 241

    (141) constructor -> ID LPAREN . RPAREN
    (142) constructor -> ID LPAREN . args RPAREN
    (133) args -> . args_list
    (134) args -> . empty
    (135) args -> . VOID
    (136) args_list -> . args_list COMMA expression
    (137) args_list -> . expression
    (143) empty -> .
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 255
    VOID            shift and go to state 194
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! RPAREN          [ reduce using rule 143 (empty -> .) ]

    args                           shift and go to state 256
    args_list                      shift and go to state 192
    empty                          shift and go to state 193
    expression                     shift and go to state 195
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 242

    (140) typeclass -> ID IDVAR EQUAL NEW constructor SEMI .

    IDVAR           reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    TIMESTIMES      reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    AMPERSANT       reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FUNCTION        reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PRIVATE         reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PUBLIC          reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    PROTECTED       reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    REQUIRE         reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    INCLUDE         reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLASS           reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    IF              reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    SWITCH          reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CASE            reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DEFAULT         reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    FOR             reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    WHILE           reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    DO              reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ID              reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    ECHO            reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)
    CLOSETAG        reduce using rule 140 (typeclass -> ID IDVAR EQUAL NEW constructor SEMI .)


state 243

    (25) attribute -> attribute area var_declaration .
    (26) attribute -> area var_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 25 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 25 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 25 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 25 (attribute -> attribute area var_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 25 (attribute -> attribute area var_declaration .)
    PRIVATE         reduce using rule 25 (attribute -> attribute area var_declaration .)
    PUBLIC          reduce using rule 25 (attribute -> attribute area var_declaration .)
    PROTECTED       reduce using rule 25 (attribute -> attribute area var_declaration .)
    FUNCTION        reduce using rule 25 (attribute -> attribute area var_declaration .)
    RBLOCK          reduce using rule 25 (attribute -> attribute area var_declaration .)

  ! PRIVATE         [ reduce using rule 26 (attribute -> area var_declaration .) ]
  ! PUBLIC          [ reduce using rule 26 (attribute -> area var_declaration .) ]
  ! PROTECTED       [ reduce using rule 26 (attribute -> area var_declaration .) ]
  ! FUNCTION        [ reduce using rule 26 (attribute -> area var_declaration .) ]
  ! RBLOCK          [ reduce using rule 26 (attribute -> area var_declaration .) ]


state 244

    (27) attribute -> attribute area fun_declaration .
    (28) attribute -> area fun_declaration .

  ! reduce/reduce conflict for PRIVATE resolved using rule 27 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 27 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for PROTECTED resolved using rule 27 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 27 (attribute -> attribute area fun_declaration .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 27 (attribute -> attribute area fun_declaration .)
    PRIVATE         reduce using rule 27 (attribute -> attribute area fun_declaration .)
    PUBLIC          reduce using rule 27 (attribute -> attribute area fun_declaration .)
    PROTECTED       reduce using rule 27 (attribute -> attribute area fun_declaration .)
    FUNCTION        reduce using rule 27 (attribute -> attribute area fun_declaration .)
    RBLOCK          reduce using rule 27 (attribute -> attribute area fun_declaration .)

  ! PRIVATE         [ reduce using rule 28 (attribute -> area fun_declaration .) ]
  ! PUBLIC          [ reduce using rule 28 (attribute -> area fun_declaration .) ]
  ! PROTECTED       [ reduce using rule 28 (attribute -> area fun_declaration .) ]
  ! FUNCTION        [ reduce using rule 28 (attribute -> area fun_declaration .) ]
  ! RBLOCK          [ reduce using rule 28 (attribute -> area fun_declaration .) ]


state 245

    (80) selection_stmt -> IF LPAREN expression RPAREN statement selection .

    IDVAR           reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TIMESTIMES      reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    AMPERSANT       reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FUNCTION        reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PRIVATE         reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PUBLIC          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    PROTECTED       reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    REQUIRE         reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    INCLUDE         reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLASS           reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    IF              reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SWITCH          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CASE            reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DEFAULT         reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FOR             reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    WHILE           reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    DO              reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ID              reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ECHO            reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    CLOSETAG        reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    BREAK           reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    SEMI            reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSE            reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    ELSEIF          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RBLOCK          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LBLOCK          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    RETURN          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    LPAREN          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    NUM             reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    STRING          reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    TRUE            reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)
    FALSE           reduce using rule 80 (selection_stmt -> IF LPAREN expression RPAREN statement selection .)


state 246

    (81) selection -> ELSE . statement
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    FUNCTION        reduce using rule 143 (empty -> .)
    REQUIRE         reduce using rule 143 (empty -> .)
    INCLUDE         reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    statement                      shift and go to state 257
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 247

    (82) selection -> ELSEIF . statement selection
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    statement                      shift and go to state 258
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 248

    (84) selection_stmt -> CASE NUM COLON statement BREAK SEMI .

    IDVAR           reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLASS           reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    IF              reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CASE            reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FOR             reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    WHILE           reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    DO              reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ID              reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ECHO            reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    BREAK           reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    SEMI            reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSE            reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    RETURN          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    NUM             reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    STRING          reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    TRUE            reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)
    FALSE           reduce using rule 84 (selection_stmt -> CASE NUM COLON statement BREAK SEMI .)


state 249

    (85) selection_stmt -> CASE STRING COLON statement BREAK SEMI .

    IDVAR           reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TIMESTIMES      reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    AMPERSANT       reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FUNCTION        reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PRIVATE         reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PUBLIC          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    PROTECTED       reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    REQUIRE         reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    INCLUDE         reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLASS           reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    IF              reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SWITCH          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CASE            reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DEFAULT         reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FOR             reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    WHILE           reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    DO              reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ID              reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ECHO            reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    CLOSETAG        reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    BREAK           reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    SEMI            reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSE            reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    ELSEIF          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RBLOCK          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LBLOCK          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    RETURN          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    LPAREN          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    NUM             reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    STRING          reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    TRUE            reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)
    FALSE           reduce using rule 85 (selection_stmt -> CASE STRING COLON statement BREAK SEMI .)


state 250

    (66) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt . statement_list echo_stmt RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (69) statement_list -> . statement_list statement
    (70) statement_list -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ECHO resolved as shift
    ECHO            shift and go to state 39
    LBLOCK          reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    SWITCH          reduce using rule 143 (empty -> .)
    CASE            reduce using rule 143 (empty -> .)
    DEFAULT         reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    DO              reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    CLASS           reduce using rule 143 (empty -> .)
    PRIVATE         reduce using rule 143 (empty -> .)
    PUBLIC          reduce using rule 143 (empty -> .)
    PROTECTED       reduce using rule 143 (empty -> .)
    IDVAR           reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)
    NUM             reduce using rule 143 (empty -> .)
    STRING          reduce using rule 143 (empty -> .)
    TRUE            reduce using rule 143 (empty -> .)
    FALSE           reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)

  ! ECHO            [ reduce using rule 143 (empty -> .) ]

    statement_list                 shift and go to state 259
    empty                          shift and go to state 260

state 251

    (67) local_declarations -> local_declarations var_declaration .

    IDVAR           reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    TIMESTIMES      reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    AMPERSANT       reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    ECHO            reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    LBLOCK          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    CLASS           reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    PUBLIC          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    PROTECTED       reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    LPAREN          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    NUM             reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    STRING          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    TRUE            reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    FALSE           reduce using rule 67 (local_declarations -> local_declarations var_declaration .)
    RBLOCK          reduce using rule 67 (local_declarations -> local_declarations var_declaration .)


state 252

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI . additive_expression RPAREN statement
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    IDVAR           shift and go to state 201
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    additive_expression            shift and go to state 261
    term                           shift and go to state 81
    factor                         shift and go to state 82
    var                            shift and go to state 93
    boolean                        shift and go to state 86

state 253

    (89) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE . LPAREN expression RPAREN

    LPAREN          shift and go to state 262


state 254

    (136) args_list -> args_list COMMA expression .
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    COMMA           reduce using rule 136 (args_list -> args_list COMMA expression .)
    RPAREN          reduce using rule 136 (args_list -> args_list COMMA expression .)
    AND             shift and go to state 130
    OR              shift and go to state 131


state 255

    (141) constructor -> ID LPAREN RPAREN .

    SEMI            reduce using rule 141 (constructor -> ID LPAREN RPAREN .)


state 256

    (142) constructor -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 263


state 257

    (81) selection -> ELSE statement .

    ELSE            reduce using rule 81 (selection -> ELSE statement .)
    ELSEIF          reduce using rule 81 (selection -> ELSE statement .)
    IDVAR           reduce using rule 81 (selection -> ELSE statement .)
    TIMESTIMES      reduce using rule 81 (selection -> ELSE statement .)
    AMPERSANT       reduce using rule 81 (selection -> ELSE statement .)
    FUNCTION        reduce using rule 81 (selection -> ELSE statement .)
    PRIVATE         reduce using rule 81 (selection -> ELSE statement .)
    PUBLIC          reduce using rule 81 (selection -> ELSE statement .)
    PROTECTED       reduce using rule 81 (selection -> ELSE statement .)
    REQUIRE         reduce using rule 81 (selection -> ELSE statement .)
    INCLUDE         reduce using rule 81 (selection -> ELSE statement .)
    CLASS           reduce using rule 81 (selection -> ELSE statement .)
    IF              reduce using rule 81 (selection -> ELSE statement .)
    SWITCH          reduce using rule 81 (selection -> ELSE statement .)
    CASE            reduce using rule 81 (selection -> ELSE statement .)
    DEFAULT         reduce using rule 81 (selection -> ELSE statement .)
    FOR             reduce using rule 81 (selection -> ELSE statement .)
    WHILE           reduce using rule 81 (selection -> ELSE statement .)
    DO              reduce using rule 81 (selection -> ELSE statement .)
    ID              reduce using rule 81 (selection -> ELSE statement .)
    ECHO            reduce using rule 81 (selection -> ELSE statement .)
    CLOSETAG        reduce using rule 81 (selection -> ELSE statement .)
    BREAK           reduce using rule 81 (selection -> ELSE statement .)
    SEMI            reduce using rule 81 (selection -> ELSE statement .)
    RBLOCK          reduce using rule 81 (selection -> ELSE statement .)
    LBLOCK          reduce using rule 81 (selection -> ELSE statement .)
    RETURN          reduce using rule 81 (selection -> ELSE statement .)
    LPAREN          reduce using rule 81 (selection -> ELSE statement .)
    NUM             reduce using rule 81 (selection -> ELSE statement .)
    STRING          reduce using rule 81 (selection -> ELSE statement .)
    TRUE            reduce using rule 81 (selection -> ELSE statement .)
    FALSE           reduce using rule 81 (selection -> ELSE statement .)


state 258

    (82) selection -> ELSEIF statement . selection
    (81) selection -> . ELSE statement
    (82) selection -> . ELSEIF statement selection

    ELSE            shift and go to state 246
    ELSEIF          shift and go to state 247

    selection                      shift and go to state 264

state 259

    (66) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list . echo_stmt RBLOCK
    (69) statement_list -> statement_list . statement
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (143) empty -> .
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RBLOCK          reduce using rule 143 (empty -> .)
    ECHO            reduce using rule 143 (empty -> .)
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    echo_stmt                      shift and go to state 265
    statement                      shift and go to state 266
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    expression                     shift and go to state 115
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    area                           shift and go to state 118
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 260

    (70) statement_list -> empty .

    LBLOCK          reduce using rule 70 (statement_list -> empty .)
    IF              reduce using rule 70 (statement_list -> empty .)
    SWITCH          reduce using rule 70 (statement_list -> empty .)
    CASE            reduce using rule 70 (statement_list -> empty .)
    DEFAULT         reduce using rule 70 (statement_list -> empty .)
    FOR             reduce using rule 70 (statement_list -> empty .)
    WHILE           reduce using rule 70 (statement_list -> empty .)
    DO              reduce using rule 70 (statement_list -> empty .)
    RETURN          reduce using rule 70 (statement_list -> empty .)
    CLASS           reduce using rule 70 (statement_list -> empty .)
    PRIVATE         reduce using rule 70 (statement_list -> empty .)
    PUBLIC          reduce using rule 70 (statement_list -> empty .)
    PROTECTED       reduce using rule 70 (statement_list -> empty .)
    IDVAR           reduce using rule 70 (statement_list -> empty .)
    LPAREN          reduce using rule 70 (statement_list -> empty .)
    NUM             reduce using rule 70 (statement_list -> empty .)
    STRING          reduce using rule 70 (statement_list -> empty .)
    TRUE            reduce using rule 70 (statement_list -> empty .)
    FALSE           reduce using rule 70 (statement_list -> empty .)
    RBLOCK          reduce using rule 70 (statement_list -> empty .)
    ECHO            reduce using rule 70 (statement_list -> empty .)


state 261

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression . RPAREN statement
    (117) additive_expression -> additive_expression . addop term
    (121) addop -> . PLUS
    (122) addop -> . MINUS

    RPAREN          shift and go to state 267
    PLUS            shift and go to state 150
    MINUS           shift and go to state 151

    addop                          shift and go to state 134

state 262

    (89) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN . expression RPAREN
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

    expression                     shift and go to state 268
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    var                            shift and go to state 79
    additive_expression            shift and go to state 80
    term                           shift and go to state 81
    factor                         shift and go to state 82
    boolean                        shift and go to state 86

state 263

    (142) constructor -> ID LPAREN args RPAREN .

    SEMI            reduce using rule 142 (constructor -> ID LPAREN args RPAREN .)


state 264

    (82) selection -> ELSEIF statement selection .

    ELSE            reduce using rule 82 (selection -> ELSEIF statement selection .)
    ELSEIF          reduce using rule 82 (selection -> ELSEIF statement selection .)
    IDVAR           reduce using rule 82 (selection -> ELSEIF statement selection .)
    TIMESTIMES      reduce using rule 82 (selection -> ELSEIF statement selection .)
    AMPERSANT       reduce using rule 82 (selection -> ELSEIF statement selection .)
    FUNCTION        reduce using rule 82 (selection -> ELSEIF statement selection .)
    PRIVATE         reduce using rule 82 (selection -> ELSEIF statement selection .)
    PUBLIC          reduce using rule 82 (selection -> ELSEIF statement selection .)
    PROTECTED       reduce using rule 82 (selection -> ELSEIF statement selection .)
    REQUIRE         reduce using rule 82 (selection -> ELSEIF statement selection .)
    INCLUDE         reduce using rule 82 (selection -> ELSEIF statement selection .)
    CLASS           reduce using rule 82 (selection -> ELSEIF statement selection .)
    IF              reduce using rule 82 (selection -> ELSEIF statement selection .)
    SWITCH          reduce using rule 82 (selection -> ELSEIF statement selection .)
    CASE            reduce using rule 82 (selection -> ELSEIF statement selection .)
    DEFAULT         reduce using rule 82 (selection -> ELSEIF statement selection .)
    FOR             reduce using rule 82 (selection -> ELSEIF statement selection .)
    WHILE           reduce using rule 82 (selection -> ELSEIF statement selection .)
    DO              reduce using rule 82 (selection -> ELSEIF statement selection .)
    ID              reduce using rule 82 (selection -> ELSEIF statement selection .)
    ECHO            reduce using rule 82 (selection -> ELSEIF statement selection .)
    CLOSETAG        reduce using rule 82 (selection -> ELSEIF statement selection .)
    BREAK           reduce using rule 82 (selection -> ELSEIF statement selection .)
    SEMI            reduce using rule 82 (selection -> ELSEIF statement selection .)
    RBLOCK          reduce using rule 82 (selection -> ELSEIF statement selection .)
    LBLOCK          reduce using rule 82 (selection -> ELSEIF statement selection .)
    RETURN          reduce using rule 82 (selection -> ELSEIF statement selection .)
    LPAREN          reduce using rule 82 (selection -> ELSEIF statement selection .)
    NUM             reduce using rule 82 (selection -> ELSEIF statement selection .)
    STRING          reduce using rule 82 (selection -> ELSEIF statement selection .)
    TRUE            reduce using rule 82 (selection -> ELSEIF statement selection .)
    FALSE           reduce using rule 82 (selection -> ELSEIF statement selection .)


state 265

    (66) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt . RBLOCK
    (13) echo_stmt -> echo_stmt . ECHO STRING SEMI
    (14) echo_stmt -> echo_stmt . ECHO IDVAR SEMI
    (16) echo_stmt -> echo_stmt . ECHO NUM SEMI
    (17) echo_stmt -> echo_stmt . ECHO boolean SEMI
    (18) echo_stmt -> echo_stmt . ECHO fun_declaration SEMI
    (77) statement -> echo_stmt .

  ! shift/reduce conflict for RBLOCK resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
    RBLOCK          shift and go to state 269
    ECHO            shift and go to state 39
    LBLOCK          reduce using rule 77 (statement -> echo_stmt .)
    IF              reduce using rule 77 (statement -> echo_stmt .)
    SWITCH          reduce using rule 77 (statement -> echo_stmt .)
    CASE            reduce using rule 77 (statement -> echo_stmt .)
    DEFAULT         reduce using rule 77 (statement -> echo_stmt .)
    FOR             reduce using rule 77 (statement -> echo_stmt .)
    WHILE           reduce using rule 77 (statement -> echo_stmt .)
    DO              reduce using rule 77 (statement -> echo_stmt .)
    RETURN          reduce using rule 77 (statement -> echo_stmt .)
    CLASS           reduce using rule 77 (statement -> echo_stmt .)
    PRIVATE         reduce using rule 77 (statement -> echo_stmt .)
    PUBLIC          reduce using rule 77 (statement -> echo_stmt .)
    PROTECTED       reduce using rule 77 (statement -> echo_stmt .)
    IDVAR           reduce using rule 77 (statement -> echo_stmt .)
    LPAREN          reduce using rule 77 (statement -> echo_stmt .)
    NUM             reduce using rule 77 (statement -> echo_stmt .)
    STRING          reduce using rule 77 (statement -> echo_stmt .)
    TRUE            reduce using rule 77 (statement -> echo_stmt .)
    FALSE           reduce using rule 77 (statement -> echo_stmt .)

  ! RBLOCK          [ reduce using rule 77 (statement -> echo_stmt .) ]
  ! ECHO            [ reduce using rule 77 (statement -> echo_stmt .) ]


state 266

    (69) statement_list -> statement_list statement .

    LBLOCK          reduce using rule 69 (statement_list -> statement_list statement .)
    IF              reduce using rule 69 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 69 (statement_list -> statement_list statement .)
    CASE            reduce using rule 69 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 69 (statement_list -> statement_list statement .)
    FOR             reduce using rule 69 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 69 (statement_list -> statement_list statement .)
    DO              reduce using rule 69 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 69 (statement_list -> statement_list statement .)
    CLASS           reduce using rule 69 (statement_list -> statement_list statement .)
    PRIVATE         reduce using rule 69 (statement_list -> statement_list statement .)
    PUBLIC          reduce using rule 69 (statement_list -> statement_list statement .)
    PROTECTED       reduce using rule 69 (statement_list -> statement_list statement .)
    IDVAR           reduce using rule 69 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 69 (statement_list -> statement_list statement .)
    NUM             reduce using rule 69 (statement_list -> statement_list statement .)
    STRING          reduce using rule 69 (statement_list -> statement_list statement .)
    TRUE            reduce using rule 69 (statement_list -> statement_list statement .)
    FALSE           reduce using rule 69 (statement_list -> statement_list statement .)
    RBLOCK          reduce using rule 69 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 69 (statement_list -> statement_list statement .)


state 267

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN . statement
    (71) statement -> . expression_stmt
    (72) statement -> . compount_stmt
    (73) statement -> . selection_stmt
    (74) statement -> . iteration_stmt
    (75) statement -> . return_stmt
    (76) statement -> . class_declaration
    (77) statement -> . echo_stmt
    (78) expression_stmt -> . expression SEMI
    (66) compount_stmt -> . LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK
    (79) selection_stmt -> . IF LPAREN expression RPAREN statement
    (80) selection_stmt -> . IF LPAREN expression RPAREN statement selection
    (83) selection_stmt -> . SWITCH LPAREN var RPAREN statement
    (84) selection_stmt -> . CASE NUM COLON statement BREAK SEMI
    (85) selection_stmt -> . CASE STRING COLON statement BREAK SEMI
    (86) selection_stmt -> . DEFAULT COLON statement BREAK SEMI
    (87) iteration_stmt -> . FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement
    (88) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (89) iteration_stmt -> . DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN
    (90) return_stmt -> . RETURN SEMI
    (91) return_stmt -> . RETURN expression SEMI
    (21) class_declaration -> . area CLASS ID LBLOCK attributes RBLOCK
    (22) class_declaration -> . CLASS ID LBLOCK attributes RBLOCK
    (13) echo_stmt -> . echo_stmt ECHO STRING SEMI
    (14) echo_stmt -> . echo_stmt ECHO IDVAR SEMI
    (15) echo_stmt -> . empty
    (16) echo_stmt -> . echo_stmt ECHO NUM SEMI
    (17) echo_stmt -> . echo_stmt ECHO boolean SEMI
    (18) echo_stmt -> . echo_stmt ECHO fun_declaration SEMI
    (92) expression -> . assing_var EQUAL expression
    (93) expression -> . simple_expression
    (94) expression -> . assing_var EQUAL AMPERSANT IDVAR
    (95) expression -> . expression AND expression
    (96) expression -> . expression OR expression
    (97) expression -> . assing_var
    (30) area -> . PRIVATE
    (31) area -> . PUBLIC
    (32) area -> . PROTECTED
    (143) empty -> .
    (49) assing_var -> . var
    (50) assing_var -> . var ARROW ID
    (100) simple_expression -> . additive_expression relop additive_expression
    (101) simple_expression -> . additive_expression
    (98) var -> . IDVAR
    (99) var -> . IDVAR LBRACKET expression RBRACKET
    (117) additive_expression -> . additive_expression addop term
    (118) additive_expression -> . term
    (119) additive_expression -> . term MINUSMINUS
    (120) additive_expression -> . term PLUSPLUS
    (123) term -> . term mulop factor
    (124) term -> . factor
    (127) factor -> . LPAREN expression RPAREN
    (128) factor -> . var
    (129) factor -> . NUM
    (130) factor -> . STRING
    (131) factor -> . boolean
    (132) factor -> . IDVAR LPAREN args RPAREN
    (138) boolean -> . TRUE
    (139) boolean -> . FALSE

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for LBLOCK resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IDVAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LBLOCK          shift and go to state 116
    IF              shift and go to state 27
    SWITCH          shift and go to state 28
    CASE            shift and go to state 30
    DEFAULT         shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    DO              shift and go to state 34
    RETURN          shift and go to state 117
    CLASS           shift and go to state 25
    PRIVATE         shift and go to state 20
    PUBLIC          shift and go to state 21
    PROTECTED       shift and go to state 22
    ECHO            reduce using rule 143 (empty -> .)
    ELSE            reduce using rule 143 (empty -> .)
    ELSEIF          reduce using rule 143 (empty -> .)
    TIMESTIMES      reduce using rule 143 (empty -> .)
    AMPERSANT       reduce using rule 143 (empty -> .)
    FUNCTION        reduce using rule 143 (empty -> .)
    REQUIRE         reduce using rule 143 (empty -> .)
    INCLUDE         reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CLOSETAG        reduce using rule 143 (empty -> .)
    BREAK           reduce using rule 143 (empty -> .)
    SEMI            reduce using rule 143 (empty -> .)
    RBLOCK          reduce using rule 143 (empty -> .)
    IDVAR           shift and go to state 75
    LPAREN          shift and go to state 83
    NUM             shift and go to state 84
    STRING          shift and go to state 85
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73

  ! IDVAR           [ reduce using rule 143 (empty -> .) ]
  ! PRIVATE         [ reduce using rule 143 (empty -> .) ]
  ! PUBLIC          [ reduce using rule 143 (empty -> .) ]
  ! PROTECTED       [ reduce using rule 143 (empty -> .) ]
  ! CLASS           [ reduce using rule 143 (empty -> .) ]
  ! IF              [ reduce using rule 143 (empty -> .) ]
  ! SWITCH          [ reduce using rule 143 (empty -> .) ]
  ! CASE            [ reduce using rule 143 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 143 (empty -> .) ]
  ! FOR             [ reduce using rule 143 (empty -> .) ]
  ! WHILE           [ reduce using rule 143 (empty -> .) ]
  ! DO              [ reduce using rule 143 (empty -> .) ]
  ! LBLOCK          [ reduce using rule 143 (empty -> .) ]
  ! RETURN          [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! NUM             [ reduce using rule 143 (empty -> .) ]
  ! STRING          [ reduce using rule 143 (empty -> .) ]
  ! TRUE            [ reduce using rule 143 (empty -> .) ]
  ! FALSE           [ reduce using rule 143 (empty -> .) ]

    expression                     shift and go to state 115
    additive_expression            shift and go to state 80
    statement                      shift and go to state 270
    expression_stmt                shift and go to state 108
    compount_stmt                  shift and go to state 109
    selection_stmt                 shift and go to state 110
    iteration_stmt                 shift and go to state 111
    return_stmt                    shift and go to state 112
    class_declaration              shift and go to state 113
    echo_stmt                      shift and go to state 114
    var                            shift and go to state 79
    area                           shift and go to state 118
    empty                          shift and go to state 26
    boolean                        shift and go to state 86
    assing_var                     shift and go to state 77
    simple_expression              shift and go to state 78
    term                           shift and go to state 81
    factor                         shift and go to state 82

state 268

    (89) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression . RPAREN
    (95) expression -> expression . AND expression
    (96) expression -> expression . OR expression

    RPAREN          shift and go to state 271
    AND             shift and go to state 130
    OR              shift and go to state 131


state 269

    (66) compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .

    BREAK           reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SEMI            reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSE            reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ELSEIF          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IDVAR           reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TIMESTIMES      reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    AMPERSANT       reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FUNCTION        reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PRIVATE         reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PUBLIC          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    PROTECTED       reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    REQUIRE         reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    INCLUDE         reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLASS           reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    IF              reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    SWITCH          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CASE            reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DEFAULT         reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FOR             reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    WHILE           reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    DO              reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ID              reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    ECHO            reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    CLOSETAG        reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RBLOCK          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LBLOCK          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    RETURN          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    LPAREN          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    NUM             reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    STRING          reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    TRUE            reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)
    FALSE           reduce using rule 66 (compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK .)


state 270

    (87) iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .

    IDVAR           reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    TIMESTIMES      reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    AMPERSANT       reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PRIVATE         reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PUBLIC          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    PROTECTED       reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    REQUIRE         reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    INCLUDE         reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CLASS           reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    IF              reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    SWITCH          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CASE            reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FOR             reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    WHILE           reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    DO              reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ID              reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ECHO            reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    CLOSETAG        reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    BREAK           reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    SEMI            reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ELSE            reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    RBLOCK          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    LBLOCK          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    RETURN          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    LPAREN          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    NUM             reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    STRING          reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    TRUE            reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)
    FALSE           reduce using rule 87 (iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement .)


state 271

    (89) iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .

    IDVAR           reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TIMESTIMES      reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    AMPERSANT       reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PRIVATE         reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PUBLIC          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    PROTECTED       reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    REQUIRE         reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    INCLUDE         reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLASS           reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    IF              reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SWITCH          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CASE            reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DEFAULT         reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FOR             reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    WHILE           reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    DO              reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ID              reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ECHO            reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    CLOSETAG        reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    BREAK           reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    SEMI            reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSE            reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    ELSEIF          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LBLOCK          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    RETURN          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    LPAREN          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    NUM             reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    STRING          reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    TRUE            reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)
    FALSE           reduce using rule 89 (iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDVAR in state 2 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 2 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 2 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 2 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 2 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 2 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for DO in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 4 resolved as shift
WARNING: shift/reduce conflict for TIMESTIMES in state 4 resolved as shift
WARNING: shift/reduce conflict for AMPERSANT in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 4 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 4 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 4 resolved as shift
WARNING: shift/reduce conflict for REQUIRE in state 4 resolved as shift
WARNING: shift/reduce conflict for INCLUDE in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 4 resolved as shift
WARNING: shift/reduce conflict for CASE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for DO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 10 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 88 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 89 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 90 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 91 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 114 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 178 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 178 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 178 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 178 resolved as shift
WARNING: shift/reduce conflict for CASE in state 178 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 178 resolved as shift
WARNING: shift/reduce conflict for FOR in state 178 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 178 resolved as shift
WARNING: shift/reduce conflict for DO in state 178 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 178 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 178 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 178 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 178 resolved as shift
WARNING: shift/reduce conflict for NUM in state 178 resolved as shift
WARNING: shift/reduce conflict for STRING in state 178 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 178 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 178 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 179 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 179 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 179 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 179 resolved as shift
WARNING: shift/reduce conflict for IF in state 179 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 179 resolved as shift
WARNING: shift/reduce conflict for CASE in state 179 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 179 resolved as shift
WARNING: shift/reduce conflict for FOR in state 179 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 179 resolved as shift
WARNING: shift/reduce conflict for DO in state 179 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 179 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 179 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 179 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 179 resolved as shift
WARNING: shift/reduce conflict for NUM in state 179 resolved as shift
WARNING: shift/reduce conflict for STRING in state 179 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 179 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 179 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 184 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 188 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 188 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 188 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 188 resolved as shift
WARNING: shift/reduce conflict for IF in state 188 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 188 resolved as shift
WARNING: shift/reduce conflict for CASE in state 188 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 188 resolved as shift
WARNING: shift/reduce conflict for FOR in state 188 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 188 resolved as shift
WARNING: shift/reduce conflict for DO in state 188 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 188 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 188 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 188 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 188 resolved as shift
WARNING: shift/reduce conflict for NUM in state 188 resolved as shift
WARNING: shift/reduce conflict for STRING in state 188 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 188 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 188 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 222 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 222 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 227 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 241 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 246 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 246 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 246 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 246 resolved as shift
WARNING: shift/reduce conflict for IF in state 246 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 246 resolved as shift
WARNING: shift/reduce conflict for CASE in state 246 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 246 resolved as shift
WARNING: shift/reduce conflict for FOR in state 246 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 246 resolved as shift
WARNING: shift/reduce conflict for DO in state 246 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 246 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 246 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 246 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 246 resolved as shift
WARNING: shift/reduce conflict for NUM in state 246 resolved as shift
WARNING: shift/reduce conflict for STRING in state 246 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 246 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 246 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 250 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 259 resolved as shift
WARNING: shift/reduce conflict for IF in state 259 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 259 resolved as shift
WARNING: shift/reduce conflict for CASE in state 259 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 259 resolved as shift
WARNING: shift/reduce conflict for FOR in state 259 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 259 resolved as shift
WARNING: shift/reduce conflict for DO in state 259 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 259 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 259 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 259 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 259 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 259 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 259 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 259 resolved as shift
WARNING: shift/reduce conflict for NUM in state 259 resolved as shift
WARNING: shift/reduce conflict for STRING in state 259 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 259 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 259 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 265 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 265 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 267 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 267 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 267 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 267 resolved as shift
WARNING: shift/reduce conflict for IF in state 267 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 267 resolved as shift
WARNING: shift/reduce conflict for CASE in state 267 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 267 resolved as shift
WARNING: shift/reduce conflict for FOR in state 267 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 267 resolved as shift
WARNING: shift/reduce conflict for DO in state 267 resolved as shift
WARNING: shift/reduce conflict for LBLOCK in state 267 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 267 resolved as shift
WARNING: shift/reduce conflict for IDVAR in state 267 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 267 resolved as shift
WARNING: shift/reduce conflict for NUM in state 267 resolved as shift
WARNING: shift/reduce conflict for STRING in state 267 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 267 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 267 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (declaration_list -> declaration)
WARNING: rejected rule (empty -> <empty>) in state 4
WARNING: reduce/reduce conflict in state 79 resolved using rule (assing_var -> var)
WARNING: rejected rule (factor -> var) in state 79
WARNING: reduce/reduce conflict in state 243 resolved using rule (attribute -> attribute area var_declaration)
WARNING: rejected rule (attribute -> area var_declaration) in state 243
WARNING: reduce/reduce conflict in state 244 resolved using rule (attribute -> attribute area fun_declaration)
WARNING: rejected rule (attribute -> area fun_declaration) in state 244
